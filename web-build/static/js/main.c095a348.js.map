{"version":3,"file":"static/js/main.c095a348.js","mappings":"oHAAO,MAAMA,EACI,oCADJA,EAGT,gEAHSA,EAIY,kCAJZA,EAKC,gBALDA,EAMD,WANCA,EAOK,iDAPLA,EAQM,wBARNA,EASN,OATMA,EAUI,kBAVJA,EAWI,6BAXJA,EAYE,wDAZFA,EAaF,UAbEA,EAeT,uIAfSA,EAgBA,2BAhBAA,EAiBC,8CAjBDA,EAkBC,cAlBDA,EAmBE,2BAnBFA,EAoBC,cApBDA,EAiCJ,QAjCIA,EAkCC,cAlCDA,EAmCH,SAnCGA,EAoCH,SAGGC,EACA,YADAA,EAEK,gBAFLA,EAGK,sBAHLA,EAIK,sBAJLA,EAKO,wB,0EC1CpB,IAAIC,EAAcC,EAAAA,QAAWC,IAAI,UAAUC,MACvCC,EAAeH,EAAAA,QAAWC,IAAI,UAAUG,OAC5BJ,EAAAA,QAAWC,IAAI,UAAUG,OAC1BJ,EAAAA,QAAWC,IAAI,UAAUC,MADxC,MAEMG,EAAsBC,IAC1B,MAAMC,EACoB,kBAAjBD,EAA4BA,EAAeE,WAAWF,GAC/D,OAAOG,EAAAA,QAAWC,oBAAqBX,EAAcQ,EAAa,IAAI,EAWlEI,EAAcX,EAAAA,QAAWC,IAAI,UAAUC,MACvCU,EAAeZ,EAAAA,QAAWC,IAAI,UAAUG,OACxCS,EAA8BF,EAJhB,IAKdG,EAAgCF,EAJjB,IAKfG,EAAkBb,GACfO,EAAAA,QAAWC,oBAAoBR,EAAQW,GAE1CG,EAAmBZ,GAChBK,EAAAA,QAAWC,oBAAoBN,EAASU,GAE3CG,EAAqBC,GAClBT,EAAAA,QAAWC,oBAChBQ,EAAWJ,GChCFK,EACF,UADEA,EAEJ,OAFIA,EAGD,UAHCA,GAIA,UAJAA,GAKL,UALKA,GAOF,UAPEA,GAQK,iBARLA,GASK,iBCLLC,GAASC,EAAAA,QAAWC,OAAO,CACtCC,UAASC,OAAAC,OAAA,CACPC,KAAM,GAEC,CACHxB,MAAOyB,EAAG,IACVC,UAAW,WAIjBC,aAAc,CACZC,WAAY,UACZ1B,OAAQ2B,EAAI,KACZ7B,MAAOyB,EAAG,KACVK,iBAA0C,GAC1CC,UFRyBC,KAC3B,MAAMC,EACqB,kBAAlBD,EACHA,EACA1B,WAAW0B,GACjB,OAAOzB,EAAAA,QAAWC,oBAAqBP,EAAegC,EAAc,IAAI,EEG3DC,CAAG,KAEhBC,UAAW,CACTnC,MAAOoC,EAAI,KACXlC,OAAQ2B,EAAI,IACZH,UAAW,SACXE,WAAY,UACZS,IAAKR,EAAI,KAEXS,gBAAiB,CACfC,gBAAiB,QACjBrC,OAAQ2B,EAAI,KACZ7B,MAAO,OACPwC,qBAAsB,GACtBC,oBAAqB,GACrBC,WAAY,SACZC,kBAAmBP,EAAI,IAEzBQ,QAAOtB,OAAAC,OAAA,CACLsB,UAAW,SACXC,MAAO,QACPC,WAAY,MACZ/B,SAA4CgC,EAAI,IAChDjB,UAAWF,EAAI,IACfoB,WAAY,uBAEL,CACHjC,SAAUgC,EAAI,MAIpBE,WAAU5B,OAAAC,OAAA,CACRsB,UAAW,SACXC,MAAO7B,GACP8B,WAAY,MACZ/B,SAA4CgC,EAAI,IAChDjB,UAAWF,EAAI,IACfsB,WAAY,GACZF,WAAY,0BAEL,CACHjC,SAAUgC,EAAI,MAIpBI,aAAY9B,OAAAC,OAAA,CACV8B,cAAe,MACfnD,OAAQ2B,EAAI,IACZ7B,MAAOyB,EAAG,IACVM,UAAWF,EAAI,IACfyB,eAAgB,gBAET,CACHD,cAAe,MACfrD,MAAO,OACPsD,eAAgB,eAChB5B,UAAU,WAIhB6B,aAAc,CACZ/B,KAAM,EACNkB,WAAY,UAEdc,UAAW,CACThC,KAAM,GAERiC,IAAGnC,OAAAC,OAAA,GAEM,CACHvB,MAAO,IACP0D,YAAY,GACZC,WAAW,KAIjBC,KAAItC,OAAAC,OAAA,GAEK,CACHvB,MAAO,QClGF6D,GAAS,CAGpBC,0BAA2BC,EAAQ,MACnCC,cAAeD,EAAQ,MACvBE,eAAgBF,EAAQ,MACxBG,WAAYH,EAAQ,MACpBI,cAAeJ,EAAQ,MACvBK,aAAcL,EAAQ,MAItBM,UAAWN,EAAQ,MACnBO,YAAaP,EAAQ,KACrBQ,YAAaR,EAAQ,MACrBS,SAAUT,EAAQ,O,mCCVb,MAAMU,GAAiBA,EAAEC,UAASC,aAAYC,YAEjDC,EAAAA,GAAAA,KAACC,GAAAA,QAAgB,CACfF,MAAO,CAAC1D,GAAO6D,YAAaH,GAC5BF,QAASA,EACTM,cAAe,GAAIC,UACnBJ,EAAAA,GAAAA,KAACK,EAAAA,QAAI,CAACN,MAAO1D,GAAOiE,YAAYF,SAAEN,MAK3BS,GAAcA,EAAEV,UAASC,aAAYC,YAE9CC,EAAAA,GAAAA,KAACC,GAAAA,QAAgB,CACfF,MAAO,CAAC1D,GAAOmE,SAAUT,GACzBF,QAASA,EACTM,cAAe,GAAIC,UACnBJ,EAAAA,GAAAA,KAACK,EAAAA,QAAI,CAACN,MAAO1D,GAAOoE,UAAUL,SAAEN,MAKhCzD,GAASC,EAAAA,QAAWC,OAAO,CAC/B2D,YAAa,CACX/E,MAAOoC,EAAI,KACXlC,OAAuC2B,EAAI,IAC3C0D,aAAc,EACdjC,eAAgB,SAChBZ,WAAY,SACZ8C,gBAAiB,GACjBjD,gBAAiBtB,GAEnBkE,YAAa,CACXrC,MAAO,QACP9B,SAAU,GACV+B,WAAY,MACZF,UAAW,SACZI,WAAW,0BAEZoC,SAAU,CACRrF,MAAOoC,EAAI,KACXlC,OAAuC2B,EAAI,IAC3CyB,eAAgB,SAChBZ,WAAY,SACZ6C,aAAc,EACdE,YAAaxE,EACbyE,YAAa,GAEfJ,UAAW,CACTxC,MAAO7B,EACPD,SAAU,GACV+B,WAAY,MACZE,WAAW,4B,QCjDR,MAAM0C,GAAgBC,EAAAA,YA4CtBC,eAAeC,GAASC,EAAMC,GACnCC,QAAQC,IAAI,uDAA8CH,EAAM,eAAgBC,GAEhFL,GAAcQ,SAASL,SAASC,EAAMC,EACxC,CC9CA,MAgCA,GAhCyBI,KAErBC,EAAAA,GAAAA,MAACC,EAAAA,QAAI,CAAC1B,MAAO,CAAC1D,GAAOG,WAAW4D,SAAA,EAC9BJ,EAAAA,GAAAA,KAAC0B,EAAAA,QAAS,CAACC,aAAa,EAAMjE,gBAAiB,iBAC/C8D,EAAAA,GAAAA,MAACI,GAAAA,eAAc,CACbxF,OAAQ,CAACA,GAAuBA,IAChCyF,MAAO,CAAEC,EAAG,EAAGC,EAAG,GAClBC,IAAK,CAAEF,EAAG,EAAGC,EAAG,GAChBhC,MAAO1D,GAAOqC,aAAa0B,SAAA,EAE3BJ,EAAAA,GAAAA,KAACiC,EAAAA,QAAK,CAACC,OAAQlD,GAAOI,eAAgBW,MAAO1D,GAAOiB,aACpD0C,EAAAA,GAAAA,KAACiC,EAAAA,QAAK,CAACC,OAAQlD,GAAOK,WAAYU,MAAO1D,GAAOS,gBAChDkD,EAAAA,GAAAA,KAACyB,EAAAA,QAAI,CAAC1B,MAAO1D,GAAOsC,aACpB6C,EAAAA,GAAAA,MAACC,EAAAA,QAAI,CAAC1B,MAAO1D,GAAOoB,gBAAgB2C,SAAA,EAClCJ,EAAAA,GAAAA,KAACK,EAAAA,QAAI,CAACN,MAAO,CAAC1D,GAAO0B,SAASqC,SAAEtF,KAChCkF,EAAAA,GAAAA,KAACK,EAAAA,QAAI,CAACN,MAAO1D,GAAOgC,WAAW+B,SAAEtF,KACjC0G,EAAAA,GAAAA,MAACC,EAAAA,QAAI,CAAC1B,MAAO,CAAC1D,GAAOkC,cAAc6B,SAAA,EACjCJ,EAAAA,GAAAA,KAACO,GAAW,CAACT,WAAYhF,EACvBiF,MAAO1D,GAAOuC,OAEhBoB,EAAAA,GAAAA,KAACJ,GAAc,CACbE,WAAYhF,EACZ+E,QAASA,IAAMoB,GAASlG,GACxBgF,MAAO1D,GAAO0C,mBC7Bf1C,GAASC,EAAAA,QAAWC,OAAO,CACtCC,UAASC,OAAAC,OAAA,CACPC,KAAM,EACNe,gBAAiB,QACjByE,QAAS,IAEF,CACHhH,MAAOyB,EAAG,IACVC,UAAU,WAIhBuF,MAAO,CACLlE,WAAY,MACZ/B,SAA4CgC,EAAI,IAChDC,WAAY,sBACZH,MAAO7B,EACPc,UAAWF,EAAI,IACfsB,WAAY,KACZ+D,cAAe,GAEjBC,SAAWC,GAAe9F,OAAAC,OAAA,CACxBQ,UAAWF,EAAI,IACf7B,MAAOyB,EAAG,IACV4F,aAAcxF,EAAI,IAClBU,gBAAiB6E,EAAkBnG,EAAiBA,IAE7C,CACHjB,MAAOyB,EAAG,IACV6B,eAAe,WAIrBgE,UAAW,CAAEvF,UAAW,GACxBwF,UAAW,CAAEvH,MAAO,GAAIE,OAAQ,MAChCsD,UAAW,CAAEhC,KAAM,GACnBgG,aAAc,CAAEC,aAAc,KCvB1BvG,GAASC,EAAAA,QAAWC,OAAO,CAC/BC,UAASC,OAAAC,OAAA,CACP8B,cAAe,MACfgE,aAAcxF,EAAI,IAClBa,WAAY,SACZC,kBAAmBP,EAAI,GACvBL,UAA6CF,EAAI,KAE1C,CACHyB,eAAgB,aAChBX,kBAAmB,IAIzB+E,cAAe,CACbhG,UAAW,cAEbiG,IAAK,CACH/F,WAAY,UACZ1B,OAAgCuB,EAAG,KACnCzB,MAA+ByB,EAAG,KAClCM,UAAmCF,EAAI,IAEzC+F,UAAW,CACT9E,MAAO7B,GACPgC,WAAY,yBACZjC,SAAU,GACV+B,WAAY,MACZY,WAAY,UAIhB,GA3CekE,EAAGnB,QAAOG,MAAKnC,cAE1B2B,EAAAA,GAAAA,MAACC,EAAAA,QAAI,CAAC1B,MAAO1D,GAAOG,UAAU4D,SAAA,EAC5BJ,EAAAA,GAAAA,KAACC,GAAAA,QAAgB,CAACJ,QAASA,EAASE,MAAO1D,GAAOwG,cAAczC,UAC9DJ,EAAAA,GAAAA,KAACiC,EAAAA,QAAK,CAACC,OAAQlD,GAAOQ,UAAWO,MAAO1D,GAAOyG,SAEjD9C,EAAAA,GAAAA,KAACK,EAAAA,QAAI,CAACN,MAAO1D,GAAO0G,UAAU3C,SAAE,QAAQyB,KAASG,S,eCAvD,MAAMiB,IAAkBC,EAAAA,EAAAA,aACtB,EAEIC,cACAC,QACAC,eACAC,eACAC,kBACAC,YACAC,cACAC,kBACA3D,QACA4D,uBACAC,YACAC,gBACAC,YACAC,MACAC,eACAC,cACAC,kBACAC,WACAC,YACAC,kBAEFC,KAGE9C,EAAAA,GAAAA,MAACC,EAAAA,QAAI,CAAC1B,MAAO,CAAC1D,GAAOG,UAAWuD,GAAOK,SAAA,CACpCoD,IACCxD,EAAAA,GAAAA,KAACiC,EAAAA,QAAK,CACJlC,MAAO,CAAAtD,OAAAC,OAAA,GAAKgH,IACZ3G,WAAW,UACXmF,OAAQuB,KAGZzD,EAAAA,GAAAA,KAACuE,GAAAA,QAAS,CACRD,IAAKA,EACLnB,YAAaA,EACbqB,qBAAsBpI,GACtBiH,aAAcA,EACdD,MAAOA,EACPE,aAAcA,EACdC,gBAAiBA,EACjBxD,MAAO,CAAC1D,GAAOoI,WAAWpI,GAAOG,WACjCmH,qBAAsBA,EACtBC,UAAWA,EACXC,cAAeA,EACfK,gBAAiBA,EACjBF,aAAcA,EACdC,YAAaA,EACbG,UAAWA,EACXC,eAAgBA,IAEjBN,IACC/D,EAAAA,GAAAA,KAACC,GAAAA,QAAgB,CAACJ,QAASsE,EAAS/D,UAClCJ,EAAAA,GAAAA,KAACiC,EAAAA,QAAK,CACJlC,MAAO,CAAC1D,GAAOqI,KAAMhB,GACrB3G,WAAW,UACXmF,OAAQ4B,WAShBzH,GAASC,EAAAA,QAAWC,OAAO,CAC/BC,UAASC,OAAAC,OAAA,CACP8B,cAAe,MACfX,WAAY,SACZX,UAAWF,EAAI,IACfwF,aAAcxF,EAAI,IAClB2H,kBAAmB,EACnBC,kBAAmBxI,EACnBD,SAAUgC,EAAI,IACdF,MAAO,QACP5C,OAAQ2B,EAAI,KAEN,CACF6H,aAAa,SAInBH,KAAM,CACJI,QAAS,IAEXL,WAAY,CAAC9H,KAAM,EAAGsB,MAAO,QAAS9B,SAAUgC,EAAI,IAAKG,WAAY,MAGvE,MC/DMjC,GAASC,EAAAA,QAAWC,OAAO,CAC/BwI,kBAAmB,CACjBvG,cAAe,MACfX,WAAY,SACZmH,eAAgBhI,EAAI,IAEtBiI,SAAQxI,OAAAC,OAAA,CACNvB,MAAOoC,EAAI,IACXlC,OAAQ2B,EAAI,IACZ6D,YAAatD,EAAI,GACjBmD,aAAc,EACdhD,gBAAiB,QACjBkD,YAAaxE,EACbqC,eAAgB,SAChBZ,WAAY,SACZgB,YAAatB,EAAI,KAEV,CACHpC,MAAOoC,EAAI,GACXsD,YAAY,EACZxF,OAAQ2B,EAAI,IACZ6B,YAAatB,EAAI,KAIvB2H,QAAS,CACPxH,gBAAiBtB,EACjBwE,YAAaxE,GAEf+I,KAAM,CACJlH,MAAO,QACP9B,SAAUgC,EAAI,IACdiH,kBAAmB,UAErBC,MAAK5I,OAAAC,OAAA,CACHwB,WAAY,MACZD,MAAO,QACP9B,SAA4CgC,EAAI,IAChDC,WAAY,yBACZJ,UAAW,OACXa,YAA+CtB,EAAI,KAE5C,CACHsB,YAAatB,EAAI,KAIvB+H,cAAe,CACb3I,KAAM,GAER4I,UAAS9I,OAAAC,OAAA,CACPuB,MAAO7B,EACPgC,WAAY,yBAEL,CACHJ,UAAW,cAOnB,GA/FuBwH,EAAG3F,UAASE,YACjC,MAAO0F,EAAWC,IAAgBC,EAAAA,EAAAA,UAAS,MAErCC,EAAiBA,KACrBF,GAAcD,GACV5F,GACFA,GAAS4F,EACX,EAGF,OACEjE,EAAAA,GAAAA,MAACC,EAAAA,QAAI,CAAC1B,MAAO,CAAC1D,GAAO0I,kBAAmBhF,GAAOK,SAAA,EAC7CJ,EAAAA,GAAAA,KAACC,GAAAA,QAAgB,CAACJ,QAAS+F,EAAgBzF,cAAe,GAAIC,UAC5DJ,EAAAA,GAAAA,KAACyB,EAAAA,QAAI,CAAC1B,MAAO,CAAC1D,GAAO4I,SAAUQ,GAAapJ,GAAO6I,SAAS9E,SACzDqF,IAAazF,EAAAA,GAAAA,KAACK,EAAAA,QAAI,CAACN,MAAO1D,GAAO8I,KAAK/E,SAAC,gBAG5CJ,EAAAA,GAAAA,KAACC,GAAAA,QAAgB,CAACJ,QAAS+F,EAAgBzF,cAAe,GAAKJ,MAAO1D,GAAOiJ,cAAclF,UACzFoB,EAAAA,GAAAA,MAACnB,EAAAA,QAAI,CAACN,MAAO1D,GAAOgJ,MAAMjF,SAAA,CACvBtF,GACDkF,EAAAA,GAAAA,KAACK,EAAAA,QAAI,CAACN,MAAO,CAAC1D,GAAOgJ,MAAOhJ,GAAOkJ,WAAWnF,SAC3CtF,IAEFA,GACDkF,EAAAA,GAAAA,KAACK,EAAAA,QAAI,CAACN,MAAO,CAAC1D,GAAOgJ,MAAOhJ,GAAOkJ,WAAWnF,SAC3CtF,WAIF,E,eC/BX,MAwBMuB,GAASC,EAAAA,QAAWC,OAAO,CAC/BsJ,cAAe,CACb3I,UAAWF,EAAI,IACf3B,OAAQ2B,EAAI,GACZU,gBAAiB,UACjBgD,aAAc,GAEhBoF,SAAU,CACRzK,OAAQ2B,EAAI,GACZY,oBAAqB,EACrBmI,uBAAwB,EACxBrI,gBAAiB,WAEnBsI,YAAaA,CAACC,EAAeC,KAAQ,CACnC/K,MAAO8K,EAAcE,YAAY,CAC/BC,WAAY,CAAC,EAAG,KAChBC,YAAa,CAAC,KAAM,UAEtB1I,qBAAmC,MAAbuI,EAAmB,EAAI,EAC7CI,wBAAsC,MAAbJ,EAAmB,EAAI,MAIpD,GA/CoBK,EAAEL,WAAUnG,YAC9B,MAAMkG,GAAgBO,EAAAA,EAAAA,QAAO,IAAIC,GAAAA,QAASC,MAAM,IAAIpF,QAUpD,OARAqF,EAAAA,EAAAA,YAAU,KACRF,GAAAA,QAASG,OAAOX,EAAe,CAC7BY,QAASX,EACTY,SAAU,IACVC,iBAAiB,IAChBlF,OAAO,GACT,CAACqE,EAAUD,KAGZjG,EAAAA,GAAAA,KAACyB,EAAAA,QAAI,CAAC1B,MAAO1D,GAAOwJ,cAAczF,UAChCJ,EAAAA,GAAAA,KAACyG,GAAAA,QAAShF,KAAI,CACZ1B,MAAO,CACL1D,GAAOyJ,SACPzJ,GAAO2J,YAAYC,EAAeC,GAClCnG,MAGC,ECiFX,GA7F4BiH,EAAGC,iBAC7B,MAAOC,EAAOC,IAAYxB,EAAAA,EAAAA,UAAS,KAC5ByB,EAAUC,IAAe1B,EAAAA,EAAAA,UAAS,KAClC2B,EAAeC,IAAoB5B,EAAAA,EAAAA,WAAS,IAC5C6B,EAAYC,IAAiB9B,EAAAA,EAAAA,WAAS,GACvC+B,GAAWlB,EAAAA,EAAAA,QAAO,MAClBmB,GAAYnB,EAAAA,EAAAA,QAAO,OAClBoB,EAAaC,IAAkBlC,EAAAA,EAAAA,UAAS,GAOzCpD,EAAkB2E,EAAMY,OAAS,GAAKV,EAASU,OAAS,GAAKN,EAW7DO,EAAwCtG,EAAAA,QAI9C,OACEzB,EAAAA,GAAAA,KAAC+H,EAAa,CAAChI,MAAO,CAACpD,KAAK,GAAIkD,QAJdmI,KACyB,EAGU5H,UACrDoB,EAAAA,GAAAA,MAACC,EAAAA,QAAI,CAAC1B,MAAO,CAAC1D,GAAOG,WAAW4D,SAAA,EAC9BJ,EAAAA,GAAAA,KAAC0B,EAAAA,QAAS,CAACC,aAAa,EAAMjE,gBAAiB,iBAC/CsC,EAAAA,GAAAA,KAACgD,GAAM,CAACnB,MAAO,EAAGG,IAAK,EAAGnC,QAASA,IAAMoH,EAAWgB,YAEpDjI,EAAAA,GAAAA,KAACuG,GAAW,CAACL,SAAU,QAEvB1E,EAAAA,GAAAA,MAACnB,EAAAA,QAAI,CAACN,MAAO1D,GAAO+F,MAAMhC,SAAA,CAAEtF,EAA8B,QAQ1DkF,EAAAA,GAAAA,KAACiD,GAAe,CACdqB,IAAKoD,EACLvE,YAAarI,EACbwI,aAAa,gBACbO,cAAc,OACdT,MAAO8D,EACP7D,aAAc8D,EACdjD,gBAAiBA,IAAMyD,EAAUrG,QAAQ4G,WAG3ClI,EAAAA,GAAAA,KAACiD,GAAe,CACdqB,IAAKqD,EACLxE,YAAarI,EACbwI,aAAa,UACbO,cAAc,OACd9D,MAAO1D,GAAOoG,UACdc,gBAAiB+D,EACjBlE,MAAOgE,EACP/D,aAAcgE,EACd3D,gBAAiBrH,GAAOqG,UACxBoB,UAAWwD,EAAgBtI,GAAOS,YAAcT,GAAOU,YACvDqE,KAAG,EACHI,SAAUA,IAAMoD,GAAkBD,MAGpCtH,EAAAA,GAAAA,KAACyB,EAAAA,QAAI,CAAC1B,MAAO1D,GAAOsC,aACpB6C,EAAAA,GAAAA,MAACC,EAAAA,QAAI,CAAC1B,MAAO1D,GAAOsG,aAAavC,SAAA,EAC/BJ,EAAAA,GAAAA,KAACwF,GAAc,CACbH,MAAOvK,EACP+E,QAAS4F,GAjEW0C,EAAC1C,EAAWgC,KACtCA,EAAchC,GACdrE,QAAQC,IAAI,gCAAiCoE,EAAU,EA+D3B0C,CAAoB1C,EAAWgC,MAGvDzH,EAAAA,GAAAA,KAACJ,GAAc,CACbE,WAAYhF,EACZiF,MAAO,CAAC1D,GAAOiG,SAASC,IACxB1C,QAASA,KACH0C,IACFtB,GAASlG,GA/Df6M,EAHa,GAIfC,EAAeD,EAAc,GAgEvB,WAKQ,ECjGPvL,GAASC,EAAAA,QAAWC,OAAO,CACtCC,UAASC,OAAAC,OAAA,CACPC,KAAM,EACNe,gBAAiB,QACjByE,QAAS,IAEF,CACHhH,MAAOyB,EAAG,IACVC,UAAU,WAIhBuF,MAAO,CACLlE,WAAY,MACZ/B,SAA4CgC,EAAI,IAChDC,WAAY,sBACZH,MAAO7B,EACPc,UAAWF,EAAI,IACfsB,WAAY,KACZ+D,cAAe,GAEjB+F,SAAU,CACRjM,SAA4CgC,EAAI,IAChDD,WAAY,MACZE,WAAY,yBACZH,MAAO7B,GACPc,UAAWF,EAAI,KAEjBqL,kBAAmB,CACjB7J,cAAe,MACfC,eAAgB,eAChBvB,UAAWF,EAAI,KAEjBsL,eAAgB,CACdrK,MAAO7B,GACPD,SAAUgC,EAAI,IACdD,WAAY,OAEdqK,iBAAgB9L,OAAAC,OAAA,CACdiE,gBAAiB,EACjBiE,kBAAmBxI,EACnBsE,aAAc,EACdG,YAAa,EACb8D,kBAAmB,EACnB6D,SAAU,KAEJ,CACFA,SAAU,MAIhBC,iBAAgBhM,OAAAC,OAAA,CACdmB,WAAY,SACZY,eAAgB,eAChBD,cAAe,OAET,CACFC,eAAgB,iBAItBiK,YAAa,CACXvM,SAAUgC,EAAI,KAGhBwK,kBAAmB,CACjBxN,MAAO,KAGTyN,UAAW,CACTzN,MAAO,IACP0F,YAAa,EACb8D,kBAAmB,EACnBC,kBAAmBxI,GAGrByM,gBAAepM,OAAAC,OAAA,CACbkI,kBAAmBxI,EACnBsE,aAAc,EACdG,YAAa,EACb8D,kBAAmB,EACnBzH,UAAW,IACX4H,QAAS,GACT3I,SAAU,IAGJ,CACHhB,MAAMyB,EAAG,IACTiI,aAAa,SAKlBJ,WAAY,CACV3F,WAAYvB,EAAI,IAChBpC,MAAOoC,EAAI,KACXmD,aAAc,EACdiE,kBAAmB,EACnBS,kBAAmB,UAErB0D,YAAa,CACX3M,SAAUgC,EAAI,IACdF,MAAO,UACPa,WAAY,EACZ5B,UAAW,EACXgB,WAAY,MACZE,WAAY,0BAEd2K,cAAe,CACb5M,SAA4CgC,EAAI,IAChDD,WAAY,MACZE,WAAY,yBACZH,MAAO7B,GACP4B,UAAW,OACXwE,aAAcxF,EAAI,KAEpBL,KAAM,CACJA,KAAM,GAERqM,kBAAmB,CACjB7N,MAAO,IAETmH,SAAU2G,GAAmBxM,OAAAC,OAAA,CAC3BvB,MAAOyB,EAAG,IACV4F,aAAcxF,EAAI,IAClBU,gBAAiBuL,EAAsB7M,EAAiBA,IAEjD,CACHjB,MAAOyB,EAAG,IACV6B,eAAe,a,eC3HvB,MAiEA,GAjE4ByK,EAAGjC,iBAC7B,MAAOkC,EAAUC,IAAezD,EAAAA,EAAAA,UAAS,SAClC0D,EAASC,IAAc3D,EAAAA,EAAAA,UAAS,CAAE4D,YAAa,UAC/CC,EAAOC,IAAY9D,EAAAA,EAAAA,UAAS,IAE7BsD,EAAsBO,EAAM1B,OAAS,EACrCC,EAAwCtG,EAAAA,QAI9C,OACEzB,EAAAA,GAAAA,KAAC+H,EAAa,CAAChI,MAAO,CAACpD,KAAK,GAAIkD,QAJdmI,KACyB,EAGU5H,UACnDoB,EAAAA,GAAAA,MAACC,EAAAA,QAAI,CAAC1B,MAAO1D,GAAOG,UAAU4D,SAAA,EAC5BJ,EAAAA,GAAAA,KAACgD,GAAM,CAACnB,MAAO,EAAGG,IAAK,EAAGnC,QAASA,IAAMoH,EAAWgB,YACpDjI,EAAAA,GAAAA,KAACuG,GAAW,CAACL,SAAU,QACvB1E,EAAAA,GAAAA,MAACnB,EAAAA,QAAI,CAACN,MAAO1D,GAAO+F,MAAMhC,SAAA,CAAEtF,EAAsB,QAClD0G,EAAAA,GAAAA,MAACnB,EAAAA,QAAI,CAACN,MAAO1D,GAAO+L,SAAShI,SAAA,CAAEtF,EAAoB,QACnDkF,EAAAA,GAAAA,KAACyB,EAAAA,QAAI,CAAC1B,MAAO1D,GAAOgM,kBAAkBjI,UACpCoB,EAAAA,GAAAA,MAACC,EAAAA,QAAI,CAAC1B,MAAO1D,GAAOqN,WAAWtJ,SAAA,EAC7BJ,EAAAA,GAAAA,KAACK,EAAAA,QAAI,CAACN,MAAO1D,GAAOiM,eAAelI,SAAEtF,KACrCkF,EAAAA,GAAAA,KAACyB,EAAAA,QAAI,CAAC1B,MAAO1D,GAAOoM,iBAAiBrI,UACnCJ,EAAAA,GAAAA,KAAC2J,GAAAA,QAAyB,CACxBR,SAAUA,EACVC,YAAcQ,IACZR,EAAYQ,GACZN,EAAW,CAAEC,YAAaK,GAAO,EAEnCC,kBAAmBP,EACnBE,MAAOA,EACPC,SAAUA,EACVK,2BAA4BzN,GAAOkM,iBACnCwB,sBAAuB1N,GAAOqM,YAC9BsB,eAAgB3N,GAAOsM,kBACvBsB,aAAc5N,GAAOuM,UACrBsB,YAAa7N,GAAOwM,0BAY5B7I,EAAAA,GAAAA,KAACyB,EAAAA,QAAI,CAAC1B,MAAO1D,GAAOM,QACpBqD,EAAAA,GAAAA,KAACK,EAAAA,QAAI,CAACN,MAAO1D,GAAO0M,cAAc3I,SAAEtF,KACpCkF,EAAAA,GAAAA,KAACJ,GAAc,CACbE,WAAYhF,EACZiF,MAAO1D,GAAOiG,SAAS2G,GACvBpJ,QAASA,KACHoJ,GACFhI,GAASlG,EAA8B,CACrCyO,QACAV,YAAaO,EAAQE,aAAeJ,GAExC,QAIQ,ECnEP9M,GAASC,EAAAA,QAAWC,OAAO,CACtCC,UAASC,OAAAC,OAAA,CACPC,KAAM,EACNe,gBAAiB,QACjByE,QAAS,IAEF,CACHhH,MAAOyB,EAAG,IACVC,UAAU,WAIhBuF,MAAO,CACLlE,WAAY,MACZ/B,SAA4CgC,EAAI,IAChDC,WAAY,sBACZH,MAAO7B,EACPc,UAAWF,EAAI,IACfsB,WAAY,KACZ+D,cAAe,GAEjB+F,SAAU,CACRjM,SAA4CgC,EAAI,IAChDD,WAAY,MACZE,WAAY,yBACZH,MAAO7B,GACPc,UAAWF,EAAI,KAEjBmN,QAAS,CACPhO,SAA4CgC,EAAI,IAChDD,WAAY,MACZhB,UAAW,EACXkB,WAAY,yBACZH,MAAO7B,IAETgO,SAAQ3N,OAAAC,OAAA,CACNuB,MAAO7B,EACPD,SAA4CgC,EAAI,IAChDD,WAAY,MACZhB,UAAW,EACXkB,WAAY,wBACZU,WAAYvB,EAAI,IAET,CACHuB,WAAYvB,EAAI,KAItB8M,aAAc,CACZnN,UAAWF,EAAI,KAEjBsN,KAAI7N,OAAAC,OAAA,CACFgE,aAAc,EACdG,YAAa,EACbnD,gBAAiBtB,GACjBuI,kBAAmB,EACnBxJ,MAAOoC,EAAI,IACXlC,OAAQ2B,EAAI,KAEL,CACH7B,MAAOoC,EAAI,IACXlC,OAAQ2B,EAAI,MAIlBuN,SAAU,CACRtM,MAAO,QACPG,WAAY,yBACZjC,SAAUgC,EAAI,IACdH,UAAW,SACXwM,WAAYxN,EAAI,IAElByN,cAAe,CACbjM,cAAe,MACftB,UAAWF,EAAI,IACfyB,eAAgB,UAElBiM,SAAU,CACRvO,SAA4CgC,EAAI,IAChDD,WAAY,MACZD,MAAO7B,GACPgC,WAAY,0BAEdO,UAAW,CAAEhC,KAAM,GACnBgO,iBAAkB,CAAEnM,cAAe,MAAOX,WAAY,UACtDyE,SAAWsI,GAAanO,OAAAC,OAAA,CACtBvB,MAAOyB,EAAG,IACV4F,aAAcxF,EAAI,IAClBU,gBAAiBkN,EAAgBxO,EAAiBA,IAE3C,CACHjB,MAAOyB,EAAG,IACV6B,eAAe,a,eChFvB,MA0FA,GA1F8BoM,EAAGC,QAAO7D,iBACtC,MAAM,MAAEuC,EAAK,YAAEV,GAAgBgC,EAAM3J,QAC9B4J,EAASC,IAAcrF,EAAAA,EAAAA,UAAS,OAEhCvC,EAAO6H,IAAYtF,EAAAA,EAAAA,UAAS,KAC5BuF,EAASC,IAA0BC,EAAAA,GAAAA,qBAAoB,CAC5DhI,QACA6H,aAEI3G,GAAM+G,EAAAA,GAAAA,kBAAiB,CAAEjI,QAAOkI,UANnB,IAObV,EAPa,IAOGxH,EAAM0E,OACtBC,EAAwCtG,EAAAA,QAI9C,OACEzB,EAAAA,GAAAA,KAAC+H,EAAa,CAAChI,MAAO,CAACpD,KAAK,GAAIkD,QAJdmI,KACyB,EAGU5H,UACrDoB,EAAAA,GAAAA,MAACC,EAAAA,QAAI,CAAC1B,MAAO1D,GAAOG,UAAU4D,SAAA,EAC5BJ,EAAAA,GAAAA,KAACgD,GAAM,CAACnB,MAAO,EAAGG,IAAK,EAAGnC,QAASA,IAAMoH,EAAWgB,YACpDjI,EAAAA,GAAAA,KAACuG,GAAW,CACVL,SAAU,IACVnG,MAAO,CAAEgG,uBAAwB,EAAGwF,sBAAuB,MAE7D/J,EAAAA,GAAAA,MAACnB,EAAAA,QAAI,CAACN,MAAO1D,GAAO+F,MAAMhC,SAAA,CAAEtF,EAAkB,QAC9C0G,EAAAA,GAAAA,MAACnB,EAAAA,QAAI,CAACN,MAAO1D,GAAO+L,SAAShI,SAAA,CAAEtF,EAAmB,QAElD0G,EAAAA,GAAAA,MAACC,EAAAA,QAAI,CAAC1B,MAAO1D,GAAOsO,iBAAiBvK,SAAA,EACnCJ,EAAAA,GAAAA,KAACK,EAAAA,QAAI,CAACN,MAAO1D,GAAO8N,QAAQ/J,SAAE,GAAG0I,KAAeU,OAChDxJ,EAAAA,GAAAA,KAACC,GAAAA,QAAgB,CAAAG,UACfJ,EAAAA,GAAAA,KAACK,EAAAA,QAAI,CAACN,MAAO1D,GAAO+N,SAAShK,SAAEtF,UAGnCkF,EAAAA,GAAAA,KAACyB,EAAAA,QAAI,CAAC1B,MAAO1D,GAAOgO,aAAajK,UAC/BJ,EAAAA,GAAAA,KAACwL,GAAAA,UAAS/O,OAAAC,OAAA,CACR4H,IAAKA,GACD4G,EAAO,CACXO,aAAa,EACbrI,MAAOA,EACPC,aAAcqI,IACZT,EAASS,GACTV,EAAWU,EAAK,EAElBJ,UAvCW,EAwCXK,UAAWtP,GAAOuP,cAClBtI,aAAa,aACbuI,gBAAgB,cAChBC,aAEW,gBAEXC,OAAO,gBACPC,WAAYA,EAAGC,QAAOC,SAAQC,gBAC5BnM,EAAAA,GAAAA,KAACyB,EAAAA,QAAI,CAAC1B,MAAO1D,GAAOiO,KAAKlK,UACvBJ,EAAAA,GAAAA,KAACK,EAAAA,QAAI,CAEHN,MAAO,CAAC1D,GAAOkO,UACf6B,SAAUjB,EAAuBc,GAAO7L,SACvC8L,IAAWC,GAAYnM,EAAAA,GAAAA,KAACqM,GAAAA,OAAM,IAAM,OAHhCJ,WASfzK,EAAAA,GAAAA,MAACC,EAAAA,QAAI,CAAC1B,MAAO1D,GAAOoO,cAAcrK,SAAA,EAChCJ,EAAAA,GAAAA,KAACK,EAAAA,QAAI,CAACN,MAAO1D,GAAOqO,SAAStK,SAAEtF,KAC/BkF,EAAAA,GAAAA,KAACC,GAAAA,QAAgB,CAAAG,UACfJ,EAAAA,GAAAA,KAACK,EAAAA,QAAI,CACHN,MAAO,CACL1D,GAAOqO,SACP,CACEzM,MAAO7B,EACP0C,WAAYvB,EAAI,GAChBa,WAAY,2BACZjC,SAA2CgC,EAAI,MAEjDiC,SACDtF,UAIPkF,EAAAA,GAAAA,KAACyB,EAAAA,QAAI,CAAC1B,MAAO1D,GAAOsC,aACpBqB,EAAAA,GAAAA,KAACJ,GAAc,CACbE,WAAYhF,EACZiF,MAAO1D,GAAOiG,SAASsI,SAGX,EC7Fd0B,IAAYC,EAAAA,EAAAA,WAEZC,GAAoBA,KAAA,CACxBC,aAAa,EACbC,kBAAkB,EAClBC,wBAAyB,OACzBC,UAAW,qBA8Bb,GA3BaC,KAETrL,EAAAA,GAAAA,MAAC8K,GAAUQ,UAAS,CAACC,iBAAkBhS,EAA2BqF,SAAA,EAChEJ,EAAAA,GAAAA,KAACsM,GAAUU,OAAM,CACf9L,KAAMnG,EACNkS,UAAW1L,GACX2L,QAASV,MAEXxM,EAAAA,GAAAA,KAACsM,GAAUU,OAAM,CACf9L,KAAMnG,EACNkS,UAAWjG,GACXkG,QAASV,MAEXxM,EAAAA,GAAAA,KAACsM,GAAUU,OAAM,CACf9L,KAAMnG,EACNkS,UAAW/D,GACXgE,QAASV,MAEXxM,EAAAA,GAAAA,KAACsM,GAAUU,OAAM,CACf9L,KAAMnG,EACNkS,UAAWpC,GACXqC,QAASV,QChCXW,IAAkBZ,EAAAA,EAAAA,WAEXa,GAAkBA,KAE3BpN,EAAAA,GAAAA,KAACqN,EAAAA,QAAmB,CAAC/I,IAAKxD,GAAcV,UACtCJ,EAAAA,GAAAA,KAACmN,GAAgBL,UAAS,CAACC,iBAAkBhS,EAAsBqF,UACjEJ,EAAAA,GAAAA,KAACmN,GAAgBH,OAAM,CACrB9L,KAAMnG,EACNkS,UAAWJ,GACXK,QAAS,CAACT,aAAa,S,eCb1B,MAAMa,GAAc,CACzB,uBAAwBpO,EAAQ,KAChC,sBAAuBA,EAAQ,MAC/B,yBAA0BA,EAAQ,MAClC,wBAAyBA,EAAQ,MACjC,uBAAwBA,EAAQ,MAChC,uBAAwBA,EAAQ,MAChC,0BAA2BA,EAAQ,MACnC,yBAA0BA,EAAQ,KAClC,2BAA4BA,EAAQ,MACpC,4BAA6BA,EAAQ,MACrC,6BAA8BA,EAAQ,O,eCNxC,MAeA,GAfYqO,KACV,MAAOC,IAAeC,EAAAA,GAAAA,UAASH,IAC/B,OAAKE,GAQHxN,EAAAA,GAAAA,KAAC0N,EAAAA,uBAAsB,CAAC3N,MAAO,CAAEpD,KAAM,GAAIyD,UACzCJ,EAAAA,GAAAA,KAACoN,GAAe,OAPhBpN,EAAAA,GAAAA,KAACyB,EAAAA,QAAI,CAAC1B,MAAO,CAAEpD,KAAM,EAAG8B,eAAgB,SAAUZ,WAAY,UAAWuC,UACvEJ,EAAAA,GAAAA,KAAC2N,GAAAA,QAAiB,CAACC,KAAK,QAAQ3P,MAAO7B,MAOlB,C,mrFCnBzByR,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaE,QAGrB,IAAIC,EAASN,EAAyBE,GAAY,CAGjDG,QAAS,CAAC,GAOX,OAHAE,EAAoBL,GAAUI,EAAQA,EAAOD,QAASJ,GAG/CK,EAAOD,OACf,CAGAJ,EAAoBO,EAAID,E,MCzBxB,IAAIE,EAAW,GACfR,EAAoBS,EAAI,CAACC,EAAQC,EAAUC,EAAIC,KAC9C,IAAGF,EAAH,CAMA,IAAIG,EAAeC,IACnB,IAASC,EAAI,EAAGA,EAAIR,EAASxG,OAAQgH,IAAK,CAGzC,IAFA,IAAKL,EAAUC,EAAIC,GAAYL,EAASQ,GACpCC,GAAY,EACPC,EAAI,EAAGA,EAAIP,EAAS3G,OAAQkH,MACpB,EAAXL,GAAsBC,GAAgBD,IAAalS,OAAOwS,KAAKnB,EAAoBS,GAAGW,OAAOC,GAASrB,EAAoBS,EAAEY,GAAKV,EAASO,MAC9IP,EAASW,OAAOJ,IAAK,IAErBD,GAAY,EACTJ,EAAWC,IAAcA,EAAeD,IAG7C,GAAGI,EAAW,CACbT,EAASc,OAAON,IAAK,GACrB,IAAIO,EAAIX,SACET,IAANoB,IAAiBb,EAASa,EAC/B,CACD,CACA,OAAOb,CAnBP,CAJCG,EAAWA,GAAY,EACvB,IAAI,IAAIG,EAAIR,EAASxG,OAAQgH,EAAI,GAAKR,EAASQ,EAAI,GAAG,GAAKH,EAAUG,IAAKR,EAASQ,GAAKR,EAASQ,EAAI,GACrGR,EAASQ,GAAK,CAACL,EAAUC,EAAIC,EAqBjB,C,KCzBdb,EAAoBwB,EAAKnB,IACxB,IAAIoB,EAASpB,GAAUA,EAAOqB,WAC7B,IAAOrB,EAAiB,QACxB,IAAM,EAEP,OADAL,EAAoB2B,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,CAAM,ECLdzB,EAAoB2B,EAAI,CAACvB,EAASyB,KACjC,IAAI,IAAIR,KAAOQ,EACX7B,EAAoB8B,EAAED,EAAYR,KAASrB,EAAoB8B,EAAE1B,EAASiB,IAC5E1S,OAAOoT,eAAe3B,EAASiB,EAAK,CAAEW,YAAY,EAAM5U,IAAKyU,EAAWR,IAE1E,ECNDrB,EAAoBiC,EAAI,WACvB,GAA0B,kBAAfC,WAAyB,OAAOA,WAC3C,IACC,OAAOC,MAAQ,IAAIC,SAAS,cAAb,EAChB,CAAE,MAAOC,GACR,GAAsB,kBAAXC,OAAqB,OAAOA,MACxC,CACA,CAPuB,GCAxBtC,EAAoB8B,EAAI,CAACS,EAAKC,IAAU7T,OAAO8T,UAAUC,eAAeC,KAAKJ,EAAKC,GCClFxC,EAAoBuB,EAAKnB,IACH,qBAAXwC,QAA0BA,OAAOC,aAC1ClU,OAAOoT,eAAe3B,EAASwC,OAAOC,YAAa,CAAEvN,MAAO,WAE7D3G,OAAOoT,eAAe3B,EAAS,aAAc,CAAE9K,OAAO,GAAO,ECL9D0K,EAAoB8C,EAAI,I,MCKxB,IAAIC,EAAkB,CACrB,IAAK,GAaN/C,EAAoBS,EAAES,EAAK8B,GAA0C,IAA7BD,EAAgBC,GAGxD,IAAIC,EAAuB,CAACC,EAA4BC,KACvD,IAGIlD,EAAU+C,GAHTrC,EAAUyC,EAAaC,GAAWF,EAGhBnC,EAAI,EAC3B,GAAGL,EAAS2C,MAAMC,GAAgC,IAAxBR,EAAgBQ,KAAa,CACtD,IAAItD,KAAYmD,EACZpD,EAAoB8B,EAAEsB,EAAanD,KACrCD,EAAoBO,EAAEN,GAAYmD,EAAYnD,IAGhD,GAAGoD,EAAS,IAAI3C,EAAS2C,EAAQrD,EAClC,CAEA,IADGkD,GAA4BA,EAA2BC,GACrDnC,EAAIL,EAAS3G,OAAQgH,IACzBgC,EAAUrC,EAASK,GAChBhB,EAAoB8B,EAAEiB,EAAiBC,IAAYD,EAAgBC,IACrED,EAAgBC,GAAS,KAE1BD,EAAgBC,GAAW,EAE5B,OAAOhD,EAAoBS,EAAEC,EAAO,EAGjC8C,EAAqBC,KAAsB,gBAAIA,KAAsB,iBAAK,GAC9ED,EAAmBE,QAAQT,EAAqBU,KAAK,KAAM,IAC3DH,EAAmBI,KAAOX,EAAqBU,KAAK,KAAMH,EAAmBI,KAAKD,KAAKH,G,KC7CvF,IAAIK,EAAsB7D,EAAoBS,OAAEN,EAAW,CAAC,MAAM,IAAOH,EAAoB,QAC7F6D,EAAsB7D,EAAoBS,EAAEoD,E","sources":["src/constants/strings.js","src/constants/dimensions.js","src/constants/colors.js","src/screens/auth/onBoardingScreen/styles.js","src/assets/images/index.js","src/components/cta.js","src/navigator/navigationRef.js","src/screens/auth/onBoardingScreen/index.js","src/screens/auth/getStartScreenOne/styles.js","src/components/appBar.js","src/components/customTextInput.js","src/components/customCheckBox.js","src/components/progressBar.js","src/screens/auth/getStartScreenOne/index.js","src/screens/auth/getStartedScreenTwo/styles.js","src/screens/auth/getStartedScreenTwo/index.js","src/screens/auth/getStartedScreenThree/styles.js","src/screens/auth/getStartedScreenThree/index.js","src/navigator/authStack/index.js","src/navigator/index.js","src/constants/ok.js","App.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["export const Strings = {\n  mobileBanking: 'Mobile banking the world\\n loves.',\n  getSendingText:\n    'Get sending, spending and saving with your\\ncontactless card.',\n  getStartedWithAccount: 'Get started with your\\naccount!',\n  enterEmail: 'Email Address',\n  password: 'Password',\n  termsTextStart: \"I have read and I understand Swift Pay Bank's \",\n  termsConditions: 'Terms and conditions ',\n  and: 'and ',\n  PrivacyPolicy: 'Privacy Policy.',\n  yourMobileNum: \"What's your mobile number?\",\n  useAsAccNum: 'We’ll use this as your Swift Pay account number.',\n  country: 'Country',\n  agreementMsg:\n    'By providing your phone number, you agree that we may contact you by SMS/text messaging. Carrier messaging and data rates may apply.',\n  verifyPhn: 'Verify your phone number',\n  otpHeading: 'Enter the 6-digit code we texted to you at ',\n  editNumber: 'Edit Number',\n  codeReceive: \"Didn't receive the code?\",\n  resendCode: 'Resend code',\n  openingText: 'Your Swift Pay account is\\nopen, Victor!',\n  announcementNews:\n    'Great news, you’ve joined Swift Pay. You can\\nnow make transfers and more.',\n  accountInfo: 'Account Information',\n  accountNum: 'Account Number',\n  accountName: 'Account Name',\n  institutionName: 'Institution Name',\n  accountBalance: 'Account Balance',\n  transactionHistory: 'Transaction History',\n  accountSettings: 'Account Settings',\n  logout: 'Logout',\n  continueToApp: 'Continue to the app',\n  login: 'Login',\n  getStarted: 'Get Started',\n  submit: 'Submit',\n  verify: 'Verify',\n};\n\nexport const ScreenNames = {\n  AuthStack: 'AuthStack',\n  BoardingScreen: 'OnBoardScreen',\n  StartScreenOne: 'GetStartedScreenOne',\n  StartScreenTwo: 'GetStartedScreenTwo',\n  StartScreenThree: 'GetStartedScreenThree',\n  StartScreenFour: 'GetStartedScreenFour',\n  DashBoardScreen: 'DashBoardScreen',\n};\n","import {Dimensions, PixelRatio} from 'react-native';\n\nlet screenWidth = Dimensions.get('window').width;\nlet screenHeight = Dimensions.get('window').height;\nconst _height = Dimensions.get('window').height;\nconst _width = Dimensions.get('window').width;\nconst widthPercentageToDP = widthPercent => {\n  const elemWidth =\n    typeof widthPercent === 'number' ? widthPercent : parseFloat(widthPercent);\n  return PixelRatio.roundToNearestPixel((screenWidth * elemWidth) / 100);\n};\nconst heightPercentageToDP = heightPercent => {\n  const elemHeight =\n    typeof heightPercent === 'number'\n      ? heightPercent\n      : parseFloat(heightPercent);\n  return PixelRatio.roundToNearestPixel((screenHeight * elemHeight) / 100);\n};\nconst DesignWidth = 390;\nconst DesignHeight = 844;\nconst DeviceWidth = Dimensions.get('window').width;\nconst DeviceHeight = Dimensions.get('window').height;\nconst DeviceWidthRatioDesignWidth = DeviceWidth / DesignWidth;\nconst DeviceHeightRatioDesignHeight = DeviceHeight / DesignHeight;\nconst ResponsiveWidth = width => {\n  return PixelRatio.roundToNearestPixel(width * DeviceWidthRatioDesignWidth);\n};\nconst ResponsiveHeight = height => {\n  return PixelRatio.roundToNearestPixel(height * DeviceHeightRatioDesignHeight);\n};\nconst ResponsiveFontSize = fontSize => {\n  return PixelRatio.roundToNearestPixel(\n    fontSize * DeviceHeightRatioDesignHeight,\n  );\n};\nexport {\n  widthPercentageToDP as wp,\n  heightPercentageToDP as hp,\n  ResponsiveWidth as rwp,\n  ResponsiveHeight as rhp,\n  ResponsiveFontSize as rfs,\n  _height as height,\n  _width as width,\n};\n","export const colors = {\n  primary: '#235697',\n  blacK: '#000',\n  disabled: '#E5E5E5',\n  secondary: '#88A9C9',\n  grey: '#7D7C93',\n  white: '#FFF',\n  bgColor: '#F1F5F9',\n  gradientColor1: 'rgb(21,68,126)',\n  gradientColor2: 'rgb(37,86,147)',\n};\n","import { Platform, StyleSheet } from 'react-native';\nimport { hp, rfs, rhp, rwp, width, wp } from '../../../constants/dimensions';\nimport { colors } from '../../../constants/colors';\n\nexport const styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    ...Platform.select({\n      web: {\n        width: wp(30),\n        alignSelf: 'center'\n      },\n    }),\n  },\n  bgImageStyle: {\n    resizeMode: 'contain',\n    height: rhp(375),\n    width: wp(100),\n    marginHorizontal: Platform.OS === 'web' ? 20 : 10,\n    marginTop: hp(12),\n  },\n  logoImage: {\n    width: rwp(170),\n    height: rhp(40),\n    alignSelf: 'center',\n    resizeMode: 'contain',\n    top: rhp(70),\n  },\n  bottomContainer: {\n    backgroundColor: 'white',\n    height: rhp(375),\n    width: '100%',\n    borderTopRightRadius: 16,\n    borderTopLeftRadius: 16,\n    alignItems: 'center',\n    paddingHorizontal: rwp(5),\n  },\n  heading: {\n    textAlign: 'center',\n    color: 'black',\n    fontWeight: '700',\n    fontSize: Platform.OS === 'ios' ? rfs(29) : rfs(32),\n    marginTop: rhp(32),\n    fontFamily: 'BasisGrotesque-Bold',\n    ...Platform.select({\n      web: {\n        fontSize: rfs(28)\n      },\n    }),\n  },\n  subHeading: {\n    textAlign: 'center',\n    color: colors.grey,\n    fontWeight: '400',\n    fontSize: Platform.OS === 'ios' ? rfs(15) : rfs(18),\n    marginTop: rhp(15),\n    lineHeight: 25,\n    fontFamily: 'BasisGrotesque-Regular',\n    ...Platform.select({\n      web: {\n        fontSize: rfs(16)\n      },\n    }),\n  },\n  btnContainer: {\n    flexDirection: 'row',\n    height: rhp(53),\n    width: wp(90),\n    marginTop: rhp(70),\n    justifyContent: 'space-around',\n    ...Platform.select({\n      web: {\n        flexDirection: 'row',\n        width: 'auto',\n        justifyContent: 'space-around',\n        alignSelf:'center'\n      },\n    }),\n  },\n  gradientView: {\n    flex: 1,\n    alignItems: 'center'\n  },\n  flexStyle: {\n    flex: 1\n  },\n  btn: {\n    ...Platform.select({\n      web: {\n        width: 119,\n        marginRight:12,\n        marginLeft:15\n      },\n    }),\n  },\n  btn2: {\n    ...Platform.select({\n      web: {\n        width: 214,\n      },\n    }),\n  }\n});\n","export const images = {\n  //pcis\n\n  backGroundImageOnBoarding: require('./pics/backgroundimage.png'),\n  logoTextImage: require('./pics/logotextimage.png'),\n  logoTextImage2: require('./pics/logotextimage2.png'),\n  phoneImage: require('./pics/phoneimage.png'),\n  ballonBgImage: require('./pics/ballonbgimage.png'),\n  balloonImage: require('./pics/balloonsimage.png'),\n\n  //icons\n\n  leftArrow: require('./icons/leftarrow.png'),\n  eyeOpenIcon: require('./icons/eyeopenicon.png'),\n  eyeHideIcon: require('./icons/eyehideicon.png'),\n  copyIcon: require('./icons/copyicon.png'),\n};\n","import React from 'react';\nimport {Platform, StyleSheet, Text, TouchableOpacity} from 'react-native';\nimport {rhp, rwp} from '../constants/dimensions';\nimport { colors } from '../constants/colors';\n\nexport const GradientButton = ({onPress, buttonText, style}) => {\n  return (\n    <TouchableOpacity\n      style={[styles.gradientBtn, style]}\n      onPress={onPress}\n      activeOpacity={0.7}>\n      <Text style={styles.btnGrdntTxt}>{buttonText}</Text>\n    </TouchableOpacity>\n  );\n};\n\nexport const PlainButton = ({onPress, buttonText, style}) => {\n  return (\n    <TouchableOpacity\n      style={[styles.plainBtn, style]}\n      onPress={onPress}\n      activeOpacity={0.4}>\n      <Text style={styles.btnPlnTxt}>{buttonText}</Text>\n    </TouchableOpacity>\n  );\n};\n\nconst styles = StyleSheet.create({\n  gradientBtn: {\n    width: rwp(204),\n    height: Platform.OS==='ios' ? rhp(53): rhp(55),\n    borderRadius: 8,\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingVertical: 10,\n    backgroundColor: colors.primary,\n  },\n  btnGrdntTxt: {\n    color: 'white',\n    fontSize: 15,\n    fontWeight: '500',\n    textAlign: 'center',\n   fontFamily:'BasisGrotesque-Regular'\n  },\n  plainBtn: {\n    width: rwp(119),\n    height: Platform.OS==='ios' ? rhp(53): rhp(55),\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 8,\n    borderColor: colors.primary,\n    borderWidth: 1,\n  },\n  btnPlnTxt: {\n    color: colors.primary,\n    fontSize: 15,\n    fontWeight: '500',\n    fontFamily:'BasisGrotesque-Regular'\n  },\n});\n","import * as React from 'react';\nimport {\n  CommonActions,\n  DrawerActions,\n  StackActions,\n} from '@react-navigation/native';\n//import { reset } from '../redux/scanSlice/scanSlice';\n//import { reset as clear } from '../redux/authSlice/logInSlice';\nexport const navigationRef = React.createRef();\n\nexport async function navigateReset(name, params) {\n  \n  \n  console.log(\"🚀 ~ navigateReset ~ navigateReset ~ name:\", name, '  params => ', params)\n  \n \n  navigationRef.current?.dispatch(\n    CommonActions.reset({\n      index: 0,\n      routes: [\n        {\n          name: name,\n          params: params,\n        },\n      ],\n    }),\n  );\n}\nexport async function navigateResetStoreClear(name, reduxDispatch) {\n  navigationRef.current?.dispatch(\n    CommonActions.reset({\n      index: 0,\n      routes: [\n        {\n          name: name,\n        },\n      ],\n    }),\n  );\n  reduxDispatch(reset());\n  reduxDispatch(clear());\n}\nexport async function navigateBack(name, params) {\n  navigationRef.current?.dispatch(\n    CommonActions.goBack(),\n  );\n}\n\nexport function getRouteName() {\n  return navigationRef.current?.getCurrentRoute()?.name;\n}\n\nexport async function navigate(name, params) {\n  console.log(\"🚀 ~ navigateReset ~ navigateReset ~ name:\", name, '  params => ', params)\n \n  navigationRef.current?.navigate(name, params);\n}\nexport async function popScreen() {\n  const popAction = StackActions.pop();\n  navigationRef.current?.dispatch(popAction);\n}\n\nexport async function openDrawer() {\n  console.log(\"Yess\");\n  try {\n    DrawerActions.openDrawer();\n    // navigationRef.current.dispatch();\n  } catch(error) {\n    console.log(\":rocket: ~ file: navigationRef.js:41 ~ openDrawer ~ error:\", error);\n  }\n}\nexport async function closeDrawer() {\n  navigationRef.current.dispatch(DrawerActions.closeDrawer());\n}","import { View, Text, StatusBar, Image, ActivityIndicator } from 'react-native';\nimport React from 'react';\nimport { styles } from './styles';\nimport { images } from '../../../assets/images';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { ScreenNames, Strings } from '../../../constants/strings';\nimport { GradientButton, PlainButton } from '../../../components/cta';\nimport { navigate } from '../../../navigator/navigationRef';\nimport { colors } from '../../../constants/colors';\n\nconst OnBoardingScreen = () => {\n  return (\n    <View style={[styles.container]}>\n      <StatusBar translucent={true} backgroundColor={'transparent'} />\n      <LinearGradient\n        colors={[colors.gradientColor1, colors.gradientColor2]}\n        start={{ x: 0, y: 0 }}\n        end={{ x: 1, y: 0 }}\n        style={styles.gradientView}\n      >\n        <Image source={images.logoTextImage2} style={styles.logoImage} />\n        <Image source={images.phoneImage} style={styles.bgImageStyle} />\n        <View style={styles.flexStyle} />\n        <View style={styles.bottomContainer}>\n          <Text style={[styles.heading]}>{Strings.mobileBanking}</Text>\n          <Text style={styles.subHeading}>{Strings.getSendingText}</Text>\n          <View style={[styles.btnContainer]}>\n            <PlainButton buttonText={Strings.login}\n              style={styles.btn}\n            />\n            <GradientButton\n              buttonText={Strings.getStarted}\n              onPress={() => navigate(ScreenNames.StartScreenOne)}\n              style={styles.btn2}\n            />\n          </View>\n        </View>\n      </LinearGradient>\n    </View>\n  );\n};\n\nexport default OnBoardingScreen;\n","import { Platform, StyleSheet } from 'react-native';\nimport { rwp, rhp, rfs, wp } from '../../../constants/dimensions';\nimport { colors } from '../../../constants/colors';\n\nexport const styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'white',\n    padding: 20,\n    ...Platform.select({\n      web: {\n        width: wp(30),\n        alignSelf:'center',\n      },\n    }),\n  },\n  title: {\n    fontWeight: '700',\n    fontSize: Platform.OS === 'ios' ? rfs(28) : rfs(34),\n    fontFamily: 'BasisGrotesque-Bold',\n    color: colors.blacK,\n    marginTop: rhp(20),\n    lineHeight: 33.6,\n    letterSpacing: 1,\n  },\n  btnStyle: (isButtonEnabled) => ({\n    marginTop: rhp(24),\n    width: wp(90),\n    marginBottom: rhp(35),\n    backgroundColor: isButtonEnabled ? colors.primary : colors.secondary,\n    ...Platform.select({\n      web: {\n        width: wp(28),\n        justifyContent:'center',\n      },\n    }),\n  }),\n  inputText: { marginTop: 0 },\n  iconStyle: { width: 24, height: 26.4 },\n  flexStyle: { flex: 1 },\n  checkBoxView: { paddingRight: 9 },\n});\n","import { View, Text, StyleSheet, TouchableOpacity, Image, Platform } from 'react-native';\nimport React from 'react';\nimport { rfs, rhp, rwp, wp } from '../constants/dimensions';\nimport { images } from '../assets/images';\nimport { colors } from '../constants/colors';\n\nconst AppBar = ({ start, end, onPress }) => {\n  return (\n    <View style={styles.container}>\n      <TouchableOpacity onPress={onPress} style={styles.iconContainer}>\n        <Image source={images.leftArrow} style={styles.img} />\n      </TouchableOpacity>\n      <Text style={styles.stepsText}>{`Step ${start}/${end}`}</Text>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    marginBottom: rhp(10),\n    alignItems: 'center',\n    paddingHorizontal: rwp(5),\n    marginTop: Platform.OS === 'ios' ? rhp(15) : rhp(15),\n    ...Platform.select({\n      web: {\n        justifyContent: 'flex-start',\n        paddingHorizontal: 0,\n      },\n    }),\n  },\n  iconContainer: {\n    alignSelf: 'flex-start',\n  },\n  img: {\n    resizeMode: 'contain',\n    height: Platform.OS === 'web' ? wp(1.5) : rhp(24),\n    width: Platform.OS === 'web' ? wp(1.5) : rhp(24),\n    marginTop: Platform.OS === 'web' ? rhp(0) : rhp(0),\n  },\n  stepsText: {\n    color: colors.grey,\n    fontFamily: 'BasisGrotesque-Regular',\n    fontSize: 13,\n    fontWeight: '500',\n    marginLeft: 'auto',\n  },\n});\n\nexport default AppBar;\n","import React, {forwardRef} from 'react';\nimport {\n  TextInput,\n  StyleSheet,\n  View,\n  Image,\n  TouchableOpacity,\n  Platform,\n} from 'react-native';\nimport {rfs, rhp} from '../constants/dimensions';\nimport {colors} from '../constants/colors';\n\nconst CustomTextInput = forwardRef(\n  (\n    {\n      placeholder,\n      value,\n      onChangeText,\n      keyboardType,\n      secureTextEntry,\n      rightIcon,\n      imageSource,\n      suffixIconStyle,\n      style,\n      showSoftInputOnFocus,\n      autoFocus,\n      returnKeyType,\n      eyeSource,\n      eye,\n      blurOnSubmit,\n      autoCorrect,\n      onSubmitEditing,\n      eyePress,\n      maxLength,\n      selectionColor\n    },\n    ref,\n  ) => {\n    return (\n      <View style={[styles.container, style]}>\n        {rightIcon && (\n          <Image\n            style={[{...suffixIconStyle}]}\n            resizeMode=\"contain\"\n            source={imageSource}\n          />\n        )}\n        <TextInput\n          ref={ref}\n          placeholder={placeholder}\n          placeholderTextColor={colors.grey}\n          onChangeText={onChangeText}\n          value={value}\n          keyboardType={keyboardType}\n          secureTextEntry={secureTextEntry}\n          style={[styles.inputStyle,styles.container]}\n          showSoftInputOnFocus={showSoftInputOnFocus}\n          autoFocus={autoFocus}\n          returnKeyType={returnKeyType}\n          onSubmitEditing={onSubmitEditing}\n          blurOnSubmit={blurOnSubmit}\n          autoCorrect={autoCorrect}\n          maxLength={maxLength}\n          selectionColor={selectionColor}\n        />\n        {eye && (\n          <TouchableOpacity onPress={eyePress}>\n            <Image\n              style={[styles.icon, suffixIconStyle]}\n              resizeMode=\"contain\"\n              source={eyeSource}\n            />\n          </TouchableOpacity>\n        )}\n      </View>\n    );\n  },\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginTop: rhp(24),\n    marginBottom: rhp(20),\n    borderBottomWidth: 1,\n    borderBottomColor: colors.disabled,\n    fontSize: rfs(14),\n    color: 'black',\n    height: rhp(48),\n    ...Platform.select({\n      web:{\n        outlineStyle:'none'\n      }\n    })\n  },\n  icon: {\n    opacity: 0.8,\n  },\n  inputStyle: {flex: 1, color: 'black', fontSize: rfs(16), lineHeight: 20},\n});\n\nexport default CustomTextInput;\n","import { View, Text, TouchableOpacity, StyleSheet, Platform } from 'react-native';\nimport React, { useState } from 'react';\nimport { rfs, rhp, rwp, wp } from '../constants/dimensions';\nimport { Strings } from '../constants/strings';\nimport { colors } from '../constants/colors';\n\nconst CustomCheckbox = ({ onPress, style }) => {\n  const [isChecked, setIsChecked] = useState(null);\n\n  const toggleCheckbox = () => {\n    setIsChecked(!isChecked);\n    if (onPress) {\n      onPress(!isChecked);\n    }\n  };\n\n  return (\n    <View style={[styles.checkboxContainer, style]}>\n      <TouchableOpacity onPress={toggleCheckbox} activeOpacity={0.4}>\n        <View style={[styles.checkbox, isChecked && styles.checked]}>\n          {isChecked && <Text style={styles.tick}>✓</Text>}\n        </View>\n      </TouchableOpacity>\n      <TouchableOpacity onPress={toggleCheckbox} activeOpacity={0.4} style={styles.textContainer}>\n        <Text style={styles.label}>\n          {Strings.termsTextStart}\n          <Text style={[styles.label, styles.termsText]}>\n            {Strings.termsConditions}\n          </Text>\n          {Strings.and}\n          <Text style={[styles.label, styles.termsText]}>\n            {Strings.PrivacyPolicy}\n          </Text>\n        </Text>\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  checkboxContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginVertical: rhp(5),\n  },\n  checkbox: {\n    width: rwp(20),\n    height: rhp(20),\n    borderWidth: rwp(1),\n    borderRadius: 4,\n    backgroundColor: 'white',\n    borderColor: colors.disabled,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginRight: rwp(10),\n    ...Platform.select({\n      web: {\n        width: rwp(5),\n        borderWidth:1,\n        height: rhp(20),\n        marginRight: rwp(5),\n      },\n    }),\n  },\n  checked: {\n    backgroundColor: colors.primary,\n    borderColor: colors.disabled,\n  },\n  tick: {\n    color: 'black',\n    fontSize: rfs(12),\n    textAlignVertical: 'center',\n  },\n  label: {\n    fontWeight: '500',\n    color: 'black',\n    fontSize: Platform.OS === 'ios' ? rfs(14) : rfs(15),\n    fontFamily: 'BasisGrotesque-Regular',\n    textAlign: 'auto',\n    marginRight: Platform.OS === 'ios' ? rwp(21) : rwp(30),\n    ...Platform.select({\n      web: {\n        marginRight: rwp(0),\n      },\n    }),\n  },\n  textContainer: {\n    flex: 1,\n  },\n  termsText: {\n    color: colors.primary,\n    fontFamily: 'BasisGrotesque-Medium',\n    ...Platform.select({\n      web: {\n        textAlign: 'justify',\n      },\n    }),\n  },\n\n});\n\nexport default CustomCheckbox;\n","import React, {useEffect, useRef} from 'react';\nimport {View, StyleSheet, Animated} from 'react-native';\nimport {rhp} from '../constants/dimensions';\n\nconst ProgressBar = ({progress, style}) => {\n  const animatedWidth = useRef(new Animated.Value(0)).current;\n\n  useEffect(() => {\n    Animated.timing(animatedWidth, {\n      toValue: progress,\n      duration: 1000,\n      useNativeDriver: false,\n    }).start();\n  }, [progress, animatedWidth]);\n\n  return (\n    <View style={styles.barBackground}>\n      <Animated.View\n        style={[\n          styles.barFront,\n          styles.barProgress(animatedWidth, progress),\n          style,\n        ]}\n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  barBackground: {\n    marginTop: rhp(12),\n    height: rhp(4),\n    backgroundColor: '#EFEFEF',\n    borderRadius: 8,\n  },\n  barFront: {\n    height: rhp(4),\n    borderTopLeftRadius: 8,\n    borderBottomLeftRadius: 8,\n    backgroundColor: '#4681AA',\n  },\n  barProgress: (animatedWidth, progress) => ({\n    width: animatedWidth.interpolate({\n      inputRange: [0, 100],\n      outputRange: ['0%', '100%'],\n    }),\n    borderTopRightRadius: progress === 100 ? 8 : 0,\n    borderBottomRightRadius: progress === 100 ? 8 : 0,\n  }),\n});\n\nexport default ProgressBar;\n","import { View, Text, StatusBar, TouchableWithoutFeedback, Keyboard, Platform, TextInput } from 'react-native';\nimport React, { useRef, useState } from 'react';\nimport { styles } from './styles';\nimport AppBar from '../../../components/appBar';\nimport { ScreenNames, Strings } from '../../../constants/strings';\nimport CustomTextInput from '../../../components/customTextInput';\nimport { images } from '../../../assets/images';\nimport CustomCheckbox from '../../../components/customCheckBox';\nimport { GradientButton } from '../../../components/cta';\nimport { navigate } from '../../../navigator/navigationRef';\nimport ProgressBar from '../../../components/progressBar';\n\nconst GetStartedScreenOne = ({ navigation }) => {\n  const [Email, setEmail] = useState('');\n  const [Password, setPassword] = useState('');\n  const [isSecureCheck, setIsSecureCheck] = useState(true);\n  const [rememberMe, setRememberMe] = useState(false);\n  const firstRef = useRef(null);\n  const secondRef = useRef(null);\n  const [currentStep, setCurrentStep] = useState(1);\n\n  const handleCheckboxPress = (isChecked, setRememberMe) => {\n    setRememberMe(isChecked);\n    console.log('Keep me signed in is checked:', isChecked);\n  };\n\n  const isButtonEnabled = Email.length > 0 && Password.length > 0 && rememberMe;\n\n  const totalSteps = 3;\n\n  const handleNext = () => {\n    if (currentStep < totalSteps) {\n      setCurrentStep(currentStep + 1);\n    }\n  };\n\n  const progress = (currentStep / totalSteps) * 100;\n  const DedicatedView = Platform.OS === 'web' ? View : TouchableWithoutFeedback\n  const handlePress = () => {\n    Platform.OS !== 'web' && Keyboard.dismiss()\n  }\n  return (\n    <DedicatedView style={{flex:1}} onPress={handlePress}>\n    <View style={[styles.container]}>\n      <StatusBar translucent={true} backgroundColor={'transparent'} />\n      <AppBar start={1} end={3} onPress={() => navigation.goBack()} />\n\n      <ProgressBar progress={33.3} />\n\n      <Text style={styles.title}>{Strings.getStartedWithAccount} </Text>\n\n      {/* <TextInput\n      \n      \n     style={{height:30}}\n     \n      /> */}\n      <CustomTextInput\n        ref={firstRef}\n        placeholder={Strings.enterEmail}\n        keyboardType=\"email-address\"\n        returnKeyType=\"next\"\n        value={Email}\n        onChangeText={setEmail}\n        onSubmitEditing={() => secondRef.current.focus()}\n        //selectionColor='red'\n      />\n      <CustomTextInput\n        ref={secondRef}\n        placeholder={Strings.password}\n        keyboardType=\"default\"\n        returnKeyType=\"done\"\n        style={styles.inputText}\n        secureTextEntry={isSecureCheck}\n        value={Password}\n        onChangeText={setPassword}\n        suffixIconStyle={styles.iconStyle}\n        eyeSource={isSecureCheck ? images.eyeOpenIcon : images.eyeHideIcon}\n        eye\n        eyePress={() => setIsSecureCheck(!isSecureCheck)}\n      />\n\n      <View style={styles.flexStyle} />\n      <View style={styles.checkBoxView}>\n        <CustomCheckbox\n          label={Strings.termsTextStart}\n          onPress={isChecked => handleCheckboxPress(isChecked, setRememberMe)}\n        />\n\n        <GradientButton\n          buttonText={Strings.getStarted}\n          style={[styles.btnStyle(isButtonEnabled)]}\n          onPress={() => {\n            if (isButtonEnabled) {\n              navigate(ScreenNames.StartScreenTwo);\n              handleNext();\n            }\n          }}\n        />\n      </View>\n    </View>\n    </DedicatedView>\n  );\n};\n\nexport default GetStartedScreenOne;\n","import { Platform, StyleSheet } from 'react-native';\nimport { rfs, rhp, rwp, wp } from '../../../constants/dimensions';\nimport { colors } from '../../../constants/colors';\n\nexport const styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'white',\n    padding: 20,\n    ...Platform.select({\n      web: {\n        width: wp(30),\n        alignSelf:'center',\n      },\n    }),\n  },\n  title: {\n    fontWeight: '700',\n    fontSize: Platform.OS === 'ios' ? rfs(28) : rfs(32),\n    fontFamily: 'BasisGrotesque-Bold',\n    color: colors.blacK,\n    marginTop: rhp(20),\n    lineHeight: 33.6,\n    letterSpacing: 1,\n  },\n  subTitle: {\n    fontSize: Platform.OS === 'ios' ? rfs(15) : rfs(18),\n    fontWeight: '400',\n    fontFamily: 'BasisGrotesque-Regular',\n    color: colors.grey,\n    marginTop: rhp(10),\n  },\n  countryCodePhnRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    marginTop: rhp(26),\n  },\n  countryHeading: {\n    color: colors.grey,\n    fontSize: rfs(15),\n    fontWeight: '400',\n  },\n  countryContainer: {\n    paddingVertical: 5,\n    borderBottomColor: colors.disabled,\n    borderRadius: 0,\n    borderWidth: 0,\n    borderBottomWidth: 1,\n    maxWidth: 100,\n    ...Platform.select({\n      web:{\n        maxWidth: 200,\n      }\n    })\n  },\n  countryInsideRow: {\n    alignItems: 'center',\n    justifyContent: 'space-around',\n    flexDirection: 'row',\n    ...Platform.select({\n      web:{\n        justifyContent: 'space-around',\n      }\n    })\n  },\n  countryText: {\n    fontSize: rfs(15),\n\n  },\n  dropDownContainer: {\n    width: 180,\n\n  },\n  searchBar: {\n    width: 150,\n    borderWidth: 0,\n    borderBottomWidth: 1,\n    borderBottomColor: colors.disabled,\n\n  },\n  phoneInputField: {\n    borderBottomColor: colors.disabled,\n    borderRadius: 0,\n    borderWidth: 0,\n    borderBottomWidth: 1,\n    marginTop: 1.5,\n    opacity: 0.5,\n    fontSize: 15,\n   \n    ...Platform.select({\n      web:{\n       width:wp(22),\n       outlineStyle:'none'\n      }\n    })\n  },\n\n  inputStyle: {\n    marginLeft: rwp(12),\n    width: rwp(261),\n    borderRadius: 4,\n    borderBottomWidth: 1,\n    textAlignVertical: 'bottom',\n  },\n  countryCode: {\n    fontSize: rfs(16),\n    color: '#373F46',\n    marginLeft: 5,\n    marginTop: 3,\n    fontWeight: '400',\n    fontFamily: 'BasisGrotesque-Regular',\n  },\n  agreementText: {\n    fontSize: Platform.OS === 'ios' ? rfs(14) : rfs(16),\n    fontWeight: '500',\n    fontFamily: 'BasisGrotesque-Regular',\n    color: colors.grey,\n    textAlign: 'auto',\n    marginBottom: rhp(24),\n  },\n  flex: {\n    flex: 1\n  },\n  containerBtnStyle: {\n    width: 50\n  },\n  btnStyle: isPhoneNumberFilled => ({\n    width: wp(90),\n    marginBottom: rhp(35),\n    backgroundColor: isPhoneNumberFilled ? colors.primary : colors.secondary,\n    ...Platform.select({\n      web: {\n        width: wp(28),\n        justifyContent:'center',\n      },\n    }),\n  }),\n});\n","import { View, Text, TouchableWithoutFeedback, Keyboard, Platform } from 'react-native';\nimport React, { useState } from 'react';\nimport AppBar from '../../../components/appBar';\nimport { styles } from './styles';\nimport { ScreenNames, Strings } from '../../../constants/strings';\nimport CountryCodeDropdownPicker from 'react-native-dropdown-country-picker'\nimport { GradientButton } from '../../../components/cta';\nimport { navigate } from '../../../navigator/navigationRef';\nimport ProgressBar from '../../../components/progressBar';\n\nconst GetStartedScreenTwo = ({ navigation }) => {\n  const [selected, setSelected] = useState('+234');\n  const [country, setCountry] = useState({ callingCode: '+234' });\n  const [phone, setPhone] = useState('');\n\n  const isPhoneNumberFilled = phone.length > 0;\n  const DedicatedView = Platform.OS === 'web' ? View : TouchableWithoutFeedback\n  const handlePress = () => {\n    Platform.OS !== 'web' && Keyboard.dismiss()\n  }\n  return (\n    <DedicatedView style={{flex:1}} onPress={handlePress}>\n      <View style={styles.container}>\n        <AppBar start={2} end={3} onPress={() => navigation.goBack()} />\n        <ProgressBar progress={60.6} />\n        <Text style={styles.title}>{Strings.yourMobileNum} </Text>\n        <Text style={styles.subTitle}>{Strings.useAsAccNum} </Text>\n        <View style={styles.countryCodePhnRow}>\n          <View style={styles.countryCol}>\n            <Text style={styles.countryHeading}>{Strings.country}</Text>\n            <View style={styles.countryInsideRow}>\n              <CountryCodeDropdownPicker\n                selected={selected}\n                setSelected={(code) => {\n                  setSelected(code);\n                  setCountry({ callingCode: code });\n                }}\n                setCountryDetails={setCountry}\n                phone={phone}\n                setPhone={setPhone}\n                countryCodeContainerStyles={styles.countryContainer}\n                countryCodeTextStyles={styles.countryText}\n                dropdownStyles={styles.dropDownContainer}\n                searchStyles={styles.searchBar}\n                phoneStyles={styles.phoneInputField}\n              />\n            </View>\n          </View>\n          {/* <CustomTextInput\n          placeholder=\"Phone Number\"\n          keyboardType=\"phone-pad\"\n          value={phoneNumber}\n          onChangeText={setPhoneNumber}\n          style={[styles.inputStyle, { marginTop: rhp(1.5) }]}\n        /> */}\n        </View>\n        <View style={styles.flex} />\n        <Text style={styles.agreementText}>{Strings.agreementMsg}</Text>\n        <GradientButton\n          buttonText={Strings.submit}\n          style={styles.btnStyle(isPhoneNumberFilled)}\n          onPress={() => {\n            if (isPhoneNumberFilled) {\n              navigate(ScreenNames.StartScreenThree, {\n                phone,\n                countryCode: country.callingCode || selected,\n              });\n            }\n          }}\n        />\n      </View>\n    </DedicatedView>\n  );\n};\n\nexport default GetStartedScreenTwo;\n","import { Platform, StyleSheet } from 'react-native';\nimport { rfs, rhp, rwp, wp } from '../../../constants/dimensions';\nimport { colors } from '../../../constants/colors';\n\nexport const styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'white',\n    padding: 20,\n    ...Platform.select({\n      web: {\n        width: wp(30),\n        alignSelf:'center',\n      },\n    }),\n  },\n  title: {\n    fontWeight: '700',\n    fontSize: Platform.OS === 'ios' ? rfs(27) : rfs(32),\n    fontFamily: 'BasisGrotesque-Bold',\n    color: colors.blacK,\n    marginTop: rhp(20),\n    lineHeight: 33.6,\n    letterSpacing: 1,\n  },\n  subTitle: {\n    fontSize: Platform.OS === 'ios' ? rfs(15) : rfs(16),\n    fontWeight: '500',\n    fontFamily: 'BasisGrotesque-Regular',\n    color: colors.grey,\n    marginTop: rhp(10),\n  },\n  phnText: {\n    fontSize: Platform.OS === 'ios' ? rfs(15) : rfs(16),\n    fontWeight: '400',\n    marginTop: 4,\n    fontFamily: 'BasisGrotesque-Regular',\n    color: colors.grey,\n  },\n  editText: {\n    color: colors.primary,\n    fontSize: Platform.OS === 'ios' ? rfs(15) : rfs(16),\n    fontWeight: '500',\n    marginTop: 4,\n    fontFamily: 'BasisGrotesque-Medium',\n    marginLeft: rwp(8),\n    ...Platform.select({\n      web: {\n        marginLeft: rwp(2),\n      },\n    }),\n  },\n  otpContainer: {\n    marginTop: rhp(24),\n  },\n  cell: {\n    borderRadius: 8,\n    borderWidth: 0,\n    backgroundColor: colors.bgColor,\n    borderBottomWidth: 0,\n    width: rwp(49),\n    height: rhp(50),\n    ...Platform.select({\n      web: {\n        width: rwp(15),\n        height: rhp(50),\n      },\n    }),\n  },\n  cellText: {\n    color: 'black',\n    fontFamily: 'BasisGrotesque-Regular',\n    fontSize: rfs(28),\n    textAlign: 'center',\n    paddingTop: rhp(8),\n  },\n  bottomTextRow: {\n    flexDirection: 'row',\n    marginTop: rhp(20),\n    justifyContent: 'center',\n  },\n  codeText: {\n    fontSize: Platform.OS === 'ios' ? rfs(14) : rfs(15),\n    fontWeight: '600',\n    color: colors.grey,\n    fontFamily: 'PlusJakartaSans-Medium',\n  },\n  flexStyle: { flex: 1 },\n  countryCodeStyle: { flexDirection: 'row', alignItems: 'center' },\n  btnStyle: (isOtpComplete) => ({\n    width: wp(90),\n    marginBottom: rhp(35),\n    backgroundColor: isOtpComplete ? colors.primary : colors.secondary,\n    ...Platform.select({\n      web: {\n        width: wp(28),\n        justifyContent:'center',\n      },\n    }),\n  }),\n});\n","import { View, Text, TouchableOpacity, Platform, TouchableWithoutFeedback, Keyboard } from 'react-native';\nimport React, { useState } from 'react';\nimport AppBar from '../../../components/appBar';\nimport { styles } from './styles';\nimport { Strings } from '../../../constants/strings';\nimport {\n  CodeField,\n  Cursor,\n  useBlurOnFulfill,\n  useClearByFocusCell,\n} from 'react-native-confirmation-code-field';\nimport { rfs, rwp } from '../../../constants/dimensions';\nimport { GradientButton } from '../../../components/cta';\nimport ProgressBar from '../../../components/progressBar';\nimport { colors } from '../../../constants/colors';\n\nconst GetStartedScreenThree = ({ route, navigation }) => {\n  const { phone, countryCode } = route.params;\n  const [otpCode, setOtpCode] = useState(null);\n  const CELL_COUNT = 6;\n  const [value, setValue] = useState('');\n  const [results, getCellOnLayoutHandler] = useClearByFocusCell({\n    value,\n    setValue,\n  });\n  const ref = useBlurOnFulfill({ value, cellCount: CELL_COUNT });\n  const isOtpComplete = value.length === CELL_COUNT;\n  const DedicatedView = Platform.OS === 'web' ? View : TouchableWithoutFeedback\n  const handlePress = () => {\n    Platform.OS !== 'web' && Keyboard.dismiss()\n  }\n  return (\n    <DedicatedView style={{flex:1}} onPress={handlePress}>\n    <View style={styles.container}>\n      <AppBar start={3} end={3} onPress={() => navigation.goBack()} />\n      <ProgressBar\n        progress={100}\n        style={{ borderBottomLeftRadius: 8, borderBottomTopRadius: 8 }}\n      />\n      <Text style={styles.title}>{Strings.verifyPhn} </Text>\n      <Text style={styles.subTitle}>{Strings.otpHeading} </Text>\n\n      <View style={styles.countryCodeStyle}>\n        <Text style={styles.phnText}>{`${countryCode} ${phone}`}</Text>\n        <TouchableOpacity>\n          <Text style={styles.editText}>{Strings.editNumber}</Text>\n        </TouchableOpacity>\n      </View>\n      <View style={styles.otpContainer}>\n        <CodeField\n          ref={ref}\n          {...results}\n          caretHidden={false}\n          value={value}\n          onChangeText={text => {\n            setValue(text);\n            setOtpCode(text);\n          }}\n          cellCount={CELL_COUNT}\n          rootStyle={styles.codeFieldRoot}\n          keyboardType=\"number-pad\"\n          textContentType=\"oneTimeCode\"\n          autoComplete={Platform.select({\n            android: 'sms-otp',\n            default: 'one-time-code',\n          })}\n          testID=\"my-code-input\"\n          renderCell={({ index, symbol, isFocused }) => (\n            <View style={styles.cell}>\n              <Text\n                key={index}\n                style={[styles.cellText]}\n                onLayout={getCellOnLayoutHandler(index)}>\n                {symbol || (isFocused ? <Cursor /> : null)}\n              </Text>\n            </View>\n          )}\n        />\n      </View>\n      <View style={styles.bottomTextRow}>\n        <Text style={styles.codeText}>{Strings.codeReceive}</Text>\n        <TouchableOpacity>\n          <Text\n            style={[\n              styles.codeText,\n              {\n                color: colors.primary,\n                marginLeft: rwp(2),\n                fontFamily: 'PlusJakartaSans-SemiBold',\n                fontSize: Platform.OS ==='ios' ? rfs(14) : rfs(15)\n              },\n            ]}>\n            {Strings.resendCode}\n          </Text>\n        </TouchableOpacity>\n      </View>\n      <View style={styles.flexStyle} />\n      <GradientButton\n        buttonText={Strings.verify}\n        style={styles.btnStyle(isOtpComplete)}\n      />\n    </View>\n    </DedicatedView>\n  );\n};\n\nexport default GetStartedScreenThree;\n","import React from 'react';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\n\nimport {ScreenNames} from '../../constants/strings';\nimport OnBoardingScreen from '../../screens/auth/onBoardingScreen';\nimport GetStartedScreenOne from '../../screens/auth/getStartScreenOne';\nimport GetStartedScreenTwo from '../../screens/auth/getStartedScreenTwo';\nimport GetStartedScreenThree from '../../screens/auth/getStartedScreenThree';\n\nconst AuthStack = createNativeStackNavigator();\n\nconst navigationOptions = () => ({\n  headerShown: false,\n  animationEnabled: true,\n  animationTypeForReplace: 'push',\n  animation: 'slide_from_right',\n});\n\nconst Auth = () => {\n  return (\n    <AuthStack.Navigator initialRouteName={ScreenNames.BoardingScreen}>\n      <AuthStack.Screen\n        name={ScreenNames.BoardingScreen}\n        component={OnBoardingScreen}\n        options={navigationOptions}\n      />\n      <AuthStack.Screen\n        name={ScreenNames.StartScreenOne}\n        component={GetStartedScreenOne}\n        options={navigationOptions}\n      />\n      <AuthStack.Screen\n        name={ScreenNames.StartScreenTwo}\n        component={GetStartedScreenTwo}\n        options={navigationOptions}\n      />\n      <AuthStack.Screen\n        name={ScreenNames.StartScreenThree}\n        component={GetStartedScreenThree}\n        options={navigationOptions}\n      />\n    </AuthStack.Navigator>\n  );\n};\n\nexport default Auth;\n","import React from 'react';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { NavigationContainer } from '@react-navigation/native';\nimport Auth from './authStack';\nimport {ScreenNames} from '../constants/strings';\nimport {navigationRef} from './navigationRef';\n\nconst NavigationStack = createNativeStackNavigator();\n\nexport const NavigationCheck = () => {\n  return (\n    <NavigationContainer ref={navigationRef}>\n      <NavigationStack.Navigator initialRouteName={ScreenNames.AuthStack}>\n        <NavigationStack.Screen\n          name={ScreenNames.AuthStack}\n          component={Auth}\n          options={{headerShown: false}}\n        />\n      </NavigationStack.Navigator>\n    </NavigationContainer>\n  );\n};\n","// src/constants/fonts.js\nimport * as Font from 'expo-font';\n\nexport const customFonts = {\n  'BasisGrotesque-Black': require('../assets/fonts/BasisGrotesque-Black.ttf'),\n  'BasisGrotesque-Bold': require('../assets/fonts/BasisGrotesque-Bold.ttf'),\n  'BasisGrotesque-Regular': require('../assets/fonts/BasisGrotesque-Regular.ttf'),\n  'BasisGrotesque-Medium': require('../assets/fonts/BasisGrotesque-Medium.ttf'),\n  'BasisGrotesque-Light': require('../assets/fonts/BasisGrotesque-Light.ttf'),\n  'PlusJakartaSans-Bold': require('../assets/fonts/PlusJakartaSans-Bold.ttf'),\n  'PlusJakartaSans-Regular': require('../assets/fonts/PlusJakartaSans-Regular.ttf'),\n  'PlusJakartaSans-Medium': require('../assets/fonts/PlusJakartaSans-Medium.ttf'),\n  'PlusJakartaSans-SemiBold': require('../assets/fonts/PlusJakartaSans-SemiBold.ttf'),\n  'PlusJakartaSans-ExtraBold': require('../assets/fonts/PlusJakartaSans-ExtraBold.ttf'),\n  'PlusJakartaSans-ExtraLight': require('../assets/fonts/PlusJakartaSans-ExtraLight.ttf'),\n};\n","import React from 'react';\nimport { GestureHandlerRootView } from 'react-native-gesture-handler';\nimport { NavigationCheck } from './src/navigator';\nimport { useFonts } from 'expo-font';\nimport { customFonts } from './src/constants/ok';\nimport { ActivityIndicator, View } from 'react-native';\nimport { colors } from './src/constants/colors';\n\nconst App = () => {\n  const [fontsLoaded] = useFonts(customFonts);\n  if (!fontsLoaded) {\n    return (\n      <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n        <ActivityIndicator size=\"large\" color={colors.gradientColor1} />\n      </View>\n    );\n  }\n  return (\n    <GestureHandlerRootView style={{ flex: 1 }}>\n      <NavigationCheck />\n    </GestureHandlerRootView>\n  );\n};\nexport default App;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [957], () => (__webpack_require__(4352)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["Strings","ScreenNames","screenWidth","Dimensions","get","width","screenHeight","height","widthPercentageToDP","widthPercent","elemWidth","parseFloat","PixelRatio","roundToNearestPixel","DeviceWidth","DeviceHeight","DeviceWidthRatioDesignWidth","DeviceHeightRatioDesignHeight","ResponsiveWidth","ResponsiveHeight","ResponsiveFontSize","fontSize","colors","styles","StyleSheet","create","container","Object","assign","flex","wp","alignSelf","bgImageStyle","resizeMode","rhp","marginHorizontal","marginTop","heightPercent","elemHeight","hp","logoImage","rwp","top","bottomContainer","backgroundColor","borderTopRightRadius","borderTopLeftRadius","alignItems","paddingHorizontal","heading","textAlign","color","fontWeight","rfs","fontFamily","subHeading","lineHeight","btnContainer","flexDirection","justifyContent","gradientView","flexStyle","btn","marginRight","marginLeft","btn2","images","backGroundImageOnBoarding","require","logoTextImage","logoTextImage2","phoneImage","ballonBgImage","balloonImage","leftArrow","eyeOpenIcon","eyeHideIcon","copyIcon","GradientButton","onPress","buttonText","style","_jsx","TouchableOpacity","gradientBtn","activeOpacity","children","Text","btnGrdntTxt","PlainButton","plainBtn","btnPlnTxt","borderRadius","paddingVertical","borderColor","borderWidth","navigationRef","React","async","navigate","name","params","console","log","current","OnBoardingScreen","_jsxs","View","StatusBar","translucent","LinearGradient","start","x","y","end","Image","source","padding","title","letterSpacing","btnStyle","isButtonEnabled","marginBottom","inputText","iconStyle","checkBoxView","paddingRight","iconContainer","img","stepsText","AppBar","CustomTextInput","forwardRef","placeholder","value","onChangeText","keyboardType","secureTextEntry","rightIcon","imageSource","suffixIconStyle","showSoftInputOnFocus","autoFocus","returnKeyType","eyeSource","eye","blurOnSubmit","autoCorrect","onSubmitEditing","eyePress","maxLength","selectionColor","ref","TextInput","placeholderTextColor","inputStyle","icon","borderBottomWidth","borderBottomColor","outlineStyle","opacity","checkboxContainer","marginVertical","checkbox","checked","tick","textAlignVertical","label","textContainer","termsText","CustomCheckbox","isChecked","setIsChecked","useState","toggleCheckbox","barBackground","barFront","borderBottomLeftRadius","barProgress","animatedWidth","progress","interpolate","inputRange","outputRange","borderBottomRightRadius","ProgressBar","useRef","Animated","Value","useEffect","timing","toValue","duration","useNativeDriver","GetStartedScreenOne","navigation","Email","setEmail","Password","setPassword","isSecureCheck","setIsSecureCheck","rememberMe","setRememberMe","firstRef","secondRef","currentStep","setCurrentStep","length","DedicatedView","handlePress","goBack","focus","handleCheckboxPress","subTitle","countryCodePhnRow","countryHeading","countryContainer","maxWidth","countryInsideRow","countryText","dropDownContainer","searchBar","phoneInputField","countryCode","agreementText","containerBtnStyle","isPhoneNumberFilled","GetStartedScreenTwo","selected","setSelected","country","setCountry","callingCode","phone","setPhone","countryCol","CountryCodeDropdownPicker","code","setCountryDetails","countryCodeContainerStyles","countryCodeTextStyles","dropdownStyles","searchStyles","phoneStyles","phnText","editText","otpContainer","cell","cellText","paddingTop","bottomTextRow","codeText","countryCodeStyle","isOtpComplete","GetStartedScreenThree","route","otpCode","setOtpCode","setValue","results","getCellOnLayoutHandler","useClearByFocusCell","useBlurOnFulfill","cellCount","borderBottomTopRadius","CodeField","caretHidden","text","rootStyle","codeFieldRoot","textContentType","autoComplete","testID","renderCell","index","symbol","isFocused","onLayout","Cursor","AuthStack","createNativeStackNavigator","navigationOptions","headerShown","animationEnabled","animationTypeForReplace","animation","Auth","Navigator","initialRouteName","Screen","component","options","NavigationStack","NavigationCheck","NavigationContainer","customFonts","App","fontsLoaded","useFonts","GestureHandlerRootView","ActivityIndicator","size","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","keys","every","key","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","g","globalThis","this","Function","e","window","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","some","id","chunkLoadingGlobal","self","forEach","bind","push","__webpack_exports__"],"sourceRoot":""}