{"ast":null,"code":"var _jsxFileName = \"/Users/nextek/Desktop/folder/SwiftPay/src/screens/auth/otpScreen/index.js\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport React, { useState } from 'react';\nimport AppBar from '../../../components/appBar';\nimport { styles } from './styles';\nimport { Strings } from '../../../constants/strings';\nimport { CodeField, Cursor, useBlurOnFulfill, useClearByFocusCell } from 'react-native-confirmation-code-field';\nimport { rfs, rhp, rwp } from '../../../constants/dimensions';\nimport { GradientButton } from '../../../components/cta';\nimport ProgressBar from 'react-native-progress/Bar';\nimport { colors } from '../../../constants/colors';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OTPScreen = ({\n  route,\n  navigation\n}) => {\n  const {\n    phone,\n    countryCode\n  } = route.params;\n  const [otpCode, setOtpCode] = useState(null);\n  const CELL_COUNT = 6;\n  const [value, setValue] = useState('');\n  const [results, getCellOnLayoutHandler] = useClearByFocusCell({\n    value,\n    setValue\n  });\n  const ref = useBlurOnFulfill({\n    value,\n    cellCount: CELL_COUNT\n  });\n  const isOtpComplete = value.length === CELL_COUNT;\n  const DedicatedView = Platform.OS === 'web' ? View : TouchableWithoutFeedback;\n  const handlePress = () => {\n    Platform.OS !== 'web' && Keyboard.dismiss();\n  };\n  return _jsxDEV(DedicatedView, {\n    style: {\n      flex: 1\n    },\n    onPress: handlePress,\n    children: _jsxDEV(View, {\n      style: styles.container,\n      children: [_jsxDEV(AppBar, {\n        start: 3,\n        end: 3,\n        onPress: () => navigation.goBack()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, this), _jsxDEV(ProgressBar, {\n        progress: 1,\n        width: wp(80),\n        height: rhp(4)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this), _jsxDEV(Text, {\n        style: styles.title,\n        children: [Strings.verifyPhn, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this), _jsxDEV(Text, {\n        style: styles.subTitle,\n        children: [Strings.otpHeading, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this), _jsxDEV(View, {\n        style: styles.countryCodeStyle,\n        children: [_jsxDEV(Text, {\n          style: styles.phnText,\n          children: `${countryCode} ${phone}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }, this), _jsxDEV(TouchableOpacity, {\n          children: _jsxDEV(Text, {\n            style: styles.editText,\n            children: Strings.editNumber\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this), _jsxDEV(View, {\n        style: styles.otpContainer,\n        children: _jsxDEV(CodeField, Object.assign({\n          ref: ref\n        }, results, {\n          caretHidden: false,\n          value: value,\n          onChangeText: text => {\n            setValue(text);\n            setOtpCode(text);\n          },\n          cellCount: CELL_COUNT,\n          rootStyle: styles.codeFieldRoot,\n          keyboardType: \"number-pad\",\n          textContentType: \"oneTimeCode\",\n          autoComplete: Platform.select({\n            android: 'sms-otp',\n            default: 'one-time-code'\n          }),\n          testID: \"my-code-input\",\n          renderCell: ({\n            index,\n            symbol,\n            isFocused\n          }) => _jsxDEV(View, {\n            style: styles.cell,\n            children: _jsxDEV(Text, {\n              style: [styles.cellText],\n              onLayout: getCellOnLayoutHandler(index),\n              children: symbol || (isFocused ? _jsxDEV(Cursor, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 41\n              }, this) : null)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this), _jsxDEV(View, {\n        style: styles.bottomTextRow,\n        children: [_jsxDEV(Text, {\n          style: styles.codeText,\n          children: Strings.codeReceive\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }, this), _jsxDEV(TouchableOpacity, {\n          children: _jsxDEV(Text, {\n            style: [styles.codeText, {\n              color: colors.primary,\n              marginLeft: rwp(2),\n              fontFamily: 'PlusJakartaSans-SemiBold',\n              fontSize: Platform.OS === 'ios' ? rfs(14) : rfs(15)\n            }],\n            children: Strings.resendCode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }, this), _jsxDEV(View, {\n        style: styles.flexStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }, this), _jsxDEV(GradientButton, {\n        buttonText: Strings.verify,\n        style: styles.btnStyle(isOtpComplete)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\nexport default OTPScreen;","map":{"version":3,"names":["React","useState","AppBar","styles","Strings","CodeField","Cursor","useBlurOnFulfill","useClearByFocusCell","rfs","rhp","rwp","GradientButton","ProgressBar","colors","jsxDEV","_jsxDEV","OTPScreen","route","navigation","phone","countryCode","params","otpCode","setOtpCode","CELL_COUNT","value","setValue","results","getCellOnLayoutHandler","ref","cellCount","isOtpComplete","length","DedicatedView","Platform","OS","View","TouchableWithoutFeedback","handlePress","Keyboard","dismiss","style","flex","onPress","children","container","start","end","goBack","fileName","_jsxFileName","lineNumber","columnNumber","progress","width","wp","height","Text","title","verifyPhn","subTitle","otpHeading","countryCodeStyle","phnText","TouchableOpacity","editText","editNumber","otpContainer","Object","assign","caretHidden","onChangeText","text","rootStyle","codeFieldRoot","keyboardType","textContentType","autoComplete","select","android","default","testID","renderCell","index","symbol","isFocused","cell","cellText","onLayout","bottomTextRow","codeText","codeReceive","color","primary","marginLeft","fontFamily","fontSize","resendCode","flexStyle","buttonText","verify","btnStyle"],"sources":["/Users/nextek/Desktop/folder/SwiftPay/src/screens/auth/otpScreen/index.js"],"sourcesContent":["import { View, Text, TouchableOpacity, Platform, TouchableWithoutFeedback, Keyboard } from 'react-native';\nimport React, { useState } from 'react';\nimport AppBar from '../../../components/appBar';\nimport { styles } from './styles';\nimport { Strings } from '../../../constants/strings';\nimport {\n  CodeField,\n  Cursor,\n  useBlurOnFulfill,\n  useClearByFocusCell,\n} from 'react-native-confirmation-code-field';\nimport { rfs, rhp, rwp } from '../../../constants/dimensions';\nimport { GradientButton } from '../../../components/cta';\n// import ProgressBar from '../../../components/progressBar';\nimport ProgressBar from 'react-native-progress/Bar';\n\nimport { colors } from '../../../constants/colors';\n\nconst OTPScreen = ({ route, navigation }) => {\n  const { phone, countryCode } = route.params;\n  const [otpCode, setOtpCode] = useState(null);\n  const CELL_COUNT = 6;\n  const [value, setValue] = useState('');\n  const [results, getCellOnLayoutHandler] = useClearByFocusCell({\n    value,\n    setValue,\n  });\n  const ref = useBlurOnFulfill({ value, cellCount: CELL_COUNT });\n  const isOtpComplete = value.length === CELL_COUNT;\n  const DedicatedView = Platform.OS === 'web' ? View : TouchableWithoutFeedback\n  const handlePress = () => {\n    Platform.OS !== 'web' && Keyboard.dismiss()\n  }\n  return (\n    <DedicatedView style={{flex:1}} onPress={handlePress}>\n    <View style={styles.container}>\n      <AppBar start={3} end={3} onPress={() => navigation.goBack()} />\n\n      <ProgressBar progress={1} width={wp(80)} height= {rhp(4)} />\n      {/* <ProgressBar\n        progress={99.6}\n        style={{ borderBottomLeftRadius: 8, borderBottomTopRadius: 8 }}\n      /> */}\n      <Text style={styles.title}>{Strings.verifyPhn} </Text>\n      <Text style={styles.subTitle}>{Strings.otpHeading} </Text>\n\n      <View style={styles.countryCodeStyle}>\n        <Text style={styles.phnText}>{`${countryCode} ${phone}`}</Text>\n        <TouchableOpacity>\n          <Text style={styles.editText}>{Strings.editNumber}</Text>\n        </TouchableOpacity>\n      </View>\n      <View style={styles.otpContainer}>\n        <CodeField\n          ref={ref}\n          {...results}\n          caretHidden={false}\n          value={value}\n          onChangeText={text => {\n            setValue(text);\n            setOtpCode(text);\n          }}\n          cellCount={CELL_COUNT}\n          rootStyle={styles.codeFieldRoot}\n          keyboardType=\"number-pad\"\n          textContentType=\"oneTimeCode\"\n          autoComplete={Platform.select({\n            android: 'sms-otp',\n            default: 'one-time-code',\n          })}\n          testID=\"my-code-input\"\n          renderCell={({ index, symbol, isFocused }) => (\n            <View style={styles.cell}>\n              <Text\n                key={index}\n                style={[styles.cellText]}\n                onLayout={getCellOnLayoutHandler(index)}>\n                {symbol || (isFocused ? <Cursor /> : null)}\n              </Text>\n            </View>\n          )}\n        />\n      </View>\n      <View style={styles.bottomTextRow}>\n        <Text style={styles.codeText}>{Strings.codeReceive}</Text>\n        <TouchableOpacity>\n          <Text\n            style={[\n              styles.codeText,\n              {\n                color: colors.primary,\n                marginLeft: rwp(2),\n                fontFamily: 'PlusJakartaSans-SemiBold',\n                fontSize: Platform.OS ==='ios' ? rfs(14) : rfs(15)\n              },\n            ]}>\n            {Strings.resendCode}\n          </Text>\n        </TouchableOpacity>\n      </View>\n      <View style={styles.flexStyle} />\n      <GradientButton\n        buttonText={Strings.verify}\n        style={styles.btnStyle(isOtpComplete)}\n      />\n    </View>\n    </DedicatedView>\n  );\n};\n\nexport default OTPScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}