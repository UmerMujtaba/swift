{"ast":null,"code":"import * as React from 'react';\nimport { CommonActions, DrawerActions, StackActions } from '@react-navigation/native';\nexport const navigationRef = React.createRef();\nexport async function navigateReset(name, params) {\n  console.log(\"ðŸš€ ~ navigateReset ~ navigateReset ~ name:\", name, '  params => ', params);\n  navigationRef.current?.dispatch(CommonActions.reset({\n    index: 0,\n    routes: [{\n      name: name,\n      params: params\n    }]\n  }));\n}\nexport async function navigateResetStoreClear(name, reduxDispatch) {\n  navigationRef.current?.dispatch(CommonActions.reset({\n    index: 0,\n    routes: [{\n      name: name\n    }]\n  }));\n  reduxDispatch(reset());\n  reduxDispatch(clear());\n}\nexport async function navigateBack(name, params) {\n  navigationRef.current?.dispatch(CommonActions.goBack());\n}\nexport function getRouteName() {\n  return navigationRef.current?.getCurrentRoute()?.name;\n}\nexport async function navigate(name, params) {\n  console.log(\"ðŸš€ ~ navigateReset ~ navigateReset ~ name:\", name, '  params => ', params);\n  navigationRef.current?.navigate(name, params);\n}\nexport async function popScreen() {\n  const popAction = StackActions.pop();\n  navigationRef.current?.dispatch(popAction);\n}\nexport async function openDrawer() {\n  console.log(\"Yess\");\n  try {\n    DrawerActions.openDrawer();\n  } catch (error) {\n    console.log(\":rocket: ~ file: navigationRef.js:41 ~ openDrawer ~ error:\", error);\n  }\n}\nexport async function closeDrawer() {\n  navigationRef.current.dispatch(DrawerActions.closeDrawer());\n}","map":{"version":3,"names":["React","CommonActions","DrawerActions","StackActions","navigationRef","createRef","navigateReset","name","params","console","log","current","dispatch","reset","index","routes","navigateResetStoreClear","reduxDispatch","clear","navigateBack","goBack","getRouteName","getCurrentRoute","navigate","popScreen","popAction","pop","openDrawer","error","closeDrawer"],"sources":["/Users/nextek/Desktop/folder/SwiftPay/src/navigator/navigationRef.js"],"sourcesContent":["import * as React from 'react';\nimport {\n  CommonActions,\n  DrawerActions,\n  StackActions,\n} from '@react-navigation/native';\n//import { reset } from '../redux/scanSlice/scanSlice';\n//import { reset as clear } from '../redux/authSlice/logInSlice';\nexport const navigationRef = React.createRef();\n\nexport async function navigateReset(name, params) {\n  \n  \n  console.log(\"ðŸš€ ~ navigateReset ~ navigateReset ~ name:\", name, '  params => ', params)\n  \n \n  navigationRef.current?.dispatch(\n    CommonActions.reset({\n      index: 0,\n      routes: [\n        {\n          name: name,\n          params: params,\n        },\n      ],\n    }),\n  );\n}\nexport async function navigateResetStoreClear(name, reduxDispatch) {\n  navigationRef.current?.dispatch(\n    CommonActions.reset({\n      index: 0,\n      routes: [\n        {\n          name: name,\n        },\n      ],\n    }),\n  );\n  reduxDispatch(reset());\n  reduxDispatch(clear());\n}\nexport async function navigateBack(name, params) {\n  navigationRef.current?.dispatch(\n    CommonActions.goBack(),\n  );\n}\n\nexport function getRouteName() {\n  return navigationRef.current?.getCurrentRoute()?.name;\n}\n\nexport async function navigate(name, params) {\n  console.log(\"ðŸš€ ~ navigateReset ~ navigateReset ~ name:\", name, '  params => ', params)\n \n  navigationRef.current?.navigate(name, params);\n}\nexport async function popScreen() {\n  const popAction = StackActions.pop();\n  navigationRef.current?.dispatch(popAction);\n}\n\nexport async function openDrawer() {\n  console.log(\"Yess\");\n  try {\n    DrawerActions.openDrawer();\n    // navigationRef.current.dispatch();\n  } catch(error) {\n    console.log(\":rocket: ~ file: navigationRef.js:41 ~ openDrawer ~ error:\", error);\n  }\n}\nexport async function closeDrawer() {\n  navigationRef.current.dispatch(DrawerActions.closeDrawer());\n}"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SACEC,aAAa,EACbC,aAAa,EACbC,YAAY,QACP,0BAA0B;AAGjC,OAAO,MAAMC,aAAa,GAAGJ,KAAK,CAACK,SAAS,CAAC,CAAC;AAE9C,OAAO,eAAeC,aAAaA,CAACC,IAAI,EAAEC,MAAM,EAAE;EAGhDC,OAAO,CAACC,GAAG,CAAC,4CAA4C,EAAEH,IAAI,EAAE,cAAc,EAAEC,MAAM,CAAC;EAGvFJ,aAAa,CAACO,OAAO,EAAEC,QAAQ,CAC7BX,aAAa,CAACY,KAAK,CAAC;IAClBC,KAAK,EAAE,CAAC;IACRC,MAAM,EAAE,CACN;MACER,IAAI,EAAEA,IAAI;MACVC,MAAM,EAAEA;IACV,CAAC;EAEL,CAAC,CACH,CAAC;AACH;AACA,OAAO,eAAeQ,uBAAuBA,CAACT,IAAI,EAAEU,aAAa,EAAE;EACjEb,aAAa,CAACO,OAAO,EAAEC,QAAQ,CAC7BX,aAAa,CAACY,KAAK,CAAC;IAClBC,KAAK,EAAE,CAAC;IACRC,MAAM,EAAE,CACN;MACER,IAAI,EAAEA;IACR,CAAC;EAEL,CAAC,CACH,CAAC;EACDU,aAAa,CAACJ,KAAK,CAAC,CAAC,CAAC;EACtBI,aAAa,CAACC,KAAK,CAAC,CAAC,CAAC;AACxB;AACA,OAAO,eAAeC,YAAYA,CAACZ,IAAI,EAAEC,MAAM,EAAE;EAC/CJ,aAAa,CAACO,OAAO,EAAEC,QAAQ,CAC7BX,aAAa,CAACmB,MAAM,CAAC,CACvB,CAAC;AACH;AAEA,OAAO,SAASC,YAAYA,CAAA,EAAG;EAC7B,OAAOjB,aAAa,CAACO,OAAO,EAAEW,eAAe,CAAC,CAAC,EAAEf,IAAI;AACvD;AAEA,OAAO,eAAegB,QAAQA,CAAChB,IAAI,EAAEC,MAAM,EAAE;EAC3CC,OAAO,CAACC,GAAG,CAAC,4CAA4C,EAAEH,IAAI,EAAE,cAAc,EAAEC,MAAM,CAAC;EAEvFJ,aAAa,CAACO,OAAO,EAAEY,QAAQ,CAAChB,IAAI,EAAEC,MAAM,CAAC;AAC/C;AACA,OAAO,eAAegB,SAASA,CAAA,EAAG;EAChC,MAAMC,SAAS,GAAGtB,YAAY,CAACuB,GAAG,CAAC,CAAC;EACpCtB,aAAa,CAACO,OAAO,EAAEC,QAAQ,CAACa,SAAS,CAAC;AAC5C;AAEA,OAAO,eAAeE,UAAUA,CAAA,EAAG;EACjClB,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;EACnB,IAAI;IACFR,aAAa,CAACyB,UAAU,CAAC,CAAC;EAE5B,CAAC,CAAC,OAAMC,KAAK,EAAE;IACbnB,OAAO,CAACC,GAAG,CAAC,4DAA4D,EAAEkB,KAAK,CAAC;EAClF;AACF;AACA,OAAO,eAAeC,WAAWA,CAAA,EAAG;EAClCzB,aAAa,CAACO,OAAO,CAACC,QAAQ,CAACV,aAAa,CAAC2B,WAAW,CAAC,CAAC,CAAC;AAC7D","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}