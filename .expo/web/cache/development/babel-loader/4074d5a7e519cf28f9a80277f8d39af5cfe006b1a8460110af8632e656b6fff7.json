{"ast":null,"code":"var _jsxFileName = \"/Users/nextek/Desktop/folder/SwiftPay/src/components/customTextInput.js\";\nimport React, { forwardRef } from 'react';\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { rfs, rhp } from '../constants/dimensions';\nimport { colors } from '../constants/colors';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomTextInput = forwardRef(({\n  placeholder,\n  value,\n  onChangeText,\n  keyboardType,\n  secureTextEntry,\n  rightIcon,\n  imageSource,\n  suffixIconStyle,\n  style,\n  showSoftInputOnFocus,\n  autoFocus,\n  returnKeyType,\n  eyeSource,\n  eye,\n  blurOnSubmit,\n  autoCorrect,\n  onSubmitEditing,\n  eyePress,\n  maxLength,\n  selectionColor\n}, ref) => {\n  return _jsxDEV(View, {\n    style: [styles.container, style],\n    children: [rightIcon && _jsxDEV(Image, {\n      style: [Object.assign({}, suffixIconStyle)],\n      resizeMode: \"contain\",\n      source: imageSource\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }, this), _jsxDEV(TextInput, {\n      ref: ref,\n      placeholder: placeholder,\n      placeholderTextColor: colors.grey,\n      onChangeText: onChangeText,\n      value: value,\n      keyboardType: keyboardType,\n      secureTextEntry: secureTextEntry,\n      showSoftInputOnFocus: showSoftInputOnFocus,\n      autoFocus: autoFocus,\n      returnKeyType: returnKeyType,\n      onSubmitEditing: onSubmitEditing,\n      blurOnSubmit: blurOnSubmit,\n      autoCorrect: autoCorrect,\n      maxLength: maxLength,\n      selectionColor: selectionColor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), eye && _jsxDEV(TouchableOpacity, {\n      onPress: eyePress,\n      children: _jsxDEV(Image, {\n        style: [styles.icon, suffixIconStyle],\n        resizeMode: \"contain\",\n        source: eyeSource\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 7\n  }, this);\n});\nconst styles = StyleSheet.create({\n  container: Object.assign({\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginTop: rhp(24),\n    marginBottom: rhp(20),\n    borderBottomWidth: 1,\n    borderBottomColor: colors.disabled,\n    fontSize: rfs(14),\n    color: 'black',\n    height: rhp(48)\n  }, Platform.select({\n    web: {\n      outlineStyle: 'none'\n    }\n  })),\n  icon: {\n    opacity: 0.8\n  },\n  inputStyle: {\n    color: 'black',\n    fontSize: rfs(16),\n    lineHeight: 20,\n    flex: 1\n  }\n});\nexport default CustomTextInput;","map":{"version":3,"names":["React","forwardRef","TextInput","StyleSheet","View","Image","TouchableOpacity","Platform","rfs","rhp","colors","jsxDEV","_jsxDEV","CustomTextInput","placeholder","value","onChangeText","keyboardType","secureTextEntry","rightIcon","imageSource","suffixIconStyle","style","showSoftInputOnFocus","autoFocus","returnKeyType","eyeSource","eye","blurOnSubmit","autoCorrect","onSubmitEditing","eyePress","maxLength","selectionColor","ref","styles","container","children","Object","assign","resizeMode","source","fileName","_jsxFileName","lineNumber","columnNumber","placeholderTextColor","grey","onPress","icon","create","flexDirection","alignItems","marginTop","marginBottom","borderBottomWidth","borderBottomColor","disabled","fontSize","color","height","select","web","outlineStyle","opacity","inputStyle","lineHeight","flex"],"sources":["/Users/nextek/Desktop/folder/SwiftPay/src/components/customTextInput.js"],"sourcesContent":["import React, {forwardRef} from 'react';\nimport {\n  TextInput,\n  StyleSheet,\n  View,\n  Image,\n  TouchableOpacity,\n  Platform,\n} from 'react-native';\nimport {rfs, rhp} from '../constants/dimensions';\nimport {colors} from '../constants/colors';\n\nconst CustomTextInput = forwardRef(\n  (\n    {\n      placeholder,\n      value,\n      onChangeText,\n      keyboardType,\n      secureTextEntry,\n      rightIcon,\n      imageSource,\n      suffixIconStyle,\n      style,\n      showSoftInputOnFocus,\n      autoFocus,\n      returnKeyType,\n      eyeSource,\n      eye,\n      blurOnSubmit,\n      autoCorrect,\n      onSubmitEditing,\n      eyePress,\n      maxLength,\n      selectionColor\n    },\n    ref,\n  ) => {\n    return (\n      <View style={[styles.container, style]}>\n        {rightIcon && (\n          <Image\n            style={[{...suffixIconStyle}]}\n            resizeMode=\"contain\"\n            source={imageSource}\n          />\n        )}\n        <TextInput\n          ref={ref}\n          placeholder={placeholder}\n          placeholderTextColor={colors.grey}\n          onChangeText={onChangeText}\n          value={value}\n          keyboardType={keyboardType}\n          secureTextEntry={secureTextEntry}\n          //style={[styles.inputStyle]}\n          showSoftInputOnFocus={showSoftInputOnFocus}\n          autoFocus={autoFocus}\n          returnKeyType={returnKeyType}\n          onSubmitEditing={onSubmitEditing}\n          blurOnSubmit={blurOnSubmit}\n          autoCorrect={autoCorrect}\n          maxLength={maxLength}\n          selectionColor={selectionColor}\n        />\n        {eye && (\n          <TouchableOpacity onPress={eyePress}>\n            <Image\n              style={[styles.icon, suffixIconStyle]}\n              resizeMode=\"contain\"\n              source={eyeSource}\n            />\n          </TouchableOpacity>\n        )}\n      </View>\n    );\n  },\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginTop: rhp(24),\n    marginBottom: rhp(20),\n    borderBottomWidth: 1,\n    borderBottomColor: colors.disabled,\n    fontSize: rfs(14),\n    color: 'black',\n    height: rhp(48),\n    ...Platform.select({\n      web:{\n        outlineStyle:'none'\n      }\n    })\n  },\n  icon: {\n    opacity: 0.8,\n  },\n  inputStyle: {color: 'black', fontSize: rfs(16), lineHeight: 20,flex:1},\n});\n\nexport default CustomTextInput;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}