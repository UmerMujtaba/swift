{"ast":null,"code":"var _jsxFileName = \"/Users/nextek/Desktop/folder/SwiftPay/src/components/appBar.js\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport React from 'react';\nimport { rfs, rhp, rwp, wp } from '../constants/dimensions';\nimport { images } from '../assets/images';\nimport { colors } from '../constants/colors';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppBar = ({\n  start,\n  end,\n  onPress\n}) => {\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: [_jsxDEV(TouchableOpacity, {\n      onPress: onPress,\n      children: _jsxDEV(Image, {\n        source: images.leftArrow,\n        style: styles.img\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), _jsxDEV(Text, {\n      style: styles.stepsText,\n      children: `Step ${start}/${end}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\nconst styles = StyleSheet.create({\n  container: Object.assign({\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingHorizontal: rwp(5),\n    marginTop: Platform.OS === 'ios' ? rhp(15) : rhp(0),\n    backgroundColor: 'red'\n  }, Platform.select({\n    web: {\n      flex: 1,\n      paddingHorizontal: rwp(-10)\n    }\n  })),\n  img: {\n    resizeMode: 'contain',\n    height: rhp(24),\n    width: rwp(24),\n    backgroundColor: 'yellow'\n  },\n  stepsText: {\n    color: colors.grey,\n    fontFamily: 'BasisGrotesque-Regular',\n    fontSize: 13,\n    fontWeight: '500'\n  }\n});\nexport default AppBar;","map":{"version":3,"names":["React","rfs","rhp","rwp","wp","images","colors","jsxDEV","_jsxDEV","AppBar","start","end","onPress","View","style","styles","container","children","TouchableOpacity","Image","source","leftArrow","img","fileName","_jsxFileName","lineNumber","columnNumber","Text","stepsText","StyleSheet","create","Object","assign","flexDirection","justifyContent","alignItems","paddingHorizontal","marginTop","Platform","OS","backgroundColor","select","web","flex","resizeMode","height","width","color","grey","fontFamily","fontSize","fontWeight"],"sources":["/Users/nextek/Desktop/folder/SwiftPay/src/components/appBar.js"],"sourcesContent":["import {View, Text, StyleSheet, TouchableOpacity, Image, Platform} from 'react-native';\nimport React from 'react';\nimport {rfs, rhp, rwp, wp} from '../constants/dimensions';\nimport {images} from '../assets/images';\nimport { colors } from '../constants/colors';\n\nconst AppBar = ({start, end, onPress}) => {\n  return (\n    <View style={styles.container}>\n      <TouchableOpacity onPress={onPress}>\n        <Image source={images.leftArrow} style={styles.img} />\n      </TouchableOpacity>\n      <Text style={styles.stepsText}>{`Step ${start}/${end}`}</Text>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n   // height: rhp(54),\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingHorizontal: rwp(5),\n    marginTop: Platform.OS==='ios' ? rhp(15): rhp(0),\n    backgroundColor:'red',\n    ...Platform.select({\n      web: {\n        flex:1,\n        paddingHorizontal: rwp(-10),\n      },\n    }),\n    \n  },\n  img: {\n    resizeMode: 'contain',\n    height: rhp(24),\n    width: rwp(24),\n    backgroundColor:'yellow'\n   \n  },\n  stepsText: {\n    color: colors.grey,\n    fontFamily:'BasisGrotesque-Regular',\n    fontSize: 13,\n    fontWeight: '500',\n  },\n});\nexport default AppBar;\n"],"mappings":";;;;;;;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,EAAE,QAAO,yBAAyB;AACzD,SAAQC,MAAM,QAAO,kBAAkB;AACvC,SAASC,MAAM,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,MAAM,GAAGA,CAAC;EAACC,KAAK;EAAEC,GAAG;EAAEC;AAAO,CAAC,KAAK;EACxC,OACEJ,OAAA,CAACK,IAAI;IAACC,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5BT,OAAA,CAACU,gBAAgB;MAACN,OAAO,EAAEA,OAAQ;MAAAK,QAAA,EACjCT,OAAA,CAACW,KAAK;QAACC,MAAM,EAAEf,MAAM,CAACgB,SAAU;QAACP,KAAK,EAAEC,MAAM,CAACO;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC,EACnBlB,OAAA,CAACmB,IAAI;MAACb,KAAK,EAAEC,MAAM,CAACa,SAAU;MAAAX,QAAA,EAAE,QAAQP,KAAK,IAAIC,GAAG;IAAE;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1D,CAAC;AAEX,CAAC;AAED,MAAMX,MAAM,GAAGc,UAAU,CAACC,MAAM,CAAC;EAC/Bd,SAAS,EAAAe,MAAA,CAAAC,MAAA;IAEPC,aAAa,EAAE,KAAK;IACpBC,cAAc,EAAE,eAAe;IAC/BC,UAAU,EAAE,QAAQ;IACpBC,iBAAiB,EAAEjC,GAAG,CAAC,CAAC,CAAC;IACzBkC,SAAS,EAAEC,QAAQ,CAACC,EAAE,KAAG,KAAK,GAAGrC,GAAG,CAAC,EAAE,CAAC,GAAEA,GAAG,CAAC,CAAC,CAAC;IAChDsC,eAAe,EAAC;EAAK,GAClBF,QAAQ,CAACG,MAAM,CAAC;IACjBC,GAAG,EAAE;MACHC,IAAI,EAAC,CAAC;MACNP,iBAAiB,EAAEjC,GAAG,CAAC,CAAC,EAAE;IAC5B;EACF,CAAC,CAAC,CAEH;EACDmB,GAAG,EAAE;IACHsB,UAAU,EAAE,SAAS;IACrBC,MAAM,EAAE3C,GAAG,CAAC,EAAE,CAAC;IACf4C,KAAK,EAAE3C,GAAG,CAAC,EAAE,CAAC;IACdqC,eAAe,EAAC;EAElB,CAAC;EACDZ,SAAS,EAAE;IACTmB,KAAK,EAAEzC,MAAM,CAAC0C,IAAI;IAClBC,UAAU,EAAC,wBAAwB;IACnCC,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE;EACd;AACF,CAAC,CAAC;AACF,eAAe1C,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}