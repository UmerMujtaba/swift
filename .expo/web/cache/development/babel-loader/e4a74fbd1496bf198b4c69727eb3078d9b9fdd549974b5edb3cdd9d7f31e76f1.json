{"ast":null,"code":"var _jsxFileName = \"/Users/nextek/Desktop/folder/SwiftPay/src/screens/auth/getStartScreenOne/index.js\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport React, { useRef, useState } from 'react';\nimport { styles } from './styles';\nimport AppBar from '../../../components/appBar';\nimport { ScreenNames, Strings } from '../../../constants/strings';\nimport CustomTextInput from '../../../components/customTextInput';\nimport { images } from '../../../assets/images';\nimport CustomCheckbox from '../../../components/customCheckBox';\nimport { GradientButton } from '../../../components/cta';\nimport { navigate } from '../../../navigator/navigationRef';\nimport ProgressBar from '../../../components/progressBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GetStartedScreenOne = ({\n  navigation\n}) => {\n  const [Email, setEmail] = useState('');\n  const [Password, setPassword] = useState('');\n  const [isSecureCheck, setIsSecureCheck] = useState(true);\n  const [rememberMe, setRememberMe] = useState(false);\n  const firstRef = useRef(null);\n  const secondRef = useRef(null);\n  const [currentStep, setCurrentStep] = useState(1);\n  const handleCheckboxPress = (isChecked, setRememberMe) => {\n    setRememberMe(isChecked);\n    console.log('Keep me signed in is checked:', isChecked);\n  };\n  const isButtonEnabled = Email.length > 0 && Password.length > 0 && rememberMe;\n  const totalSteps = 3;\n  const handleNext = () => {\n    if (currentStep < totalSteps) {\n      setCurrentStep(currentStep + 1);\n    }\n  };\n  const progress = currentStep / totalSteps * 100;\n  return _jsxDEV(View, {\n    style: [styles.container],\n    children: [_jsxDEV(StatusBar, {\n      translucent: true,\n      backgroundColor: 'transparent'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), _jsxDEV(AppBar, {\n      start: 1,\n      end: 5,\n      onPress: () => navigation.goBack()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), _jsxDEV(ProgressBar, {\n      progress: 33.3\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), _jsxDEV(Text, {\n      style: styles.title,\n      children: [Strings.getStartedWithAccount, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), _jsxDEV(CustomTextInput, {\n      ref: firstRef,\n      placeholder: Strings.enterEmail,\n      keyboardType: \"email-address\",\n      returnKeyType: \"next\",\n      value: Email,\n      onChangeText: setEmail,\n      onSubmitEditing: () => secondRef.current.focus()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), _jsxDEV(CustomTextInput, {\n      ref: secondRef,\n      placeholder: Strings.password,\n      keyboardType: \"default\",\n      returnKeyType: \"done\",\n      style: styles.inputText,\n      secureTextEntry: isSecureCheck,\n      value: Password,\n      onChangeText: setPassword,\n      suffixIconStyle: styles.iconStyle,\n      eyeSource: isSecureCheck ? images.eyeOpenIcon : images.eyeHideIcon,\n      eye: true,\n      eyePress: () => setIsSecureCheck(!isSecureCheck)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), _jsxDEV(View, {\n      style: styles.flexStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), _jsxDEV(View, {\n      style: styles.checkBoxView,\n      children: [_jsxDEV(CustomCheckbox, {\n        label: Strings.termsTextStart,\n        onPress: isChecked => handleCheckboxPress(isChecked, setRememberMe)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), _jsxDEV(GradientButton, {\n        buttonText: Strings.getStarted,\n        style: [styles.btnStyle(isButtonEnabled)],\n        onPress: () => {\n          if (isButtonEnabled) {\n            navigate(ScreenNames.StartScreenTwo);\n            handleNext();\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\nexport default GetStartedScreenOne;","map":{"version":3,"names":["React","useRef","useState","styles","AppBar","ScreenNames","Strings","CustomTextInput","images","CustomCheckbox","GradientButton","navigate","ProgressBar","jsxDEV","_jsxDEV","GetStartedScreenOne","navigation","Email","setEmail","Password","setPassword","isSecureCheck","setIsSecureCheck","rememberMe","setRememberMe","firstRef","secondRef","currentStep","setCurrentStep","handleCheckboxPress","isChecked","console","log","isButtonEnabled","length","totalSteps","handleNext","progress","View","style","container","children","StatusBar","translucent","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","start","end","onPress","goBack","Text","title","getStartedWithAccount","ref","placeholder","enterEmail","keyboardType","returnKeyType","value","onChangeText","onSubmitEditing","current","focus","password","inputText","secureTextEntry","suffixIconStyle","iconStyle","eyeSource","eyeOpenIcon","eyeHideIcon","eye","eyePress","flexStyle","checkBoxView","label","termsTextStart","buttonText","getStarted","btnStyle","StartScreenTwo"],"sources":["/Users/nextek/Desktop/folder/SwiftPay/src/screens/auth/getStartScreenOne/index.js"],"sourcesContent":["import { View, Text, StatusBar, TouchableWithoutFeedback, Keyboard } from 'react-native';\nimport React, { useRef, useState } from 'react';\nimport { styles } from './styles';\nimport AppBar from '../../../components/appBar';\nimport { ScreenNames, Strings } from '../../../constants/strings';\nimport CustomTextInput from '../../../components/customTextInput';\nimport { images } from '../../../assets/images';\nimport CustomCheckbox from '../../../components/customCheckBox';\nimport { GradientButton } from '../../../components/cta';\nimport { navigate } from '../../../navigator/navigationRef';\nimport ProgressBar from '../../../components/progressBar';\n\nconst GetStartedScreenOne = ({ navigation }) => {\n  const [Email, setEmail] = useState('');\n  const [Password, setPassword] = useState('');\n  const [isSecureCheck, setIsSecureCheck] = useState(true);\n  const [rememberMe, setRememberMe] = useState(false);\n  const firstRef = useRef(null);\n  const secondRef = useRef(null);\n  const [currentStep, setCurrentStep] = useState(1);\n\n  const handleCheckboxPress = (isChecked, setRememberMe) => {\n    setRememberMe(isChecked);\n    console.log('Keep me signed in is checked:', isChecked);\n  };\n\n  const isButtonEnabled = Email.length > 0 && Password.length > 0 && rememberMe;\n\n  const totalSteps = 3;\n\n  const handleNext = () => {\n    if (currentStep < totalSteps) {\n      setCurrentStep(currentStep + 1);\n    }\n  };\n\n  const progress = (currentStep / totalSteps) * 100;\n\n  return (\n    <View style={[styles.container]}>\n      <StatusBar translucent={true} backgroundColor={'transparent'} />\n      <AppBar start={1} end={5} onPress={() => navigation.goBack()} />\n\n      <ProgressBar progress={33.3} />\n\n      <Text style={styles.title}>{Strings.getStartedWithAccount} </Text>\n      <CustomTextInput\n        ref={firstRef}\n        placeholder={Strings.enterEmail}\n        keyboardType=\"email-address\"\n        returnKeyType=\"next\"\n        value={Email}\n        onChangeText={setEmail}\n        onSubmitEditing={() => secondRef.current.focus()}\n      />\n      <CustomTextInput\n        ref={secondRef}\n        placeholder={Strings.password}\n        keyboardType=\"default\"\n        returnKeyType=\"done\"\n        style={styles.inputText}\n        secureTextEntry={isSecureCheck}\n        value={Password}\n        onChangeText={setPassword}\n        suffixIconStyle={styles.iconStyle}\n        eyeSource={isSecureCheck ? images.eyeOpenIcon : images.eyeHideIcon}\n        eye\n        eyePress={() => setIsSecureCheck(!isSecureCheck)}\n      />\n\n      <View style={styles.flexStyle} />\n      <View style={styles.checkBoxView}>\n        <CustomCheckbox\n          label={Strings.termsTextStart}\n          onPress={isChecked => handleCheckboxPress(isChecked, setRememberMe)}\n        />\n\n        <GradientButton\n          buttonText={Strings.getStarted}\n          style={[styles.btnStyle(isButtonEnabled)]}\n          onPress={() => {\n            if (isButtonEnabled) {\n              navigate(ScreenNames.StartScreenTwo);\n              handleNext();\n            }\n          }}\n        />\n      </View>\n    </View>\n  );\n};\n\nexport default GetStartedScreenOne;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}