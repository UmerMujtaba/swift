{"ast":null,"code":"const truncateString = (codeValue, codeLength) => codeValue.substr(0, codeLength).split('');\nconst emptySymbols = codeLength => new Array(codeLength).fill('');\nexport const getSymbols = (codeValue, codeLength) => new Array().concat(truncateString(codeValue, codeLength)).concat(emptySymbols(codeLength)).slice(0, codeLength);\nexport const getStyle = (base, custom) => custom ? [base, custom] : base;\nexport const isLastFilledCell = ({\n  value,\n  index\n}) => Boolean(value && value.length - 2 === index);","map":{"version":3,"names":["truncateString","codeValue","codeLength","substr","split","emptySymbols","Array","fill","getSymbols","concat","slice","getStyle","base","custom","isLastFilledCell","value","index","Boolean","length"],"sources":["/Users/nextek/Desktop/folder/SwiftPay/node_modules/react-native-confirmation-code-field/esm/utils.js"],"sourcesContent":["const truncateString = (codeValue, codeLength) => codeValue.substr(0, codeLength).split('');\nconst emptySymbols = (codeLength) => new Array(codeLength).fill('');\nexport const getSymbols = (codeValue, codeLength) => new Array()\n    .concat(truncateString(codeValue, codeLength))\n    .concat(emptySymbols(codeLength))\n    .slice(0, codeLength);\nexport const getStyle = (base, custom) => (custom ? [base, custom] : base);\nexport const isLastFilledCell = ({ value, index }) => Boolean(value && value.length - 2 === index);\n"],"mappings":"AAAA,MAAMA,cAAc,GAAGA,CAACC,SAAS,EAAEC,UAAU,KAAKD,SAAS,CAACE,MAAM,CAAC,CAAC,EAAED,UAAU,CAAC,CAACE,KAAK,CAAC,EAAE,CAAC;AAC3F,MAAMC,YAAY,GAAIH,UAAU,IAAK,IAAII,KAAK,CAACJ,UAAU,CAAC,CAACK,IAAI,CAAC,EAAE,CAAC;AACnE,OAAO,MAAMC,UAAU,GAAGA,CAACP,SAAS,EAAEC,UAAU,KAAK,IAAII,KAAK,CAAC,CAAC,CAC3DG,MAAM,CAACT,cAAc,CAACC,SAAS,EAAEC,UAAU,CAAC,CAAC,CAC7CO,MAAM,CAACJ,YAAY,CAACH,UAAU,CAAC,CAAC,CAChCQ,KAAK,CAAC,CAAC,EAAER,UAAU,CAAC;AACzB,OAAO,MAAMS,QAAQ,GAAGA,CAACC,IAAI,EAAEC,MAAM,KAAMA,MAAM,GAAG,CAACD,IAAI,EAAEC,MAAM,CAAC,GAAGD,IAAK;AAC1E,OAAO,MAAME,gBAAgB,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAM,CAAC,KAAKC,OAAO,CAACF,KAAK,IAAIA,KAAK,CAACG,MAAM,GAAG,CAAC,KAAKF,KAAK,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}