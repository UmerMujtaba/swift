{"ast":null,"code":"var _jsxFileName = \"/Users/nextek/Desktop/folder/SwiftPay/src/screens/auth/getStartScreenOne/index.js\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport React, { useRef, useState } from 'react';\nimport { styles } from './styles';\nimport AppBar from '../../../components/appBar';\nimport { ScreenNames, Strings } from '../../../constants/strings';\nimport CustomTextInput from '../../../components/customTextInput';\nimport { images } from '../../../assets/images';\nimport CustomCheckbox from '../../../components/customCheckBox';\nimport { GradientButton } from '../../../components/cta';\nimport { navigate } from '../../../navigator/navigationRef';\nimport ProgressBar from '../../../components/progressBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GetStartedScreenOne = ({\n  navigation\n}) => {\n  const [Email, setEmail] = useState('');\n  const [Password, setPassword] = useState('');\n  const [isSecureCheck, setIsSecureCheck] = useState(true);\n  const [rememberMe, setRememberMe] = useState(false);\n  const firstRef = useRef(null);\n  const secondRef = useRef(null);\n  const [currentStep, setCurrentStep] = useState(1);\n  const handleCheckboxPress = (isChecked, setRememberMe) => {\n    setRememberMe(isChecked);\n    console.log('Keep me signed in is checked:', isChecked);\n  };\n  const isButtonEnabled = Email.length > 0 && Password.length > 0 && rememberMe;\n  const totalSteps = 3;\n  const handleNext = () => {\n    if (currentStep < totalSteps) {\n      setCurrentStep(currentStep + 1);\n    }\n  };\n  const progress = currentStep / totalSteps * 100;\n  const DedicatedView = Platform.OS === 'web' ? View : TouchableWithoutFeedback;\n  const handlePress = () => {\n    Platform.OS !== 'web' && Keyboard.dismiss();\n  };\n  return _jsxDEV(DedicatedView, {\n    style: {\n      flex: 1\n    },\n    onPress: handlePress,\n    children: _jsxDEV(View, {\n      style: [styles.container],\n      children: [_jsxDEV(StatusBar, {\n        translucent: true,\n        backgroundColor: 'transparent'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this), _jsxDEV(AppBar, {\n        start: 1,\n        end: 3,\n        onPress: () => navigation.goBack()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, this), _jsxDEV(ProgressBar, {\n        progress: 33.3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this), _jsxDEV(Text, {\n        style: styles.title,\n        children: [Strings.getStartedWithAccount, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this), _jsxDEV(CustomTextInput, {\n        ref: firstRef,\n        placeholder: Strings.enterEmail,\n        keyboardType: \"email-address\",\n        returnKeyType: \"next\",\n        value: Email,\n        onChangeText: setEmail,\n        onSubmitEditing: () => secondRef.current.focus()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this), _jsxDEV(CustomTextInput, {\n        ref: secondRef,\n        placeholder: Strings.password,\n        keyboardType: \"default\",\n        returnKeyType: \"done\",\n        style: styles.inputText,\n        secureTextEntry: isSecureCheck,\n        value: Password,\n        onChangeText: setPassword,\n        suffixIconStyle: styles.iconStyle,\n        eyeSource: isSecureCheck ? images.eyeOpenIcon : images.eyeHideIcon,\n        eye: true,\n        eyePress: () => setIsSecureCheck(!isSecureCheck)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }, this), _jsxDEV(View, {\n        style: styles.flexStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }, this), _jsxDEV(View, {\n        style: styles.checkBoxView,\n        children: [_jsxDEV(CustomCheckbox, {\n          label: Strings.termsTextStart,\n          onPress: isChecked => handleCheckboxPress(isChecked, setRememberMe)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }, this), _jsxDEV(GradientButton, {\n          buttonText: Strings.getStarted,\n          style: [styles.btnStyle(isButtonEnabled)],\n          onPress: () => {\n            if (isButtonEnabled) {\n              navigate(ScreenNames.StartScreenTwo);\n              handleNext();\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\nexport default GetStartedScreenOne;","map":{"version":3,"names":["React","useRef","useState","styles","AppBar","ScreenNames","Strings","CustomTextInput","images","CustomCheckbox","GradientButton","navigate","ProgressBar","jsxDEV","_jsxDEV","GetStartedScreenOne","navigation","Email","setEmail","Password","setPassword","isSecureCheck","setIsSecureCheck","rememberMe","setRememberMe","firstRef","secondRef","currentStep","setCurrentStep","handleCheckboxPress","isChecked","console","log","isButtonEnabled","length","totalSteps","handleNext","progress","DedicatedView","Platform","OS","View","TouchableWithoutFeedback","handlePress","Keyboard","dismiss","style","flex","onPress","children","container","StatusBar","translucent","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","start","end","goBack","Text","title","getStartedWithAccount","ref","placeholder","enterEmail","keyboardType","returnKeyType","value","onChangeText","onSubmitEditing","current","focus","password","inputText","secureTextEntry","suffixIconStyle","iconStyle","eyeSource","eyeOpenIcon","eyeHideIcon","eye","eyePress","flexStyle","checkBoxView","label","termsTextStart","buttonText","getStarted","btnStyle","StartScreenTwo"],"sources":["/Users/nextek/Desktop/folder/SwiftPay/src/screens/auth/getStartScreenOne/index.js"],"sourcesContent":["import { View, Text, StatusBar, TouchableWithoutFeedback, Keyboard, Platform, TextInput } from 'react-native';\nimport React, { useRef, useState } from 'react';\nimport { styles } from './styles';\nimport AppBar from '../../../components/appBar';\nimport { ScreenNames, Strings } from '../../../constants/strings';\nimport CustomTextInput from '../../../components/customTextInput';\nimport { images } from '../../../assets/images';\nimport CustomCheckbox from '../../../components/customCheckBox';\nimport { GradientButton } from '../../../components/cta';\nimport { navigate } from '../../../navigator/navigationRef';\nimport ProgressBar from '../../../components/progressBar';\n\nconst GetStartedScreenOne = ({ navigation }) => {\n  const [Email, setEmail] = useState('');\n  const [Password, setPassword] = useState('');\n  const [isSecureCheck, setIsSecureCheck] = useState(true);\n  const [rememberMe, setRememberMe] = useState(false);\n  const firstRef = useRef(null);\n  const secondRef = useRef(null);\n  const [currentStep, setCurrentStep] = useState(1);\n\n  const handleCheckboxPress = (isChecked, setRememberMe) => {\n    setRememberMe(isChecked);\n    console.log('Keep me signed in is checked:', isChecked);\n  };\n\n  const isButtonEnabled = Email.length > 0 && Password.length > 0 && rememberMe;\n\n  const totalSteps = 3;\n\n  const handleNext = () => {\n    if (currentStep < totalSteps) {\n      setCurrentStep(currentStep + 1);\n    }\n  };\n\n  const progress = (currentStep / totalSteps) * 100;\n  const DedicatedView = Platform.OS === 'web' ? View : TouchableWithoutFeedback\n  const handlePress = () => {\n    Platform.OS !== 'web' && Keyboard.dismiss()\n  }\n  return (\n    <DedicatedView style={{flex:1}} onPress={handlePress}>\n    <View style={[styles.container]}>\n      <StatusBar translucent={true} backgroundColor={'transparent'} />\n      <AppBar start={1} end={3} onPress={() => navigation.goBack()} />\n\n      <ProgressBar progress={33.3} />\n\n      <Text style={styles.title}>{Strings.getStartedWithAccount} </Text>\n\n      {/* <TextInput\n      \n      \n     style={{height:30}}\n     \n      /> */}\n      <CustomTextInput\n        ref={firstRef}\n        placeholder={Strings.enterEmail}\n        keyboardType=\"email-address\"\n        returnKeyType=\"next\"\n        value={Email}\n        onChangeText={setEmail}\n        onSubmitEditing={() => secondRef.current.focus()}\n        //selectionColor='red'\n      />\n      <CustomTextInput\n        ref={secondRef}\n        placeholder={Strings.password}\n        keyboardType=\"default\"\n        returnKeyType=\"done\"\n        style={styles.inputText}\n        secureTextEntry={isSecureCheck}\n        value={Password}\n        onChangeText={setPassword}\n        suffixIconStyle={styles.iconStyle}\n        eyeSource={isSecureCheck ? images.eyeOpenIcon : images.eyeHideIcon}\n        eye\n        eyePress={() => setIsSecureCheck(!isSecureCheck)}\n      />\n\n      <View style={styles.flexStyle} />\n      <View style={styles.checkBoxView}>\n        <CustomCheckbox\n          label={Strings.termsTextStart}\n          onPress={isChecked => handleCheckboxPress(isChecked, setRememberMe)}\n        />\n\n        <GradientButton\n          buttonText={Strings.getStarted}\n          style={[styles.btnStyle(isButtonEnabled)]}\n          onPress={() => {\n            if (isButtonEnabled) {\n              navigate(ScreenNames.StartScreenTwo);\n              handleNext();\n            }\n          }}\n        />\n      </View>\n    </View>\n    </DedicatedView>\n  );\n};\n\nexport default GetStartedScreenOne;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}