{"ast":null,"code":"var _jsxFileName = \"/Users/nextek/Desktop/folder/SwiftPay/src/screens/auth/getStartedScreenThree/index.js\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport React, { useState } from 'react';\nimport AppBar from '../../../components/appBar';\nimport { styles } from './styles';\nimport { Strings } from '../../../constants/strings';\nimport { CodeField, Cursor, useBlurOnFulfill, useClearByFocusCell } from 'react-native-confirmation-code-field';\nimport { rfs, rwp } from '../../../constants/dimensions';\nimport { GradientButton } from '../../../components/cta';\nimport ProgressBar from '../../../components/progressBar';\nimport { colors } from '../../../constants/colors';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GetStartedScreenThree = ({\n  route,\n  navigation\n}) => {\n  const {\n    phone,\n    countryCode\n  } = route.params;\n  const [otpCode, setOtpCode] = useState(null);\n  const CELL_COUNT = 6;\n  const [value, setValue] = useState('');\n  const [results, getCellOnLayoutHandler] = useClearByFocusCell({\n    value,\n    setValue\n  });\n  const ref = useBlurOnFulfill({\n    value,\n    cellCount: CELL_COUNT\n  });\n  const isOtpComplete = value.length === CELL_COUNT;\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: [_jsxDEV(AppBar, {\n      start: 2,\n      end: 5,\n      onPress: () => navigation.goBack()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), _jsxDEV(ProgressBar, {\n      progress: 100,\n      style: {\n        borderBottomLeftRadius: 8,\n        borderBottomTopRadius: 8\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), _jsxDEV(Text, {\n      style: styles.title,\n      children: [Strings.verifyPhn, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), _jsxDEV(Text, {\n      style: styles.subTitle,\n      children: [Strings.otpHeading, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), _jsxDEV(View, {\n      style: styles.countryCodeStyle,\n      children: [_jsxDEV(Text, {\n        style: styles.phnText,\n        children: `+${countryCode} ${phone}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), _jsxDEV(TouchableOpacity, {\n        children: _jsxDEV(Text, {\n          style: styles.editText,\n          children: Strings.editNumber\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), _jsxDEV(View, {\n      style: styles.otpContainer,\n      children: _jsxDEV(CodeField, Object.assign({\n        ref: ref\n      }, results, {\n        caretHidden: false,\n        value: value,\n        onChangeText: text => {\n          setValue(text);\n          setOtpCode(text);\n        },\n        cellCount: CELL_COUNT,\n        rootStyle: styles.codeFieldRoot,\n        keyboardType: \"number-pad\",\n        textContentType: \"oneTimeCode\",\n        autoComplete: Platform.select({\n          android: 'sms-otp',\n          default: 'one-time-code'\n        }),\n        testID: \"my-code-input\",\n        renderCell: ({\n          index,\n          symbol,\n          isFocused\n        }) => _jsxDEV(View, {\n          style: styles.cell,\n          children: _jsxDEV(Text, {\n            style: [styles.cellText],\n            onLayout: getCellOnLayoutHandler(index),\n            children: symbol || (isFocused ? _jsxDEV(Cursor, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 41\n            }, this) : null)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), _jsxDEV(View, {\n      style: styles.bottomTextRow,\n      children: [_jsxDEV(Text, {\n        style: styles.codeText,\n        children: Strings.codeReceive\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), _jsxDEV(TouchableOpacity, {\n        children: _jsxDEV(Text, {\n          style: [styles.codeText, {\n            color: colors.primary,\n            marginLeft: rwp(2),\n            fontFamily: 'PlusJakartaSans-SemiBold',\n            fontSize: Platform.OS === 'ios' ? rfs(14) : rfs(16)\n          }],\n          children: Strings.resendCode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), _jsxDEV(View, {\n      style: styles.flexStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), _jsxDEV(GradientButton, {\n      buttonText: Strings.verify,\n      style: styles.btnStyle(isOtpComplete)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\nexport default GetStartedScreenThree;","map":{"version":3,"names":["React","useState","AppBar","styles","Strings","CodeField","Cursor","useBlurOnFulfill","useClearByFocusCell","rfs","rwp","GradientButton","ProgressBar","colors","jsxDEV","_jsxDEV","GetStartedScreenThree","route","navigation","phone","countryCode","params","otpCode","setOtpCode","CELL_COUNT","value","setValue","results","getCellOnLayoutHandler","ref","cellCount","isOtpComplete","length","View","style","container","children","start","end","onPress","goBack","fileName","_jsxFileName","lineNumber","columnNumber","progress","borderBottomLeftRadius","borderBottomTopRadius","Text","title","verifyPhn","subTitle","otpHeading","countryCodeStyle","phnText","TouchableOpacity","editText","editNumber","otpContainer","Object","assign","caretHidden","onChangeText","text","rootStyle","codeFieldRoot","keyboardType","textContentType","autoComplete","Platform","select","android","default","testID","renderCell","index","symbol","isFocused","cell","cellText","onLayout","bottomTextRow","codeText","codeReceive","color","primary","marginLeft","fontFamily","fontSize","OS","resendCode","flexStyle","buttonText","verify","btnStyle"],"sources":["/Users/nextek/Desktop/folder/SwiftPay/src/screens/auth/getStartedScreenThree/index.js"],"sourcesContent":["import { View, Text, TouchableOpacity, Platform } from 'react-native';\nimport React, { useState } from 'react';\nimport AppBar from '../../../components/appBar';\nimport { styles } from './styles';\nimport { Strings } from '../../../constants/strings';\nimport {\n  CodeField,\n  Cursor,\n  useBlurOnFulfill,\n  useClearByFocusCell,\n} from 'react-native-confirmation-code-field';\nimport { rfs, rwp } from '../../../constants/dimensions';\nimport { GradientButton } from '../../../components/cta';\nimport ProgressBar from '../../../components/progressBar';\nimport { colors } from '../../../constants/colors';\n\nconst GetStartedScreenThree = ({ route, navigation }) => {\n  const { phone, countryCode } = route.params;\n  const [otpCode, setOtpCode] = useState(null);\n  const CELL_COUNT = 6;\n  const [value, setValue] = useState('');\n  const [results, getCellOnLayoutHandler] = useClearByFocusCell({\n    value,\n    setValue,\n  });\n  const ref = useBlurOnFulfill({ value, cellCount: CELL_COUNT });\n  const isOtpComplete = value.length === CELL_COUNT;\n  return (\n    <View style={styles.container}>\n      <AppBar start={2} end={5} onPress={() => navigation.goBack()} />\n      <ProgressBar\n        progress={100}\n        style={{ borderBottomLeftRadius: 8, borderBottomTopRadius: 8 }}\n      />\n      <Text style={styles.title}>{Strings.verifyPhn} </Text>\n      <Text style={styles.subTitle}>{Strings.otpHeading} </Text>\n\n      <View style={styles.countryCodeStyle}>\n        <Text style={styles.phnText}>{`+${countryCode} ${phone}`}</Text>\n        <TouchableOpacity>\n          <Text style={styles.editText}>{Strings.editNumber}</Text>\n        </TouchableOpacity>\n      </View>\n      <View style={styles.otpContainer}>\n        <CodeField\n          ref={ref}\n          {...results}\n          caretHidden={false}\n          value={value}\n          onChangeText={text => {\n            setValue(text);\n            setOtpCode(text);\n          }}\n          cellCount={CELL_COUNT}\n          rootStyle={styles.codeFieldRoot}\n          keyboardType=\"number-pad\"\n          textContentType=\"oneTimeCode\"\n          autoComplete={Platform.select({\n            android: 'sms-otp',\n            default: 'one-time-code',\n          })}\n          testID=\"my-code-input\"\n          renderCell={({ index, symbol, isFocused }) => (\n            <View style={styles.cell}>\n              <Text\n                key={index}\n                style={[styles.cellText]}\n                onLayout={getCellOnLayoutHandler(index)}>\n                {symbol || (isFocused ? <Cursor /> : null)}\n              </Text>\n            </View>\n          )}\n        />\n      </View>\n      <View style={styles.bottomTextRow}>\n        <Text style={styles.codeText}>{Strings.codeReceive}</Text>\n        <TouchableOpacity>\n          <Text\n            style={[\n              styles.codeText,\n              {\n                color: colors.primary,\n                marginLeft: rwp(2),\n                fontFamily: 'PlusJakartaSans-SemiBold',\n                fontSize: Platform.OS ==='ios' ? rfs(14) : rfs(16)\n              },\n            ]}>\n            {Strings.resendCode}\n          </Text>\n        </TouchableOpacity>\n      </View>\n      <View style={styles.flexStyle} />\n      <GradientButton\n        buttonText={Strings.verify}\n        style={styles.btnStyle(isOtpComplete)}\n      />\n    </View>\n  );\n};\n\nexport default GetStartedScreenThree;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}