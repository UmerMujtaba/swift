{"ast":null,"code":"'use strict';import _objectWithoutPropertiesLoose from\"@babel/runtime/helpers/objectWithoutPropertiesLoose\";const _excluded=[\"itemLayoutAnimation\",\"skipEnteringExitingAnimations\"];import React,{forwardRef,useRef}from'react';import FlatList from\"react-native-web/dist/exports/FlatList\";import{AnimatedView}from\"./View.js\";import{createAnimatedComponent}from\"../createAnimatedComponent/index.js\";import{LayoutAnimationConfig}from\"./LayoutAnimationConfig.js\";import{jsx as _jsx}from\"react/jsx-runtime\";const AnimatedFlatList=createAnimatedComponent(FlatList);const createCellRendererComponent=itemLayoutAnimationRef=>{const CellRendererComponent=props=>{return _jsx(AnimatedView,{layout:itemLayoutAnimationRef?.current,onLayout:props.onLayout,style:props.style,children:props.children});};return CellRendererComponent;};const FlatListForwardRefRender=function(props,ref){const{itemLayoutAnimation,skipEnteringExitingAnimations}=props,restProps=_objectWithoutPropertiesLoose(props,_excluded);if(!('scrollEventThrottle'in restProps)){restProps.scrollEventThrottle=1;}const itemLayoutAnimationRef=useRef(itemLayoutAnimation);itemLayoutAnimationRef.current=itemLayoutAnimation;const CellRendererComponent=React.useMemo(()=>createCellRendererComponent(itemLayoutAnimationRef),[itemLayoutAnimationRef]);const animatedFlatList=_jsx(AnimatedFlatList,Object.assign({ref:ref},restProps,{CellRendererComponent:CellRendererComponent}));if(skipEnteringExitingAnimations===undefined){return animatedFlatList;}return _jsx(LayoutAnimationConfig,{skipEntering:true,skipExiting:true,children:animatedFlatList});};export const ReanimatedFlatList=forwardRef(FlatListForwardRefRender);","map":{"version":3,"names":["_objectWithoutPropertiesLoose","_excluded","React","forwardRef","useRef","FlatList","AnimatedView","createAnimatedComponent","LayoutAnimationConfig","jsx","_jsx","AnimatedFlatList","createCellRendererComponent","itemLayoutAnimationRef","CellRendererComponent","props","layout","current","onLayout","style","children","FlatListForwardRefRender","ref","itemLayoutAnimation","skipEnteringExitingAnimations","restProps","scrollEventThrottle","useMemo","animatedFlatList","Object","assign","undefined","skipEntering","skipExiting","ReanimatedFlatList"],"sources":["/Users/nextek/Desktop/folder/SwiftPay/node_modules/react-native-reanimated/src/component/FlatList.tsx"],"sourcesContent":["'use strict';\nimport React, { forwardRef, useRef } from 'react';\nimport type {\n  FlatListProps,\n  LayoutChangeEvent,\n  StyleProp,\n  ViewStyle,\n} from 'react-native';\nimport { FlatList } from 'react-native';\nimport { AnimatedView } from './View';\nimport { createAnimatedComponent } from '../createAnimatedComponent';\nimport type { ILayoutAnimationBuilder } from '../layoutReanimation/animationBuilder/commonTypes';\nimport { LayoutAnimationConfig } from './LayoutAnimationConfig';\nimport type { AnimatedStyle } from '../commonTypes';\nimport type { AnimatedProps } from '../helperTypes';\n\nconst AnimatedFlatList = createAnimatedComponent(FlatList);\n\ninterface CellRendererComponentProps {\n  onLayout?: ((event: LayoutChangeEvent) => void) | undefined;\n  children: React.ReactNode;\n  style?: StyleProp<AnimatedStyle<ViewStyle>>;\n}\n\nconst createCellRendererComponent = (\n  itemLayoutAnimationRef?: React.MutableRefObject<\n    ILayoutAnimationBuilder | undefined\n  >\n) => {\n  const CellRendererComponent = (props: CellRendererComponentProps) => {\n    return (\n      <AnimatedView\n        // TODO TYPESCRIPT This is temporary cast is to get rid of .d.ts file.\n        layout={itemLayoutAnimationRef?.current as any}\n        onLayout={props.onLayout}\n        style={props.style}>\n        {props.children}\n      </AnimatedView>\n    );\n  };\n\n  return CellRendererComponent;\n};\n\ninterface ReanimatedFlatListPropsWithLayout<T>\n  extends AnimatedProps<FlatListProps<T>> {\n  /**\n   * Lets you pass layout animation directly to the FlatList item. Works only\n   * with a single-column `Animated.FlatList`, `numColumns` property cannot be\n   * greater than 1.\n   */\n  itemLayoutAnimation?: ILayoutAnimationBuilder;\n  /**\n   * Lets you skip entering and exiting animations of FlatList items when on\n   * FlatList mount or unmount.\n   */\n  skipEnteringExitingAnimations?: boolean;\n  /** Property `CellRendererComponent` is not supported in `Animated.FlatList`. */\n  CellRendererComponent?: never;\n}\n\nexport type FlatListPropsWithLayout<T> = ReanimatedFlatListPropsWithLayout<T>;\n\n// Since createAnimatedComponent return type is ComponentClass that has the props of the argument,\n// but not things like NativeMethods, etc. we need to add them manually by extending the type.\ninterface AnimatedFlatListComplement<T> extends FlatList<T> {\n  getNode(): FlatList<T>;\n}\n\n// We need explicit any here, because this is the exact same type that is used in React Native types.\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst FlatListForwardRefRender = function <Item = any>(\n  props: ReanimatedFlatListPropsWithLayout<Item>,\n  ref: React.ForwardedRef<FlatList>\n) {\n  const { itemLayoutAnimation, skipEnteringExitingAnimations, ...restProps } =\n    props;\n\n  // Set default scrollEventThrottle, because user expects\n  // to have continuous scroll events and\n  // react-native defaults it to 50 for FlatLists.\n  // We set it to 1, so we have peace until\n  // there are 960 fps screens.\n  if (!('scrollEventThrottle' in restProps)) {\n    restProps.scrollEventThrottle = 1;\n  }\n\n  const itemLayoutAnimationRef = useRef(itemLayoutAnimation);\n  itemLayoutAnimationRef.current = itemLayoutAnimation;\n\n  const CellRendererComponent = React.useMemo(\n    () => createCellRendererComponent(itemLayoutAnimationRef),\n    [itemLayoutAnimationRef]\n  );\n\n  const animatedFlatList = (\n    // @ts-expect-error In its current type state, createAnimatedComponent cannot create generic components.\n    <AnimatedFlatList\n      ref={ref}\n      {...restProps}\n      CellRendererComponent={CellRendererComponent}\n    />\n  );\n\n  if (skipEnteringExitingAnimations === undefined) {\n    return animatedFlatList;\n  }\n\n  return (\n    <LayoutAnimationConfig skipEntering skipExiting>\n      {animatedFlatList}\n    </LayoutAnimationConfig>\n  );\n};\n\nexport const ReanimatedFlatList = forwardRef(FlatListForwardRefRender) as <\n  // We need explicit any here, because this is the exact same type that is used in React Native types.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ItemT = any,\n>(\n  props: ReanimatedFlatListPropsWithLayout<ItemT> & {\n    ref?: React.ForwardedRef<FlatList>;\n  }\n) => React.ReactElement;\n\nexport type ReanimatedFlatList<T> = typeof AnimatedFlatList &\n  AnimatedFlatListComplement<T>;\n"],"mappings":"AAAA,YAAY,QAAAA,6BAAA,iEAAAC,SAAA,yDACZ,MAAO,CAAAC,KAAK,EAAIC,UAAU,CAAEC,MAAM,KAAQ,OAAO,QAAAC,QAAA,8CAQjD,OAASC,YAAY,KAAQ,WAAQ,CACrC,OAASC,uBAAuB,KAAQ,qCAA4B,CAEpE,OAASC,qBAAqB,KAAQ,4BAAyB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAIhE,KAAM,CAAAC,gBAAgB,CAAGJ,uBAAuB,CAACF,QAAQ,CAAC,CAQ1D,KAAM,CAAAO,2BAA2B,CAC/BC,sBAEC,EACE,CACH,KAAM,CAAAC,qBAAqB,CAAIC,KAAiC,EAAK,CACnE,MACE,CAAAL,IAAA,CAACJ,YAAA,CACC,CACAU,MAAM,CAAEH,sBAAsB,EAAEI,OAAe,CAC/CC,QAAQ,CAAEH,KAAK,CAACG,QAAS,CACzBC,KAAK,CAAEJ,KAAK,CAACI,KAAM,CAAAC,QAAA,CAClBL,KAAK,CAACK,QAAQ,CACH,CAAC,CAEnB,CAAC,CAED,MAAO,CAAAN,qBAAqB,CAC9B,CAAC,CA6BD,KAAM,CAAAO,wBAAwB,CAAG,QAAAA,CAC/BN,KAA8C,CAC9CO,GAAiC,CACjC,CACA,KAAM,CAAEC,mBAAmB,CAAEC,6BAA4C,CAAC,CACxET,KAAK,CADwDU,SAAA,CAAAzB,6BAAA,CAC7De,KAAK,CAAAd,SAAA,EAOP,GAAI,EAAE,qBAAqB,EAAI,CAAAwB,SAAS,CAAC,CAAE,CACzCA,SAAS,CAACC,mBAAmB,CAAG,CAAC,CACnC,CAEA,KAAM,CAAAb,sBAAsB,CAAGT,MAAM,CAACmB,mBAAmB,CAAC,CAC1DV,sBAAsB,CAACI,OAAO,CAAGM,mBAAmB,CAEpD,KAAM,CAAAT,qBAAqB,CAAGZ,KAAK,CAACyB,OAAO,CACzC,IAAMf,2BAA2B,CAACC,sBAAsB,CAAC,CACzD,CAACA,sBAAsB,CACzB,CAAC,CAED,KAAM,CAAAe,gBAAgB,CAEpBlB,IAAA,CAACC,gBAAgB,CAAAkB,MAAA,CAAAC,MAAA,EACfR,GAAG,CAAEA,GAAI,EACLG,SAAS,EACbX,qBAAqB,CAAEA,qBAAA,EACxB,CACF,CAED,GAAIU,6BAA6B,GAAKO,SAAS,CAAE,CAC/C,MAAO,CAAAH,gBAAgB,CACzB,CAEA,MACE,CAAAlB,IAAA,CAACF,qBAAqB,EAACwB,YAAY,MAACC,WAAW,MAAAb,QAAA,CAC5CQ,gBAAgB,CACI,CAAC,CAE5B,CAAC,CAED,MAAO,MAAM,CAAAM,kBAAkB,CAAG/B,UAAU,CAACkB,wBAAwB,CAQ9C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}