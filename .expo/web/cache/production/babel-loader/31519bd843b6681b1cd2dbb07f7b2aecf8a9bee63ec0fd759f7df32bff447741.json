{"ast":null,"code":"function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}import VelocityTracker from'./VelocityTracker';const MAX_POINTERS=20;export default class PointerTracker{constructor(){_defineProperty(this,\"velocityTracker\",new VelocityTracker());_defineProperty(this,\"trackedPointers\",new Map());_defineProperty(this,\"touchEventsIds\",new Map());_defineProperty(this,\"lastMovedPointerId\",void 0);_defineProperty(this,\"cachedAbsoluteAverages\",{x:0,y:0});_defineProperty(this,\"cachedRelativeAverages\",{x:0,y:0});this.lastMovedPointerId=NaN;for(let i=0;i<MAX_POINTERS;++i){this.touchEventsIds.set(i,NaN);}}addToTracker(event){if(this.trackedPointers.has(event.pointerId)){return;}this.lastMovedPointerId=event.pointerId;const newElement={abosoluteCoords:{x:event.x,y:event.y},relativeCoords:{x:event.offsetX,y:event.offsetY},timestamp:event.time,velocityX:0,velocityY:0};this.trackedPointers.set(event.pointerId,newElement);this.mapTouchEventId(event.pointerId);this.cachedAbsoluteAverages=this.getAbsoluteCoordsAverage();this.cachedRelativeAverages=this.getRelativeCoordsAverage();}removeFromTracker(pointerId){this.trackedPointers.delete(pointerId);this.removeMappedTouchId(pointerId);}track(event){const element=this.trackedPointers.get(event.pointerId);if(!element){return;}this.lastMovedPointerId=event.pointerId;this.velocityTracker.add(event);const[velocityX,velocityY]=this.velocityTracker.getVelocity();element.velocityX=velocityX;element.velocityY=velocityY;element.abosoluteCoords={x:event.x,y:event.y};element.relativeCoords={x:event.offsetX,y:event.offsetY};this.trackedPointers.set(event.pointerId,element);this.cachedAbsoluteAverages=this.getAbsoluteCoordsAverage();this.cachedRelativeAverages=this.getRelativeCoordsAverage();}mapTouchEventId(id){for(const[mappedId,touchId]of this.touchEventsIds){if(isNaN(touchId)){this.touchEventsIds.set(mappedId,id);break;}}}removeMappedTouchId(id){const mappedId=this.getMappedTouchEventId(id);if(!isNaN(mappedId)){this.touchEventsIds.set(mappedId,NaN);}}getMappedTouchEventId(touchEventId){for(const[key,value]of this.touchEventsIds.entries()){if(value===touchEventId){return key;}}return NaN;}getVelocity(pointerId){var _this$trackedPointers,_this$trackedPointers2;return{x:(_this$trackedPointers=this.trackedPointers.get(pointerId))===null||_this$trackedPointers===void 0?void 0:_this$trackedPointers.velocityX,y:(_this$trackedPointers2=this.trackedPointers.get(pointerId))===null||_this$trackedPointers2===void 0?void 0:_this$trackedPointers2.velocityY};}getLastAbsoluteCoords(pointerId){if(pointerId!==undefined){var _this$trackedPointers3,_this$trackedPointers4;return{x:(_this$trackedPointers3=this.trackedPointers.get(pointerId))===null||_this$trackedPointers3===void 0?void 0:_this$trackedPointers3.abosoluteCoords.x,y:(_this$trackedPointers4=this.trackedPointers.get(pointerId))===null||_this$trackedPointers4===void 0?void 0:_this$trackedPointers4.abosoluteCoords.y};}else{var _this$trackedPointers5,_this$trackedPointers6;return{x:(_this$trackedPointers5=this.trackedPointers.get(this.lastMovedPointerId))===null||_this$trackedPointers5===void 0?void 0:_this$trackedPointers5.abosoluteCoords.x,y:(_this$trackedPointers6=this.trackedPointers.get(this.lastMovedPointerId))===null||_this$trackedPointers6===void 0?void 0:_this$trackedPointers6.abosoluteCoords.y};}}getLastRelativeCoords(pointerId){if(pointerId!==undefined){var _this$trackedPointers7,_this$trackedPointers8;return{x:(_this$trackedPointers7=this.trackedPointers.get(pointerId))===null||_this$trackedPointers7===void 0?void 0:_this$trackedPointers7.relativeCoords.x,y:(_this$trackedPointers8=this.trackedPointers.get(pointerId))===null||_this$trackedPointers8===void 0?void 0:_this$trackedPointers8.relativeCoords.y};}else{var _this$trackedPointers9,_this$trackedPointers10;return{x:(_this$trackedPointers9=this.trackedPointers.get(this.lastMovedPointerId))===null||_this$trackedPointers9===void 0?void 0:_this$trackedPointers9.relativeCoords.x,y:(_this$trackedPointers10=this.trackedPointers.get(this.lastMovedPointerId))===null||_this$trackedPointers10===void 0?void 0:_this$trackedPointers10.relativeCoords.y};}}getAbsoluteCoordsAverage(){const coordsSum=this.getAbsoluteCoordsSum();const avgX=coordsSum.x/this.trackedPointers.size;const avgY=coordsSum.y/this.trackedPointers.size;const averages={x:isNaN(avgX)?this.cachedAbsoluteAverages.x:avgX,y:isNaN(avgY)?this.cachedAbsoluteAverages.y:avgY};return averages;}getRelativeCoordsAverage(){const coordsSum=this.getRelativeCoordsSum();const avgX=coordsSum.x/this.trackedPointers.size;const avgY=coordsSum.y/this.trackedPointers.size;const averages={x:isNaN(avgX)?this.cachedRelativeAverages.x:avgX,y:isNaN(avgY)?this.cachedRelativeAverages.y:avgY};return averages;}getAbsoluteCoordsSum(ignoredPointer){const sum={x:0,y:0};this.trackedPointers.forEach((value,key)=>{if(key!==ignoredPointer){sum.x+=value.abosoluteCoords.x;sum.y+=value.abosoluteCoords.y;}});return sum;}getRelativeCoordsSum(ignoredPointer){const sum={x:0,y:0};this.trackedPointers.forEach((value,key)=>{if(key!==ignoredPointer){sum.x+=value.relativeCoords.x;sum.y+=value.relativeCoords.y;}});return sum;}getTrackedPointersCount(){return this.trackedPointers.size;}getTrackedPointersID(){const keys=[];this.trackedPointers.forEach((_value,key)=>{keys.push(key);});return keys;}getData(){return this.trackedPointers;}resetTracker(){this.velocityTracker.reset();this.trackedPointers.clear();this.lastMovedPointerId=NaN;for(let i=0;i<MAX_POINTERS;++i){this.touchEventsIds.set(i,NaN);}}static shareCommonPointers(stPointers,ndPointers){return stPointers.some(pointerId=>ndPointers.includes(pointerId));}}","map":{"version":3,"names":["VelocityTracker","MAX_POINTERS","PointerTracker","constructor","_defineProperty","Map","x","y","lastMovedPointerId","NaN","i","touchEventsIds","set","addToTracker","event","trackedPointers","has","pointerId","newElement","abosoluteCoords","relativeCoords","offsetX","offsetY","timestamp","time","velocityX","velocityY","mapTouchEventId","cachedAbsoluteAverages","getAbsoluteCoordsAverage","cachedRelativeAverages","getRelativeCoordsAverage","removeFromTracker","delete","removeMappedTouchId","track","element","get","velocityTracker","add","getVelocity","id","mappedId","touchId","isNaN","getMappedTouchEventId","touchEventId","key","value","entries","_this$trackedPointers","_this$trackedPointers2","getLastAbsoluteCoords","undefined","_this$trackedPointers3","_this$trackedPointers4","_this$trackedPointers5","_this$trackedPointers6","getLastRelativeCoords","_this$trackedPointers7","_this$trackedPointers8","_this$trackedPointers9","_this$trackedPointers10","coordsSum","getAbsoluteCoordsSum","avgX","size","avgY","averages","getRelativeCoordsSum","ignoredPointer","sum","forEach","getTrackedPointersCount","getTrackedPointersID","keys","_value","push","getData","resetTracker","reset","clear","shareCommonPointers","stPointers","ndPointers","some","includes"],"sources":["/Users/nextek/Desktop/folder/SwiftPay/node_modules/react-native-gesture-handler/lib/module/web/tools/PointerTracker.ts"],"sourcesContent":["import { AdaptedEvent, Point } from '../interfaces';\nimport VelocityTracker from './VelocityTracker';\n\nexport interface TrackerElement {\n  abosoluteCoords: Point;\n  relativeCoords: Point;\n  timestamp: number;\n  velocityX: number;\n  velocityY: number;\n}\n\nconst MAX_POINTERS = 20;\n\nexport default class PointerTracker {\n  private velocityTracker = new VelocityTracker();\n  private trackedPointers: Map<number, TrackerElement> = new Map<\n    number,\n    TrackerElement\n  >();\n\n  private touchEventsIds: Map<number, number> = new Map<number, number>();\n\n  private lastMovedPointerId: number;\n\n  private cachedAbsoluteAverages: { x: number; y: number } = { x: 0, y: 0 };\n  private cachedRelativeAverages: { x: number; y: number } = { x: 0, y: 0 };\n\n  public constructor() {\n    this.lastMovedPointerId = NaN;\n\n    for (let i = 0; i < MAX_POINTERS; ++i) {\n      this.touchEventsIds.set(i, NaN);\n    }\n  }\n\n  public addToTracker(event: AdaptedEvent): void {\n    if (this.trackedPointers.has(event.pointerId)) {\n      return;\n    }\n\n    this.lastMovedPointerId = event.pointerId;\n\n    const newElement: TrackerElement = {\n      abosoluteCoords: { x: event.x, y: event.y },\n      relativeCoords: { x: event.offsetX, y: event.offsetY },\n      timestamp: event.time,\n      velocityX: 0,\n      velocityY: 0,\n    };\n\n    this.trackedPointers.set(event.pointerId, newElement);\n    this.mapTouchEventId(event.pointerId);\n\n    this.cachedAbsoluteAverages = this.getAbsoluteCoordsAverage();\n    this.cachedRelativeAverages = this.getRelativeCoordsAverage();\n  }\n\n  public removeFromTracker(pointerId: number): void {\n    this.trackedPointers.delete(pointerId);\n    this.removeMappedTouchId(pointerId);\n  }\n\n  public track(event: AdaptedEvent): void {\n    const element: TrackerElement = this.trackedPointers.get(\n      event.pointerId\n    ) as TrackerElement;\n\n    if (!element) {\n      return;\n    }\n\n    this.lastMovedPointerId = event.pointerId;\n\n    this.velocityTracker.add(event);\n    const [velocityX, velocityY] = this.velocityTracker.getVelocity();\n\n    element.velocityX = velocityX;\n    element.velocityY = velocityY;\n\n    element.abosoluteCoords = { x: event.x, y: event.y };\n    element.relativeCoords = { x: event.offsetX, y: event.offsetY };\n\n    this.trackedPointers.set(event.pointerId, element);\n\n    this.cachedAbsoluteAverages = this.getAbsoluteCoordsAverage();\n    this.cachedRelativeAverages = this.getRelativeCoordsAverage();\n  }\n\n  // Mapping TouchEvents ID\n  private mapTouchEventId(id: number): void {\n    for (const [mappedId, touchId] of this.touchEventsIds) {\n      if (isNaN(touchId)) {\n        this.touchEventsIds.set(mappedId, id);\n        break;\n      }\n    }\n  }\n\n  private removeMappedTouchId(id: number): void {\n    const mappedId: number = this.getMappedTouchEventId(id);\n    if (!isNaN(mappedId)) {\n      this.touchEventsIds.set(mappedId, NaN);\n    }\n  }\n\n  public getMappedTouchEventId(touchEventId: number): number {\n    for (const [key, value] of this.touchEventsIds.entries()) {\n      if (value === touchEventId) {\n        return key;\n      }\n    }\n\n    return NaN;\n  }\n\n  public getVelocity(pointerId: number) {\n    return {\n      x: this.trackedPointers.get(pointerId)?.velocityX as number,\n      y: this.trackedPointers.get(pointerId)?.velocityY as number,\n    };\n  }\n\n  public getLastAbsoluteCoords(pointerId?: number) {\n    if (pointerId !== undefined) {\n      return {\n        x: this.trackedPointers.get(pointerId)?.abosoluteCoords.x as number,\n        y: this.trackedPointers.get(pointerId)?.abosoluteCoords.y as number,\n      };\n    } else {\n      return {\n        x: this.trackedPointers.get(this.lastMovedPointerId)?.abosoluteCoords\n          .x as number,\n        y: this.trackedPointers.get(this.lastMovedPointerId)?.abosoluteCoords\n          .y as number,\n      };\n    }\n  }\n\n  public getLastRelativeCoords(pointerId?: number) {\n    if (pointerId !== undefined) {\n      return {\n        x: this.trackedPointers.get(pointerId)?.relativeCoords.x as number,\n        y: this.trackedPointers.get(pointerId)?.relativeCoords.y as number,\n      };\n    } else {\n      return {\n        x: this.trackedPointers.get(this.lastMovedPointerId)?.relativeCoords\n          .x as number,\n        y: this.trackedPointers.get(this.lastMovedPointerId)?.relativeCoords\n          .y as number,\n      };\n    }\n  }\n\n  // Some handlers use these methods to send average values in native event.\n  // This may happen when pointers have already been removed from tracker (i.e. pointerup event).\n  // In situation when NaN would be sent as a response, we return cached value.\n  // That prevents handlers from crashing\n\n  public getAbsoluteCoordsAverage() {\n    const coordsSum = this.getAbsoluteCoordsSum();\n\n    const avgX = coordsSum.x / this.trackedPointers.size;\n    const avgY = coordsSum.y / this.trackedPointers.size;\n\n    const averages = {\n      x: isNaN(avgX) ? this.cachedAbsoluteAverages.x : avgX,\n      y: isNaN(avgY) ? this.cachedAbsoluteAverages.y : avgY,\n    };\n\n    return averages;\n  }\n\n  public getRelativeCoordsAverage() {\n    const coordsSum = this.getRelativeCoordsSum();\n\n    const avgX = coordsSum.x / this.trackedPointers.size;\n    const avgY = coordsSum.y / this.trackedPointers.size;\n\n    const averages = {\n      x: isNaN(avgX) ? this.cachedRelativeAverages.x : avgX,\n      y: isNaN(avgY) ? this.cachedRelativeAverages.y : avgY,\n    };\n\n    return averages;\n  }\n\n  public getAbsoluteCoordsSum(ignoredPointer?: number) {\n    const sum = { x: 0, y: 0 };\n\n    this.trackedPointers.forEach((value, key) => {\n      if (key !== ignoredPointer) {\n        sum.x += value.abosoluteCoords.x;\n        sum.y += value.abosoluteCoords.y;\n      }\n    });\n\n    return sum;\n  }\n\n  public getRelativeCoordsSum(ignoredPointer?: number) {\n    const sum = { x: 0, y: 0 };\n\n    this.trackedPointers.forEach((value, key) => {\n      if (key !== ignoredPointer) {\n        sum.x += value.relativeCoords.x;\n        sum.y += value.relativeCoords.y;\n      }\n    });\n\n    return sum;\n  }\n\n  public getTrackedPointersCount(): number {\n    return this.trackedPointers.size;\n  }\n\n  public getTrackedPointersID(): number[] {\n    const keys: number[] = [];\n\n    this.trackedPointers.forEach((_value, key) => {\n      keys.push(key);\n    });\n\n    return keys;\n  }\n\n  public getData(): Map<number, TrackerElement> {\n    return this.trackedPointers;\n  }\n\n  public resetTracker(): void {\n    this.velocityTracker.reset();\n    this.trackedPointers.clear();\n    this.lastMovedPointerId = NaN;\n\n    for (let i = 0; i < MAX_POINTERS; ++i) {\n      this.touchEventsIds.set(i, NaN);\n    }\n  }\n\n  public static shareCommonPointers(\n    stPointers: number[],\n    ndPointers: number[]\n  ): boolean {\n    return stPointers.some((pointerId) => ndPointers.includes(pointerId));\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}