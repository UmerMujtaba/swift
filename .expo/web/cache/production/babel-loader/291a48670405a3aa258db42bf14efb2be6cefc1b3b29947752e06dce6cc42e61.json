{"ast":null,"code":"import{useMemo,useRef}from'react';import Platform from\"react-native-web/dist/exports/Platform\";const findIndex=({locationX,locationY},map)=>{for(const[index,{x,y,xEnd,yEnd}]of Object.entries(map)){if(x<locationX&&locationX<xEnd&&y<locationY&&locationY<yEnd){return parseInt(index,10);}}return-1;};export const useClearByFocusCell=options=>{const valueRef=useRef(options);const cellsLayouts=useRef({});valueRef.current=options;const clearCodeByCoords=coords=>{const index=findIndex(coords,cellsLayouts.current);if(index!==-1){const{value,setValue}=valueRef.current;const text=(value||'').slice(0,index);setValue(text);}};const getCellOnLayoutHandler=index=>event=>{const{width,height,x,y}=event.nativeEvent.layout;cellsLayouts.current[`${index}`]={x,xEnd:x+width,y,yEnd:y+height};};const onPressOut=event=>clearCodeByCoords(event.nativeEvent);const onClick=event=>{const[offset]=event.target.getClientRects();const locationX=event.clientX-offset.left;const locationY=event.clientY-offset.top;clearCodeByCoords({locationX,locationY});};return[useMemo(()=>({onClick}),[]),getCellOnLayoutHandler];};","map":{"version":3,"names":["useMemo","useRef","Platform","findIndex","locationX","locationY","map","index","x","y","xEnd","yEnd","Object","entries","parseInt","useClearByFocusCell","options","valueRef","cellsLayouts","current","clearCodeByCoords","coords","value","setValue","text","slice","getCellOnLayoutHandler","event","width","height","nativeEvent","layout","onPressOut","onClick","offset","target","getClientRects","clientX","left","clientY","top"],"sources":["/Users/nextek/Desktop/folder/SwiftPay/node_modules/react-native-confirmation-code-field/esm/useClearByFocusCell.js"],"sourcesContent":["import { useMemo, useRef } from 'react';\nimport { Platform } from 'react-native';\nconst findIndex = ({ locationX, locationY }, map) => {\n    for (const [index, { x, y, xEnd, yEnd }] of Object.entries(map)) {\n        if (x < locationX &&\n            locationX < xEnd &&\n            y < locationY &&\n            locationY < yEnd) {\n            return parseInt(index, 10);\n        }\n    }\n    return -1;\n};\nexport const useClearByFocusCell = (options) => {\n    const valueRef = useRef(options);\n    const cellsLayouts = useRef({});\n    valueRef.current = options;\n    const clearCodeByCoords = (coords) => {\n        const index = findIndex(coords, cellsLayouts.current);\n        if (index !== -1) {\n            const { value, setValue } = valueRef.current;\n            const text = (value || '').slice(0, index);\n            setValue(text);\n        }\n    };\n    const getCellOnLayoutHandler = (index) => (event) => {\n        const { width, height, x, y } = event.nativeEvent.layout;\n        cellsLayouts.current[`${index}`] = {\n            x,\n            xEnd: x + width,\n            y,\n            yEnd: y + height,\n        };\n    };\n    const onPressOut = (event) => clearCodeByCoords(event.nativeEvent);\n    // For support react-native-web\n    const onClick = (event) => {\n        // @ts-expect-error: not types for getClientRects\n        const [offset] = event.target.getClientRects();\n        const locationX = event.clientX - offset.left;\n        const locationY = event.clientY - offset.top;\n        clearCodeByCoords({ locationX, locationY });\n    };\n    return [\n        // @ts-expect-error: for web support\n        useMemo(() => Platform.select({ web: { onClick }, default: { onPressOut } }), []),\n        getCellOnLayoutHandler,\n    ];\n};\n"],"mappings":"AAAA,OAASA,OAAO,CAAEC,MAAM,KAAQ,OAAO,CAAC,OAAAC,QAAA,8CAExC,KAAM,CAAAC,SAAS,CAAGA,CAAC,CAAEC,SAAS,CAAEC,SAAU,CAAC,CAAEC,GAAG,GAAK,CACjD,IAAK,KAAM,CAACC,KAAK,CAAE,CAAEC,CAAC,CAAEC,CAAC,CAAEC,IAAI,CAAEC,IAAK,CAAC,CAAC,EAAI,CAAAC,MAAM,CAACC,OAAO,CAACP,GAAG,CAAC,CAAE,CAC7D,GAAIE,CAAC,CAAGJ,SAAS,EACbA,SAAS,CAAGM,IAAI,EAChBD,CAAC,CAAGJ,SAAS,EACbA,SAAS,CAAGM,IAAI,CAAE,CAClB,MAAO,CAAAG,QAAQ,CAACP,KAAK,CAAE,EAAE,CAAC,CAC9B,CACJ,CACA,MAAO,CAAC,CAAC,CACb,CAAC,CACD,MAAO,MAAM,CAAAQ,mBAAmB,CAAIC,OAAO,EAAK,CAC5C,KAAM,CAAAC,QAAQ,CAAGhB,MAAM,CAACe,OAAO,CAAC,CAChC,KAAM,CAAAE,YAAY,CAAGjB,MAAM,CAAC,CAAC,CAAC,CAAC,CAC/BgB,QAAQ,CAACE,OAAO,CAAGH,OAAO,CAC1B,KAAM,CAAAI,iBAAiB,CAAIC,MAAM,EAAK,CAClC,KAAM,CAAAd,KAAK,CAAGJ,SAAS,CAACkB,MAAM,CAAEH,YAAY,CAACC,OAAO,CAAC,CACrD,GAAIZ,KAAK,GAAK,CAAC,CAAC,CAAE,CACd,KAAM,CAAEe,KAAK,CAAEC,QAAS,CAAC,CAAGN,QAAQ,CAACE,OAAO,CAC5C,KAAM,CAAAK,IAAI,CAAG,CAACF,KAAK,EAAI,EAAE,EAAEG,KAAK,CAAC,CAAC,CAAElB,KAAK,CAAC,CAC1CgB,QAAQ,CAACC,IAAI,CAAC,CAClB,CACJ,CAAC,CACD,KAAM,CAAAE,sBAAsB,CAAInB,KAAK,EAAMoB,KAAK,EAAK,CACjD,KAAM,CAAEC,KAAK,CAAEC,MAAM,CAAErB,CAAC,CAAEC,CAAE,CAAC,CAAGkB,KAAK,CAACG,WAAW,CAACC,MAAM,CACxDb,YAAY,CAACC,OAAO,CAAC,GAAGZ,KAAK,EAAE,CAAC,CAAG,CAC/BC,CAAC,CACDE,IAAI,CAAEF,CAAC,CAAGoB,KAAK,CACfnB,CAAC,CACDE,IAAI,CAAEF,CAAC,CAAGoB,MACd,CAAC,CACL,CAAC,CACD,KAAM,CAAAG,UAAU,CAAIL,KAAK,EAAKP,iBAAiB,CAACO,KAAK,CAACG,WAAW,CAAC,CAElE,KAAM,CAAAG,OAAO,CAAIN,KAAK,EAAK,CAEvB,KAAM,CAACO,MAAM,CAAC,CAAGP,KAAK,CAACQ,MAAM,CAACC,cAAc,CAAC,CAAC,CAC9C,KAAM,CAAAhC,SAAS,CAAGuB,KAAK,CAACU,OAAO,CAAGH,MAAM,CAACI,IAAI,CAC7C,KAAM,CAAAjC,SAAS,CAAGsB,KAAK,CAACY,OAAO,CAAGL,MAAM,CAACM,GAAG,CAC5CpB,iBAAiB,CAAC,CAAEhB,SAAS,CAAEC,SAAU,CAAC,CAAC,CAC/C,CAAC,CACD,MAAO,CAEHL,OAAO,CAAC,KAA6B,CAAEiC,OAAQ,CAAC,CAA4B,CAAE,EAAE,CAAC,CACjFP,sBAAsB,CACzB,CACL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}