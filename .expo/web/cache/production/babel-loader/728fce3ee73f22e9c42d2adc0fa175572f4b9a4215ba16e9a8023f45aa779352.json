{"ast":null,"code":"var _Reanimated$default$c,_Reanimated$default;import React from'react';import{Reanimated}from'../reanimatedWrapper';import{tagMessage}from'../../../utils';export class Wrap extends React.Component{render(){try{const child=React.Children.only(this.props.children);return React.cloneElement(child,{collapsable:false},child.props.children);}catch(e){throw new Error(tagMessage(`GestureDetector got more than one view as a child. If you want the gesture to work on multiple views, wrap them with a common parent and attach the gesture to that view.`));}}}export const AnimatedWrap=(_Reanimated$default$c=Reanimated===null||Reanimated===void 0?void 0:(_Reanimated$default=Reanimated.default)===null||_Reanimated$default===void 0?void 0:_Reanimated$default.createAnimatedComponent(Wrap))!==null&&_Reanimated$default$c!==void 0?_Reanimated$default$c:Wrap;","map":{"version":3,"names":["React","Reanimated","tagMessage","Wrap","Component","render","child","Children","only","props","children","cloneElement","collapsable","e","Error","AnimatedWrap","_Reanimated$default$c","_Reanimated$default","default","createAnimatedComponent"],"sources":["/Users/nextek/Desktop/folder/SwiftPay/node_modules/react-native-gesture-handler/lib/module/handlers/gestures/GestureDetector/Wrap.tsx"],"sourcesContent":["import React from 'react';\nimport { Reanimated } from '../reanimatedWrapper';\nimport { tagMessage } from '../../../utils';\n\nexport class Wrap extends React.Component<{\n  onGestureHandlerEvent?: unknown;\n  // Implicit `children` prop has been removed in @types/react^18.0.0\n  children?: React.ReactNode;\n}> {\n  render() {\n    try {\n      // I don't think that fighting with types over such a simple function is worth it\n      // The only thing it does is add 'collapsable: false' to the child component\n      // to make sure it is in the native view hierarchy so the detector can find\n      // correct viewTag to attach to.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const child: any = React.Children.only(this.props.children);\n      return React.cloneElement(\n        child,\n        { collapsable: false },\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        child.props.children\n      );\n    } catch (e) {\n      throw new Error(\n        tagMessage(\n          `GestureDetector got more than one view as a child. If you want the gesture to work on multiple views, wrap them with a common parent and attach the gesture to that view.`\n        )\n      );\n    }\n  }\n}\n\nexport const AnimatedWrap =\n  Reanimated?.default?.createAnimatedComponent(Wrap) ?? Wrap;\n"],"mappings":"8CAAA,MAAO,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,UAAT,KAA2B,sBAA3B,CACA,OAASC,UAAT,KAA2B,gBAA3B,CAEA,MAAO,MAAM,CAAAC,IAAN,QAAmB,CAAAH,KAAK,CAACI,SAI7B,CACDC,MAAMA,CAAA,CAAG,CACP,GAAI,CAMF,KAAM,CAAAC,KAAU,CAAGN,KAAK,CAACO,QAAN,CAAeC,IAAf,CAAoB,KAAKC,KAAL,CAAWC,QAA/B,CAAnB,CACA,MAAO,CAAAV,KAAK,CAACW,YAAN,CACLL,KADK,CAEL,CAAEM,WAAW,CAAE,KAAf,CAFK,CAILN,KAAK,CAACG,KAAN,CAAYC,QAJP,CAAP,CAMD,CAAC,MAAOG,CAAP,CAAU,CACV,KAAM,IAAI,CAAAC,KAAJ,CACJZ,UAAU,CACP,2KADO,CADN,CAAN,CAKD,CACF,CAtBA,CAyBH,MAAO,MAAM,CAAAa,YAAY,EAAAC,qBAAA,CACvBf,UADuB,SACvBA,UADuB,kBAAAgB,mBAAA,CACvBhB,UAAU,CAAEiB,OADW,UAAAD,mBAAA,iBACvBA,mBAAA,CAAqBE,uBAArB,CAA6ChB,IAA7C,CADuB,UAAAa,qBAAA,UAAAA,qBAAA,CAC+Bb,IADjD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}