{"ast":null,"code":"function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import{useImperativeHandle,useRef}from'react';import{NativeViewGestureHandler,nativeViewProps}from'./NativeViewGestureHandler';const NATIVE_WRAPPER_PROPS_FILTER=[...nativeViewProps,'onGestureHandlerEvent','onGestureHandlerStateChange'];export default function createNativeWrapper(Component,config={}){var _Component$render;const ComponentWrapper=React.forwardRef((props,ref)=>{const gestureHandlerProps=Object.keys(props).reduce((res,key)=>{const allowedKeys=NATIVE_WRAPPER_PROPS_FILTER;if(allowedKeys.includes(key)){res[key]=props[key];}return res;},Object.assign({},config));const _ref=useRef();const _gestureHandlerRef=useRef();useImperativeHandle(ref,()=>{const node=_gestureHandlerRef.current;if(_ref.current&&node){_ref.current.handlerTag=node.handlerTag;return _ref.current;}return null;},[_ref,_gestureHandlerRef]);return React.createElement(NativeViewGestureHandler,_extends({},gestureHandlerProps,{ref:_gestureHandlerRef}),React.createElement(Component,_extends({},props,{ref:_ref})));});ComponentWrapper.displayName=(Component===null||Component===void 0?void 0:Component.displayName)||(Component===null||Component===void 0?void 0:(_Component$render=Component.render)===null||_Component$render===void 0?void 0:_Component$render.name)||typeof Component==='string'&&Component||'ComponentWrapper';return ComponentWrapper;}","map":{"version":3,"names":["React","useImperativeHandle","useRef","NativeViewGestureHandler","nativeViewProps","NATIVE_WRAPPER_PROPS_FILTER","createNativeWrapper","Component","config","_Component$render","ComponentWrapper","forwardRef","props","ref","gestureHandlerProps","Object","keys","reduce","res","key","allowedKeys","includes","assign","_ref","_gestureHandlerRef","node","current","handlerTag","createElement","_extends","displayName","render","name"],"sources":["/Users/nextek/Desktop/folder/SwiftPay/node_modules/react-native-gesture-handler/lib/module/handlers/createNativeWrapper.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useImperativeHandle, useRef } from 'react';\n\nimport {\n  NativeViewGestureHandler,\n  NativeViewGestureHandlerProps,\n  nativeViewProps,\n} from './NativeViewGestureHandler';\n\n/*\n * This array should consist of:\n *   - All keys in propTypes from NativeGestureHandler\n *     (and all keys in GestureHandlerPropTypes)\n *   - 'onGestureHandlerEvent'\n *   - 'onGestureHandlerStateChange'\n */\nconst NATIVE_WRAPPER_PROPS_FILTER = [\n  ...nativeViewProps,\n  'onGestureHandlerEvent',\n  'onGestureHandlerStateChange',\n] as const;\n\nexport default function createNativeWrapper<P>(\n  Component: React.ComponentType<P>,\n  config: Readonly<NativeViewGestureHandlerProps> = {}\n) {\n  const ComponentWrapper = React.forwardRef<\n    React.ComponentType<any>,\n    P & NativeViewGestureHandlerProps\n  >((props, ref) => {\n    // Filter out props that should be passed to gesture handler wrapper\n    const gestureHandlerProps = Object.keys(props).reduce(\n      (res, key) => {\n        // TS being overly protective with it's types, see https://github.com/microsoft/TypeScript/issues/26255#issuecomment-458013731 for more info\n        const allowedKeys: readonly string[] = NATIVE_WRAPPER_PROPS_FILTER;\n        if (allowedKeys.includes(key)) {\n          // @ts-ignore FIXME(TS)\n          res[key] = props[key];\n        }\n        return res;\n      },\n      { ...config } // Watch out not to modify config\n    );\n    const _ref = useRef<React.ComponentType<P>>();\n    const _gestureHandlerRef = useRef<React.ComponentType<P>>();\n    useImperativeHandle(\n      ref,\n      // @ts-ignore TODO(TS) decide how nulls work in this context\n      () => {\n        const node = _gestureHandlerRef.current;\n        // Add handlerTag for relations config\n        if (_ref.current && node) {\n          // @ts-ignore FIXME(TS) think about createHandler return type\n          _ref.current.handlerTag = node.handlerTag;\n          return _ref.current;\n        }\n        return null;\n      },\n      [_ref, _gestureHandlerRef]\n    );\n    return (\n      <NativeViewGestureHandler\n        {...gestureHandlerProps}\n        // @ts-ignore TODO(TS)\n        ref={_gestureHandlerRef}>\n        <Component {...props} ref={_ref} />\n      </NativeViewGestureHandler>\n    );\n  });\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  ComponentWrapper.displayName =\n    Component?.displayName ||\n    // @ts-ignore if render doesn't exist it will return undefined and go further\n    Component?.render?.name ||\n    (typeof Component === 'string' && Component) ||\n    'ComponentWrapper';\n\n  return ComponentWrapper;\n}\n"],"mappings":"uRAAA,MAAO,GAAK,CAAAA,KAAZ,KAAuB,OAAvB,CACA,OAASC,mBAAT,CAA8BC,MAA9B,KAA4C,OAA5C,CAEA,OACEC,wBADF,CAGEC,eAHF,KAIO,4BAJP,CAaA,KAAM,CAAAC,2BAA2B,CAAG,CAClC,GAAGD,eAD+B,CAElC,uBAFkC,CAGlC,6BAHkC,CAApC,CAMA,cAAe,SAAS,CAAAE,mBAATA,CACbC,SADa,CAEbC,MAA+C,CAAG,EAFrC,CAGb,KAAAC,iBAAA,CACA,KAAM,CAAAC,gBAAgB,CAAGV,KAAK,CAACW,UAAN,CAGvB,CAACC,KAAD,CAAQC,GAAR,GAAgB,CAEhB,KAAM,CAAAC,mBAAmB,CAAGC,MAAM,CAACC,IAAP,CAAYJ,KAAZ,EAAmBK,MAAnB,CAC1B,CAACC,GAAD,CAAMC,GAAN,GAAc,CAEZ,KAAM,CAAAC,WAA8B,CAAGf,2BAAvC,CACA,GAAIe,WAAW,CAACC,QAAZ,CAAqBF,GAArB,CAAJ,CAA+B,CAE7BD,GAAG,CAACC,GAAD,CAAH,CAAWP,KAAK,CAACO,GAAD,CAAhB,CACD,CACD,MAAO,CAAAD,GAAP,CACD,CATyB,CAAAH,MAAA,CAAAO,MAAA,IAUrBd,MAAA,CAVqB,CAA5B,CAYA,KAAM,CAAAe,IAAI,CAAGrB,MAAM,EAAnB,CACA,KAAM,CAAAsB,kBAAkB,CAAGtB,MAAM,EAAjC,CACAD,mBAAmB,CACjBY,GADiB,CAGjB,IAAM,CACJ,KAAM,CAAAY,IAAI,CAAGD,kBAAkB,CAACE,OAAhC,CAEA,GAAIH,IAAI,CAACG,OAAL,EAAgBD,IAApB,CAA0B,CAExBF,IAAI,CAACG,OAAL,CAAaC,UAAb,CAA0BF,IAAI,CAACE,UAA/B,CACA,MAAO,CAAAJ,IAAI,CAACG,OAAZ,CACD,CACD,MAAO,KAAP,CACD,CAZgB,CAajB,CAACH,IAAD,CAAOC,kBAAP,CAbiB,CAAnB,CAeA,MACE,CAAAxB,KAAA,CAAA4B,aAAA,CAACzB,wBAAD,CAAA0B,QAAA,IACMf,mBADN,EAGED,GAAG,CAAEW,kBAHP,GAIExB,KAAA,CAAA4B,aAAA,CAACrB,SAAD,CAAAsB,QAAA,IAAejB,KAAf,EAAsBC,GAAG,CAAEU,IAA3B,GAJF,CADF,CAQD,CA1CwB,CAAzB,CA6CAb,gBAAgB,CAACoB,WAAjB,CACE,CAAAvB,SAAS,OAAT,EAAAA,SAAS,SAAT,QAAAA,SAAS,CAAEuB,WAAX,IAEAvB,SAFA,SAEAA,SAFA,kBAAAE,iBAAA,CAEAF,SAAS,CAAEwB,MAFX,UAAAtB,iBAAA,iBAEAA,iBAAA,CAAmBuB,IAFnB,GAGC,MAAO,CAAAzB,SAAP,GAAqB,QAArB,EAAiCA,SAHlC,EAIA,kBALF,CAOA,MAAO,CAAAG,gBAAP,CACD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}