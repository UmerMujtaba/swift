{"ast":null,"code":"function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}import findNodeHandle from\"react-native-web/dist/exports/findNodeHandle\";import PointerEventManager from'./PointerEventManager';import{State}from'../../State';import{isPointerInBounds}from'../utils';import{MouseButton}from'../../handlers/gestureHandlerCommon';import KeyboardEventManager from'./KeyboardEventManager';export class GestureHandlerWebDelegate{constructor(){_defineProperty(this,\"isInitialized\",false);_defineProperty(this,\"view\",void 0);_defineProperty(this,\"gestureHandler\",void 0);_defineProperty(this,\"eventManagers\",[]);_defineProperty(this,\"defaultViewStyles\",{userSelect:'',touchAction:''});}getView(){return this.view;}init(viewRef,handler){if(!viewRef){throw new Error(`Cannot find HTML Element for handler ${handler.getTag()}`);}this.isInitialized=true;this.gestureHandler=handler;this.view=findNodeHandle(viewRef);this.defaultViewStyles={userSelect:this.view.style.userSelect,touchAction:this.view.style.touchAction};const config=handler.getConfig();this.setUserSelect(config.enabled);this.setTouchAction(config.enabled);this.setContextMenu(config.enabled);this.eventManagers.push(new PointerEventManager(this.view));this.eventManagers.push(new KeyboardEventManager(this.view));this.eventManagers.forEach(manager=>this.gestureHandler.attachEventManager(manager));}isPointerInBounds({x,y}){return isPointerInBounds(this.view,{x,y});}measureView(){const rect=this.view.getBoundingClientRect();return{pageX:rect.left,pageY:rect.top,width:rect.width,height:rect.height};}reset(){this.eventManagers.forEach(manager=>manager.resetManager());}tryResetCursor(){const config=this.gestureHandler.getConfig();if(config.activeCursor&&config.activeCursor!=='auto'&&this.gestureHandler.getState()===State.ACTIVE){this.view.style.cursor='auto';}}shouldDisableContextMenu(config){return config.enableContextMenu===undefined&&this.gestureHandler.isButtonInConfig(MouseButton.RIGHT)||config.enableContextMenu===false;}addContextMenuListeners(config){if(this.shouldDisableContextMenu(config)){this.view.addEventListener('contextmenu',this.disableContextMenu);}else if(config.enableContextMenu){this.view.addEventListener('contextmenu',this.enableContextMenu);}}removeContextMenuListeners(config){if(this.shouldDisableContextMenu(config)){this.view.removeEventListener('contextmenu',this.disableContextMenu);}else if(config.enableContextMenu){this.view.removeEventListener('contextmenu',this.enableContextMenu);}}disableContextMenu(e){e.preventDefault();}enableContextMenu(e){e.stopPropagation();}setUserSelect(isHandlerEnabled){const{userSelect}=this.gestureHandler.getConfig();this.view.style['userSelect']=isHandlerEnabled?userSelect!==null&&userSelect!==void 0?userSelect:'none':this.defaultViewStyles.userSelect;this.view.style['webkitUserSelect']=isHandlerEnabled?userSelect!==null&&userSelect!==void 0?userSelect:'none':this.defaultViewStyles.userSelect;}setTouchAction(isHandlerEnabled){const{touchAction}=this.gestureHandler.getConfig();this.view.style['touchAction']=isHandlerEnabled?touchAction!==null&&touchAction!==void 0?touchAction:'none':this.defaultViewStyles.touchAction;this.view.style['WebkitTouchCallout']=isHandlerEnabled?touchAction!==null&&touchAction!==void 0?touchAction:'none':this.defaultViewStyles.touchAction;}setContextMenu(isHandlerEnabled){const config=this.gestureHandler.getConfig();if(isHandlerEnabled){this.addContextMenuListeners(config);}else{this.removeContextMenuListeners(config);}}onEnabledChange(enabled){if(!this.isInitialized){return;}this.setUserSelect(enabled);this.setTouchAction(enabled);this.setContextMenu(enabled);}onBegin(){}onActivate(){const config=this.gestureHandler.getConfig();if((!this.view.style.cursor||this.view.style.cursor==='auto')&&config.activeCursor){this.view.style.cursor=config.activeCursor;}}onEnd(){this.tryResetCursor();}onCancel(){this.tryResetCursor();}onFail(){this.tryResetCursor();}destroy(config){this.removeContextMenuListeners(config);this.eventManagers.forEach(manager=>{manager.unregisterListeners();});}}","map":{"version":3,"names":["PointerEventManager","State","isPointerInBounds","MouseButton","KeyboardEventManager","GestureHandlerWebDelegate","constructor","_defineProperty","userSelect","touchAction","getView","view","init","viewRef","handler","Error","getTag","isInitialized","gestureHandler","findNodeHandle","defaultViewStyles","style","config","getConfig","setUserSelect","enabled","setTouchAction","setContextMenu","eventManagers","push","forEach","manager","attachEventManager","x","y","measureView","rect","getBoundingClientRect","pageX","left","pageY","top","width","height","reset","resetManager","tryResetCursor","activeCursor","getState","ACTIVE","cursor","shouldDisableContextMenu","enableContextMenu","undefined","isButtonInConfig","RIGHT","addContextMenuListeners","addEventListener","disableContextMenu","removeContextMenuListeners","removeEventListener","e","preventDefault","stopPropagation","isHandlerEnabled","onEnabledChange","onBegin","onActivate","onEnd","onCancel","onFail","destroy","unregisterListeners"],"sources":["/Users/nextek/Desktop/folder/SwiftPay/node_modules/react-native-gesture-handler/lib/module/web/tools/GestureHandlerWebDelegate.ts"],"sourcesContent":["import { findNodeHandle } from 'react-native';\nimport type IGestureHandler from '../handlers/IGestureHandler';\nimport {\n  GestureHandlerDelegate,\n  MeasureResult,\n} from './GestureHandlerDelegate';\nimport PointerEventManager from './PointerEventManager';\nimport { State } from '../../State';\nimport { isPointerInBounds } from '../utils';\nimport EventManager from './EventManager';\nimport { Config } from '../interfaces';\nimport { MouseButton } from '../../handlers/gestureHandlerCommon';\nimport KeyboardEventManager from './KeyboardEventManager';\n\ninterface DefaultViewStyles {\n  userSelect: string;\n  touchAction: string;\n}\n\nexport class GestureHandlerWebDelegate\n  implements GestureHandlerDelegate<HTMLElement, IGestureHandler>\n{\n  private isInitialized = false;\n  private view!: HTMLElement;\n  private gestureHandler!: IGestureHandler;\n  private eventManagers: EventManager<unknown>[] = [];\n  private defaultViewStyles: DefaultViewStyles = {\n    userSelect: '',\n    touchAction: '',\n  };\n\n  getView(): HTMLElement {\n    return this.view;\n  }\n\n  init(viewRef: number, handler: IGestureHandler): void {\n    if (!viewRef) {\n      throw new Error(\n        `Cannot find HTML Element for handler ${handler.getTag()}`\n      );\n    }\n\n    this.isInitialized = true;\n\n    this.gestureHandler = handler;\n    this.view = findNodeHandle(viewRef) as unknown as HTMLElement;\n\n    this.defaultViewStyles = {\n      userSelect: this.view.style.userSelect,\n      touchAction: this.view.style.touchAction,\n    };\n\n    const config = handler.getConfig();\n\n    this.setUserSelect(config.enabled);\n    this.setTouchAction(config.enabled);\n    this.setContextMenu(config.enabled);\n\n    this.eventManagers.push(new PointerEventManager(this.view));\n    this.eventManagers.push(new KeyboardEventManager(this.view));\n\n    this.eventManagers.forEach((manager) =>\n      this.gestureHandler.attachEventManager(manager)\n    );\n  }\n\n  isPointerInBounds({ x, y }: { x: number; y: number }): boolean {\n    return isPointerInBounds(this.view, { x, y });\n  }\n\n  measureView(): MeasureResult {\n    const rect = this.view.getBoundingClientRect();\n\n    return {\n      pageX: rect.left,\n      pageY: rect.top,\n      width: rect.width,\n      height: rect.height,\n    };\n  }\n\n  reset(): void {\n    this.eventManagers.forEach((manager: EventManager<unknown>) =>\n      manager.resetManager()\n    );\n  }\n\n  tryResetCursor() {\n    const config = this.gestureHandler.getConfig();\n\n    if (\n      config.activeCursor &&\n      config.activeCursor !== 'auto' &&\n      this.gestureHandler.getState() === State.ACTIVE\n    ) {\n      this.view.style.cursor = 'auto';\n    }\n  }\n\n  private shouldDisableContextMenu(config: Config) {\n    return (\n      (config.enableContextMenu === undefined &&\n        this.gestureHandler.isButtonInConfig(MouseButton.RIGHT)) ||\n      config.enableContextMenu === false\n    );\n  }\n\n  private addContextMenuListeners(config: Config): void {\n    if (this.shouldDisableContextMenu(config)) {\n      this.view.addEventListener('contextmenu', this.disableContextMenu);\n    } else if (config.enableContextMenu) {\n      this.view.addEventListener('contextmenu', this.enableContextMenu);\n    }\n  }\n\n  private removeContextMenuListeners(config: Config): void {\n    if (this.shouldDisableContextMenu(config)) {\n      this.view.removeEventListener('contextmenu', this.disableContextMenu);\n    } else if (config.enableContextMenu) {\n      this.view.removeEventListener('contextmenu', this.enableContextMenu);\n    }\n  }\n\n  private disableContextMenu(this: void, e: MouseEvent): void {\n    e.preventDefault();\n  }\n\n  private enableContextMenu(this: void, e: MouseEvent): void {\n    e.stopPropagation();\n  }\n\n  private setUserSelect(isHandlerEnabled: boolean) {\n    const { userSelect } = this.gestureHandler.getConfig();\n\n    this.view.style['userSelect'] = isHandlerEnabled\n      ? userSelect ?? 'none'\n      : this.defaultViewStyles.userSelect;\n\n    this.view.style['webkitUserSelect'] = isHandlerEnabled\n      ? userSelect ?? 'none'\n      : this.defaultViewStyles.userSelect;\n  }\n\n  private setTouchAction(isHandlerEnabled: boolean) {\n    const { touchAction } = this.gestureHandler.getConfig();\n\n    this.view.style['touchAction'] = isHandlerEnabled\n      ? touchAction ?? 'none'\n      : this.defaultViewStyles.touchAction;\n\n    // @ts-ignore This one disables default events on Safari\n    this.view.style['WebkitTouchCallout'] = isHandlerEnabled\n      ? touchAction ?? 'none'\n      : this.defaultViewStyles.touchAction;\n  }\n\n  private setContextMenu(isHandlerEnabled: boolean) {\n    const config = this.gestureHandler.getConfig();\n\n    if (isHandlerEnabled) {\n      this.addContextMenuListeners(config);\n    } else {\n      this.removeContextMenuListeners(config);\n    }\n  }\n\n  onEnabledChange(enabled: boolean): void {\n    if (!this.isInitialized) {\n      return;\n    }\n\n    this.setUserSelect(enabled);\n    this.setTouchAction(enabled);\n    this.setContextMenu(enabled);\n  }\n\n  onBegin(): void {\n    // no-op for now\n  }\n\n  onActivate(): void {\n    const config = this.gestureHandler.getConfig();\n\n    if (\n      (!this.view.style.cursor || this.view.style.cursor === 'auto') &&\n      config.activeCursor\n    ) {\n      this.view.style.cursor = config.activeCursor;\n    }\n  }\n\n  onEnd(): void {\n    this.tryResetCursor();\n  }\n\n  onCancel(): void {\n    this.tryResetCursor();\n  }\n\n  onFail(): void {\n    this.tryResetCursor();\n  }\n\n  public destroy(config: Config): void {\n    this.removeContextMenuListeners(config);\n\n    this.eventManagers.forEach((manager) => {\n      manager.unregisterListeners();\n    });\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}