{"ast":null,"code":"import _objectWithoutPropertiesLoose from\"@babel/runtime/helpers/objectWithoutPropertiesLoose\";const _excluded=[\"enabled\"];function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}import{State}from'../../State';import{TouchEventType,EventTypes}from'../interfaces';import GestureHandlerOrchestrator from'../tools/GestureHandlerOrchestrator';import InteractionManager from'../tools/InteractionManager';import PointerTracker from'../tools/PointerTracker';import{MouseButton}from'../../handlers/gestureHandlerCommon';import{PointerType}from'../../PointerType';export default class GestureHandler{constructor(delegate){_defineProperty(this,\"lastSentState\",null);_defineProperty(this,\"currentState\",State.UNDETERMINED);_defineProperty(this,\"shouldCancelWhenOutside\",false);_defineProperty(this,\"hasCustomActivationCriteria\",false);_defineProperty(this,\"enabled\",false);_defineProperty(this,\"viewRef\",void 0);_defineProperty(this,\"propsRef\",void 0);_defineProperty(this,\"handlerTag\",void 0);_defineProperty(this,\"config\",{enabled:false});_defineProperty(this,\"tracker\",new PointerTracker());_defineProperty(this,\"activationIndex\",0);_defineProperty(this,\"awaiting\",false);_defineProperty(this,\"active\",false);_defineProperty(this,\"shouldResetProgress\",false);_defineProperty(this,\"pointerType\",PointerType.MOUSE);_defineProperty(this,\"delegate\",void 0);_defineProperty(this,\"sendEvent\",(newState,oldState)=>{const{onGestureHandlerEvent,onGestureHandlerStateChange}=this.propsRef.current;const resultEvent=this.transformEventData(newState,oldState);if(this.lastSentState!==newState){this.lastSentState=newState;invokeNullableMethod(onGestureHandlerStateChange,resultEvent);}if(this.currentState===State.ACTIVE){resultEvent.nativeEvent.oldState=undefined;invokeNullableMethod(onGestureHandlerEvent,resultEvent);}});this.delegate=delegate;}init(viewRef,propsRef){this.propsRef=propsRef;this.viewRef=viewRef;this.currentState=State.UNDETERMINED;this.delegate.init(viewRef,this);}attachEventManager(manager){manager.setOnPointerDown(this.onPointerDown.bind(this));manager.setOnPointerAdd(this.onPointerAdd.bind(this));manager.setOnPointerUp(this.onPointerUp.bind(this));manager.setOnPointerRemove(this.onPointerRemove.bind(this));manager.setOnPointerMove(this.onPointerMove.bind(this));manager.setOnPointerEnter(this.onPointerEnter.bind(this));manager.setOnPointerLeave(this.onPointerLeave.bind(this));manager.setOnPointerCancel(this.onPointerCancel.bind(this));manager.setOnPointerOutOfBounds(this.onPointerOutOfBounds.bind(this));manager.setOnPointerMoveOver(this.onPointerMoveOver.bind(this));manager.setOnPointerMoveOut(this.onPointerMoveOut.bind(this));manager.registerListeners();}onCancel(){}onReset(){}resetProgress(){}reset(){this.tracker.resetTracker();this.onReset();this.resetProgress();this.delegate.reset();this.currentState=State.UNDETERMINED;}moveToState(newState,sendIfDisabled){if(this.currentState===newState){return;}const oldState=this.currentState;this.currentState=newState;if(this.tracker.getTrackedPointersCount()>0&&this.config.needsPointerData&&this.isFinished()){this.cancelTouches();}GestureHandlerOrchestrator.getInstance().onHandlerStateChange(this,newState,oldState,sendIfDisabled);this.onStateChange(newState,oldState);if(!this.enabled&&this.isFinished()){this.currentState=State.UNDETERMINED;}}onStateChange(_newState,_oldState){}begin(){if(!this.checkHitSlop()){return;}if(this.currentState===State.UNDETERMINED){this.moveToState(State.BEGAN);}}fail(sendIfDisabled){if(this.currentState===State.ACTIVE||this.currentState===State.BEGAN){this.delegate.onFail();this.moveToState(State.FAILED,sendIfDisabled);}this.resetProgress();}cancel(sendIfDisabled){if(this.currentState===State.ACTIVE||this.currentState===State.UNDETERMINED||this.currentState===State.BEGAN){this.onCancel();this.delegate.onCancel();this.moveToState(State.CANCELLED,sendIfDisabled);}}activate(force=false){if((this.config.manualActivation!==true||force)&&(this.currentState===State.UNDETERMINED||this.currentState===State.BEGAN)){this.delegate.onActivate();this.moveToState(State.ACTIVE);}}end(){if(this.currentState===State.BEGAN||this.currentState===State.ACTIVE){this.delegate.onEnd();this.moveToState(State.END);}this.resetProgress();}isAwaiting(){return this.awaiting;}setAwaiting(value){this.awaiting=value;}isActive(){return this.active;}setActive(value){this.active=value;}getShouldResetProgress(){return this.shouldResetProgress;}setShouldResetProgress(value){this.shouldResetProgress=value;}getActivationIndex(){return this.activationIndex;}setActivationIndex(value){this.activationIndex=value;}shouldWaitForHandlerFailure(handler){if(handler===this){return false;}return InteractionManager.getInstance().shouldWaitForHandlerFailure(this,handler);}shouldRequireToWaitForFailure(handler){if(handler===this){return false;}return InteractionManager.getInstance().shouldRequireHandlerToWaitForFailure(this,handler);}shouldRecognizeSimultaneously(handler){if(handler===this){return true;}return InteractionManager.getInstance().shouldRecognizeSimultaneously(this,handler);}shouldBeCancelledByOther(handler){if(handler===this){return false;}return InteractionManager.getInstance().shouldHandlerBeCancelledBy(this,handler);}onPointerDown(event){GestureHandlerOrchestrator.getInstance().recordHandlerIfNotPresent(this);this.pointerType=event.pointerType;if(this.pointerType===PointerType.TOUCH){GestureHandlerOrchestrator.getInstance().cancelMouseAndPenGestures(this);}}onPointerAdd(event){this.tryToSendTouchEvent(event);}onPointerUp(event){this.tryToSendTouchEvent(event);}onPointerRemove(event){this.tryToSendTouchEvent(event);}onPointerMove(event){this.tryToSendMoveEvent(false,event);}onPointerLeave(event){if(this.shouldCancelWhenOutside){switch(this.currentState){case State.ACTIVE:this.cancel();break;case State.BEGAN:this.fail();break;}return;}this.tryToSendTouchEvent(event);}onPointerEnter(event){this.tryToSendTouchEvent(event);}onPointerCancel(event){this.tryToSendTouchEvent(event);this.cancel();this.reset();}onPointerOutOfBounds(event){this.tryToSendMoveEvent(true,event);}onPointerMoveOver(_event){}onPointerMoveOut(_event){}tryToSendMoveEvent(out,event){if(out&&this.shouldCancelWhenOutside||!this.enabled){return;}if(this.active){this.sendEvent(this.currentState,this.currentState);}this.tryToSendTouchEvent(event);}tryToSendTouchEvent(event){if(this.config.needsPointerData){this.sendTouchEvent(event);}}sendTouchEvent(event){if(!this.enabled){return;}const{onGestureHandlerEvent}=this.propsRef.current;const touchEvent=this.transformTouchEvent(event);if(touchEvent){invokeNullableMethod(onGestureHandlerEvent,touchEvent);}}transformEventData(newState,oldState){return{nativeEvent:Object.assign({numberOfPointers:this.tracker.getTrackedPointersCount(),state:newState,pointerInside:this.delegate.isPointerInBounds(this.tracker.getAbsoluteCoordsAverage())},this.transformNativeEvent(),{handlerTag:this.handlerTag,target:this.viewRef,oldState:newState!==oldState?oldState:undefined,pointerType:this.pointerType}),timeStamp:Date.now()};}transformTouchEvent(event){const rect=this.delegate.measureView();const all=[];const changed=[];const trackerData=this.tracker.getData();if(trackerData.size===0||!trackerData.has(event.pointerId)){return;}trackerData.forEach((element,key)=>{const id=this.tracker.getMappedTouchEventId(key);all.push({id:id,x:element.abosoluteCoords.x-rect.pageX,y:element.abosoluteCoords.y-rect.pageY,absoluteX:element.abosoluteCoords.x,absoluteY:element.abosoluteCoords.y});});if(event.eventType!==EventTypes.CANCEL){changed.push({id:this.tracker.getMappedTouchEventId(event.pointerId),x:event.x-rect.pageX,y:event.y-rect.pageY,absoluteX:event.x,absoluteY:event.y});}else{trackerData.forEach((element,key)=>{const id=this.tracker.getMappedTouchEventId(key);changed.push({id:id,x:element.abosoluteCoords.x-rect.pageX,y:element.abosoluteCoords.y-rect.pageY,absoluteX:element.abosoluteCoords.x,absoluteY:element.abosoluteCoords.y});});}let eventType=TouchEventType.UNDETERMINED;switch(event.eventType){case EventTypes.DOWN:case EventTypes.ADDITIONAL_POINTER_DOWN:eventType=TouchEventType.DOWN;break;case EventTypes.UP:case EventTypes.ADDITIONAL_POINTER_UP:eventType=TouchEventType.UP;break;case EventTypes.MOVE:eventType=TouchEventType.MOVE;break;case EventTypes.CANCEL:eventType=TouchEventType.CANCELLED;break;}let numberOfTouches=all.length;if(event.eventType===EventTypes.UP||event.eventType===EventTypes.ADDITIONAL_POINTER_UP){--numberOfTouches;}return{nativeEvent:{handlerTag:this.handlerTag,state:this.currentState,eventType:eventType,changedTouches:changed,allTouches:all,numberOfTouches:numberOfTouches,pointerType:this.pointerType},timeStamp:Date.now()};}cancelTouches(){const rect=this.delegate.measureView();const all=[];const changed=[];const trackerData=this.tracker.getData();if(trackerData.size===0){return;}trackerData.forEach((element,key)=>{const id=this.tracker.getMappedTouchEventId(key);all.push({id:id,x:element.abosoluteCoords.x-rect.pageX,y:element.abosoluteCoords.y-rect.pageY,absoluteX:element.abosoluteCoords.x,absoluteY:element.abosoluteCoords.y});changed.push({id:id,x:element.abosoluteCoords.x-rect.pageX,y:element.abosoluteCoords.y-rect.pageY,absoluteX:element.abosoluteCoords.x,absoluteY:element.abosoluteCoords.y});});const cancelEvent={nativeEvent:{handlerTag:this.handlerTag,state:this.currentState,eventType:TouchEventType.CANCELLED,changedTouches:changed,allTouches:all,numberOfTouches:all.length,pointerType:this.pointerType},timeStamp:Date.now()};const{onGestureHandlerEvent}=this.propsRef.current;invokeNullableMethod(onGestureHandlerEvent,cancelEvent);}transformNativeEvent(){const lastCoords=this.tracker.getAbsoluteCoordsAverage();const lastRelativeCoords=this.tracker.getRelativeCoordsAverage();return{x:lastRelativeCoords.x,y:lastRelativeCoords.y,absoluteX:lastCoords.x,absoluteY:lastCoords.y};}updateGestureConfig(_ref){let{enabled=true}=_ref,props=_objectWithoutPropertiesLoose(_ref,_excluded);this.config=Object.assign({enabled:enabled},props);this.enabled=enabled;this.delegate.onEnabledChange(enabled);if(this.config.shouldCancelWhenOutside!==undefined){this.setShouldCancelWhenOutside(this.config.shouldCancelWhenOutside);}this.validateHitSlops();if(this.enabled){return;}switch(this.currentState){case State.ACTIVE:this.fail(true);break;case State.UNDETERMINED:GestureHandlerOrchestrator.getInstance().removeHandlerFromOrchestrator(this);break;default:this.cancel(true);break;}}checkCustomActivationCriteria(criterias){for(const key in this.config){if(criterias.indexOf(key)>=0){this.hasCustomActivationCriteria=true;}}}validateHitSlops(){if(!this.config.hitSlop){return;}if(this.config.hitSlop.left!==undefined&&this.config.hitSlop.right!==undefined&&this.config.hitSlop.width!==undefined){throw new Error('HitSlop Error: Cannot define left, right and width at the same time');}if(this.config.hitSlop.width!==undefined&&this.config.hitSlop.left===undefined&&this.config.hitSlop.right===undefined){throw new Error('HitSlop Error: When width is defined, either left or right has to be defined');}if(this.config.hitSlop.height!==undefined&&this.config.hitSlop.top!==undefined&&this.config.hitSlop.bottom!==undefined){throw new Error('HitSlop Error: Cannot define top, bottom and height at the same time');}if(this.config.hitSlop.height!==undefined&&this.config.hitSlop.top===undefined&&this.config.hitSlop.bottom===undefined){throw new Error('HitSlop Error: When height is defined, either top or bottom has to be defined');}}checkHitSlop(){if(!this.config.hitSlop){return true;}const{width,height}=this.delegate.measureView();let left=0;let top=0;let right=width;let bottom=height;if(this.config.hitSlop.horizontal!==undefined){left-=this.config.hitSlop.horizontal;right+=this.config.hitSlop.horizontal;}if(this.config.hitSlop.vertical!==undefined){top-=this.config.hitSlop.vertical;bottom+=this.config.hitSlop.vertical;}if(this.config.hitSlop.left!==undefined){left=-this.config.hitSlop.left;}if(this.config.hitSlop.right!==undefined){right=width+this.config.hitSlop.right;}if(this.config.hitSlop.top!==undefined){top=-this.config.hitSlop.top;}if(this.config.hitSlop.bottom!==undefined){bottom=width+this.config.hitSlop.bottom;}if(this.config.hitSlop.width!==undefined){if(this.config.hitSlop.left!==undefined){right=left+this.config.hitSlop.width;}else if(this.config.hitSlop.right!==undefined){left=right-this.config.hitSlop.width;}}if(this.config.hitSlop.height!==undefined){if(this.config.hitSlop.top!==undefined){bottom=top+this.config.hitSlop.height;}else if(this.config.hitSlop.bottom!==undefined){top=bottom-this.config.hitSlop.height;}}const rect=this.delegate.measureView();const{x,y}=this.tracker.getLastAbsoluteCoords();const offsetX=x-rect.pageX;const offsetY=y-rect.pageY;return offsetX>=left&&offsetX<=right&&offsetY>=top&&offsetY<=bottom;}isButtonInConfig(mouseButton){return!mouseButton||!this.config.mouseButton&&mouseButton===MouseButton.LEFT||this.config.mouseButton&&mouseButton&this.config.mouseButton;}resetConfig(){}onDestroy(){this.delegate.destroy(this.config);}getTag(){return this.handlerTag;}setTag(tag){this.handlerTag=tag;}getConfig(){return this.config;}getDelegate(){return this.delegate;}getTracker(){return this.tracker;}getTrackedPointersID(){return this.tracker.getTrackedPointersID();}getState(){return this.currentState;}isEnabled(){return this.enabled;}isFinished(){return this.currentState===State.END||this.currentState===State.FAILED||this.currentState===State.CANCELLED;}setShouldCancelWhenOutside(shouldCancel){this.shouldCancelWhenOutside=shouldCancel;}getShouldCancelWhenOutside(){return this.shouldCancelWhenOutside;}getPointerType(){return this.pointerType;}}function invokeNullableMethod(method,event){if(!method){return;}if(typeof method==='function'){method(event);return;}if('__getHandler'in method&&typeof method.__getHandler==='function'){const handler=method.__getHandler();invokeNullableMethod(handler,event);return;}if(!('__nodeConfig'in method)){return;}const{argMapping}=method.__nodeConfig;if(!Array.isArray(argMapping)){return;}for(const[index,[key,value]]of argMapping.entries()){if(!(key in event.nativeEvent)){continue;}const nativeValue=event.nativeEvent[key];if(value!==null&&value!==void 0&&value.setValue){value.setValue(nativeValue);}else{method.__nodeConfig.argMapping[index]=[key,nativeValue];}}return;}","map":{"version":3,"names":["State","TouchEventType","EventTypes","GestureHandlerOrchestrator","InteractionManager","PointerTracker","MouseButton","PointerType","GestureHandler","constructor","delegate","_defineProperty","UNDETERMINED","enabled","MOUSE","newState","oldState","onGestureHandlerEvent","onGestureHandlerStateChange","propsRef","current","resultEvent","transformEventData","lastSentState","invokeNullableMethod","currentState","ACTIVE","nativeEvent","undefined","init","viewRef","attachEventManager","manager","setOnPointerDown","onPointerDown","bind","setOnPointerAdd","onPointerAdd","setOnPointerUp","onPointerUp","setOnPointerRemove","onPointerRemove","setOnPointerMove","onPointerMove","setOnPointerEnter","onPointerEnter","setOnPointerLeave","onPointerLeave","setOnPointerCancel","onPointerCancel","setOnPointerOutOfBounds","onPointerOutOfBounds","setOnPointerMoveOver","onPointerMoveOver","setOnPointerMoveOut","onPointerMoveOut","registerListeners","onCancel","onReset","resetProgress","reset","tracker","resetTracker","moveToState","sendIfDisabled","getTrackedPointersCount","config","needsPointerData","isFinished","cancelTouches","getInstance","onHandlerStateChange","onStateChange","_newState","_oldState","begin","checkHitSlop","BEGAN","fail","onFail","FAILED","cancel","CANCELLED","activate","force","manualActivation","onActivate","end","onEnd","END","isAwaiting","awaiting","setAwaiting","value","isActive","active","setActive","getShouldResetProgress","shouldResetProgress","setShouldResetProgress","getActivationIndex","activationIndex","setActivationIndex","shouldWaitForHandlerFailure","handler","shouldRequireToWaitForFailure","shouldRequireHandlerToWaitForFailure","shouldRecognizeSimultaneously","shouldBeCancelledByOther","shouldHandlerBeCancelledBy","event","recordHandlerIfNotPresent","pointerType","TOUCH","cancelMouseAndPenGestures","tryToSendTouchEvent","tryToSendMoveEvent","shouldCancelWhenOutside","_event","out","sendEvent","sendTouchEvent","touchEvent","transformTouchEvent","Object","assign","numberOfPointers","state","pointerInside","isPointerInBounds","getAbsoluteCoordsAverage","transformNativeEvent","handlerTag","target","timeStamp","Date","now","rect","measureView","all","changed","trackerData","getData","size","has","pointerId","forEach","element","key","id","getMappedTouchEventId","push","x","abosoluteCoords","pageX","y","pageY","absoluteX","absoluteY","eventType","CANCEL","DOWN","ADDITIONAL_POINTER_DOWN","UP","ADDITIONAL_POINTER_UP","MOVE","numberOfTouches","length","changedTouches","allTouches","cancelEvent","lastCoords","lastRelativeCoords","getRelativeCoordsAverage","updateGestureConfig","_ref","props","_objectWithoutPropertiesLoose","_excluded","onEnabledChange","setShouldCancelWhenOutside","validateHitSlops","removeHandlerFromOrchestrator","checkCustomActivationCriteria","criterias","indexOf","hasCustomActivationCriteria","hitSlop","left","right","width","Error","height","top","bottom","horizontal","vertical","getLastAbsoluteCoords","offsetX","offsetY","isButtonInConfig","mouseButton","LEFT","resetConfig","onDestroy","destroy","getTag","setTag","tag","getConfig","getDelegate","getTracker","getTrackedPointersID","getState","isEnabled","shouldCancel","getShouldCancelWhenOutside","getPointerType","method","__getHandler","argMapping","__nodeConfig","Array","isArray","index","entries","nativeValue","setValue"],"sources":["/Users/nextek/Desktop/folder/SwiftPay/node_modules/react-native-gesture-handler/lib/module/web/handlers/GestureHandler.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-empty-function */\nimport { State } from '../../State';\nimport {\n  Config,\n  AdaptedEvent,\n  PropsRef,\n  ResultEvent,\n  PointerData,\n  ResultTouchEvent,\n  TouchEventType,\n  EventTypes,\n} from '../interfaces';\nimport EventManager from '../tools/EventManager';\nimport GestureHandlerOrchestrator from '../tools/GestureHandlerOrchestrator';\nimport InteractionManager from '../tools/InteractionManager';\nimport PointerTracker, { TrackerElement } from '../tools/PointerTracker';\nimport IGestureHandler from './IGestureHandler';\nimport { MouseButton } from '../../handlers/gestureHandlerCommon';\nimport { PointerType } from '../../PointerType';\nimport { GestureHandlerDelegate } from '../tools/GestureHandlerDelegate';\n\nexport default abstract class GestureHandler implements IGestureHandler {\n  private lastSentState: State | null = null;\n  protected currentState: State = State.UNDETERMINED;\n\n  protected shouldCancelWhenOutside = false;\n  protected hasCustomActivationCriteria = false;\n  protected enabled = false;\n\n  private viewRef!: number;\n  private propsRef!: React.RefObject<unknown>;\n  private handlerTag!: number;\n  protected config: Config = { enabled: false };\n\n  protected tracker: PointerTracker = new PointerTracker();\n\n  // Orchestrator properties\n  protected activationIndex = 0;\n  protected awaiting = false;\n  protected active = false;\n  protected shouldResetProgress = false;\n  protected pointerType: PointerType = PointerType.MOUSE;\n\n  protected delegate: GestureHandlerDelegate<unknown, IGestureHandler>;\n\n  public constructor(\n    delegate: GestureHandlerDelegate<unknown, IGestureHandler>\n  ) {\n    this.delegate = delegate;\n  }\n\n  //\n  // Initializing handler\n  //\n\n  protected init(viewRef: number, propsRef: React.RefObject<unknown>) {\n    this.propsRef = propsRef;\n    this.viewRef = viewRef;\n\n    this.currentState = State.UNDETERMINED;\n\n    this.delegate.init(viewRef, this);\n  }\n\n  public attachEventManager(manager: EventManager<unknown>): void {\n    manager.setOnPointerDown(this.onPointerDown.bind(this));\n    manager.setOnPointerAdd(this.onPointerAdd.bind(this));\n    manager.setOnPointerUp(this.onPointerUp.bind(this));\n    manager.setOnPointerRemove(this.onPointerRemove.bind(this));\n    manager.setOnPointerMove(this.onPointerMove.bind(this));\n    manager.setOnPointerEnter(this.onPointerEnter.bind(this));\n    manager.setOnPointerLeave(this.onPointerLeave.bind(this));\n    manager.setOnPointerCancel(this.onPointerCancel.bind(this));\n    manager.setOnPointerOutOfBounds(this.onPointerOutOfBounds.bind(this));\n    manager.setOnPointerMoveOver(this.onPointerMoveOver.bind(this));\n    manager.setOnPointerMoveOut(this.onPointerMoveOut.bind(this));\n\n    manager.registerListeners();\n  }\n\n  //\n  // Resetting handler\n  //\n\n  protected onCancel(): void {}\n  protected onReset(): void {}\n  protected resetProgress(): void {}\n\n  public reset(): void {\n    this.tracker.resetTracker();\n    this.onReset();\n    this.resetProgress();\n    this.delegate.reset();\n    this.currentState = State.UNDETERMINED;\n  }\n\n  //\n  // State logic\n  //\n\n  public moveToState(newState: State, sendIfDisabled?: boolean) {\n    if (this.currentState === newState) {\n      return;\n    }\n\n    const oldState = this.currentState;\n    this.currentState = newState;\n\n    if (\n      this.tracker.getTrackedPointersCount() > 0 &&\n      this.config.needsPointerData &&\n      this.isFinished()\n    ) {\n      this.cancelTouches();\n    }\n\n    GestureHandlerOrchestrator.getInstance().onHandlerStateChange(\n      this,\n      newState,\n      oldState,\n      sendIfDisabled\n    );\n\n    this.onStateChange(newState, oldState);\n\n    if (!this.enabled && this.isFinished()) {\n      this.currentState = State.UNDETERMINED;\n    }\n  }\n\n  protected onStateChange(_newState: State, _oldState: State): void {}\n\n  public begin(): void {\n    if (!this.checkHitSlop()) {\n      return;\n    }\n\n    if (this.currentState === State.UNDETERMINED) {\n      this.moveToState(State.BEGAN);\n    }\n  }\n\n  /**\n   * @param {boolean} sendIfDisabled - Used when handler becomes disabled. With this flag orchestrator will be forced to send fail event\n   */\n  public fail(sendIfDisabled?: boolean): void {\n    if (\n      this.currentState === State.ACTIVE ||\n      this.currentState === State.BEGAN\n    ) {\n      // Here the order of calling the delegate and moveToState is important.\n      // At this point we can use currentState as previuos state, because immediately after changing cursor we call moveToState method.\n      this.delegate.onFail();\n\n      this.moveToState(State.FAILED, sendIfDisabled);\n    }\n\n    this.resetProgress();\n  }\n\n  /**\n   * @param {boolean} sendIfDisabled - Used when handler becomes disabled. With this flag orchestrator will be forced to send cancel event\n   */\n  public cancel(sendIfDisabled?: boolean): void {\n    if (\n      this.currentState === State.ACTIVE ||\n      this.currentState === State.UNDETERMINED ||\n      this.currentState === State.BEGAN\n    ) {\n      this.onCancel();\n\n      // Same as above - order matters\n      this.delegate.onCancel();\n\n      this.moveToState(State.CANCELLED, sendIfDisabled);\n    }\n  }\n\n  public activate(force = false) {\n    if (\n      (this.config.manualActivation !== true || force) &&\n      (this.currentState === State.UNDETERMINED ||\n        this.currentState === State.BEGAN)\n    ) {\n      this.delegate.onActivate();\n      this.moveToState(State.ACTIVE);\n    }\n  }\n\n  public end() {\n    if (\n      this.currentState === State.BEGAN ||\n      this.currentState === State.ACTIVE\n    ) {\n      // Same as above - order matters\n      this.delegate.onEnd();\n\n      this.moveToState(State.END);\n    }\n\n    this.resetProgress();\n  }\n\n  //\n  // Methods for orchestrator\n  //\n\n  public isAwaiting(): boolean {\n    return this.awaiting;\n  }\n  public setAwaiting(value: boolean): void {\n    this.awaiting = value;\n  }\n\n  public isActive(): boolean {\n    return this.active;\n  }\n  public setActive(value: boolean): void {\n    this.active = value;\n  }\n\n  public getShouldResetProgress(): boolean {\n    return this.shouldResetProgress;\n  }\n  public setShouldResetProgress(value: boolean): void {\n    this.shouldResetProgress = value;\n  }\n\n  public getActivationIndex(): number {\n    return this.activationIndex;\n  }\n  public setActivationIndex(value: number): void {\n    this.activationIndex = value;\n  }\n\n  public shouldWaitForHandlerFailure(handler: IGestureHandler): boolean {\n    if (handler === this) {\n      return false;\n    }\n\n    return InteractionManager.getInstance().shouldWaitForHandlerFailure(\n      this,\n      handler\n    );\n  }\n\n  public shouldRequireToWaitForFailure(handler: IGestureHandler): boolean {\n    if (handler === this) {\n      return false;\n    }\n\n    return InteractionManager.getInstance().shouldRequireHandlerToWaitForFailure(\n      this,\n      handler\n    );\n  }\n\n  public shouldRecognizeSimultaneously(handler: IGestureHandler): boolean {\n    if (handler === this) {\n      return true;\n    }\n\n    return InteractionManager.getInstance().shouldRecognizeSimultaneously(\n      this,\n      handler\n    );\n  }\n\n  public shouldBeCancelledByOther(handler: IGestureHandler): boolean {\n    if (handler === this) {\n      return false;\n    }\n\n    return InteractionManager.getInstance().shouldHandlerBeCancelledBy(\n      this,\n      handler\n    );\n  }\n\n  //\n  // Event actions\n  //\n\n  protected onPointerDown(event: AdaptedEvent): void {\n    GestureHandlerOrchestrator.getInstance().recordHandlerIfNotPresent(this);\n    this.pointerType = event.pointerType;\n\n    if (this.pointerType === PointerType.TOUCH) {\n      GestureHandlerOrchestrator.getInstance().cancelMouseAndPenGestures(this);\n    }\n\n    // TODO: Bring back touch events along with introducing `handleDown` method that will handle handler specific stuff\n  }\n  // Adding another pointer to existing ones\n  protected onPointerAdd(event: AdaptedEvent): void {\n    this.tryToSendTouchEvent(event);\n  }\n  protected onPointerUp(event: AdaptedEvent): void {\n    this.tryToSendTouchEvent(event);\n  }\n  // Removing pointer, when there is more than one pointers\n  protected onPointerRemove(event: AdaptedEvent): void {\n    this.tryToSendTouchEvent(event);\n  }\n  protected onPointerMove(event: AdaptedEvent): void {\n    this.tryToSendMoveEvent(false, event);\n  }\n  protected onPointerLeave(event: AdaptedEvent): void {\n    if (this.shouldCancelWhenOutside) {\n      switch (this.currentState) {\n        case State.ACTIVE:\n          this.cancel();\n          break;\n        case State.BEGAN:\n          this.fail();\n          break;\n      }\n      return;\n    }\n\n    this.tryToSendTouchEvent(event);\n  }\n  protected onPointerEnter(event: AdaptedEvent): void {\n    this.tryToSendTouchEvent(event);\n  }\n  protected onPointerCancel(event: AdaptedEvent): void {\n    this.tryToSendTouchEvent(event);\n\n    this.cancel();\n    this.reset();\n  }\n  protected onPointerOutOfBounds(event: AdaptedEvent): void {\n    this.tryToSendMoveEvent(true, event);\n  }\n  protected onPointerMoveOver(_event: AdaptedEvent): void {\n    // Used only by hover gesture handler atm\n  }\n  protected onPointerMoveOut(_event: AdaptedEvent): void {\n    // Used only by hover gesture handler atm\n  }\n  private tryToSendMoveEvent(out: boolean, event: AdaptedEvent): void {\n    if ((out && this.shouldCancelWhenOutside) || !this.enabled) {\n      return;\n    }\n\n    if (this.active) {\n      this.sendEvent(this.currentState, this.currentState);\n    }\n\n    this.tryToSendTouchEvent(event);\n  }\n\n  protected tryToSendTouchEvent(event: AdaptedEvent): void {\n    if (this.config.needsPointerData) {\n      this.sendTouchEvent(event);\n    }\n  }\n\n  public sendTouchEvent(event: AdaptedEvent): void {\n    if (!this.enabled) {\n      return;\n    }\n\n    const { onGestureHandlerEvent }: PropsRef = this.propsRef\n      .current as PropsRef;\n\n    const touchEvent: ResultTouchEvent | undefined =\n      this.transformTouchEvent(event);\n\n    if (touchEvent) {\n      invokeNullableMethod(onGestureHandlerEvent, touchEvent);\n    }\n  }\n\n  //\n  // Events Sending\n  //\n\n  public sendEvent = (newState: State, oldState: State): void => {\n    const { onGestureHandlerEvent, onGestureHandlerStateChange }: PropsRef =\n      this.propsRef.current as PropsRef;\n\n    const resultEvent: ResultEvent = this.transformEventData(\n      newState,\n      oldState\n    );\n\n    // In the new API oldState field has to be undefined, unless we send event state changed\n    // Here the order is flipped to avoid workarounds such as making backup of the state and setting it to undefined first, then changing it back\n    // Flipping order with setting oldState to undefined solves issue, when events were being sent twice instead of once\n    // However, this may cause trouble in the future (but for now we don't know that)\n\n    if (this.lastSentState !== newState) {\n      this.lastSentState = newState;\n      invokeNullableMethod(onGestureHandlerStateChange, resultEvent);\n    }\n    if (this.currentState === State.ACTIVE) {\n      resultEvent.nativeEvent.oldState = undefined;\n      invokeNullableMethod(onGestureHandlerEvent, resultEvent);\n    }\n  };\n\n  private transformEventData(newState: State, oldState: State): ResultEvent {\n    return {\n      nativeEvent: {\n        numberOfPointers: this.tracker.getTrackedPointersCount(),\n        state: newState,\n        pointerInside: this.delegate.isPointerInBounds(\n          this.tracker.getAbsoluteCoordsAverage()\n        ),\n        ...this.transformNativeEvent(),\n        handlerTag: this.handlerTag,\n        target: this.viewRef,\n        oldState: newState !== oldState ? oldState : undefined,\n        pointerType: this.pointerType,\n      },\n      timeStamp: Date.now(),\n    };\n  }\n\n  private transformTouchEvent(\n    event: AdaptedEvent\n  ): ResultTouchEvent | undefined {\n    const rect = this.delegate.measureView();\n\n    const all: PointerData[] = [];\n    const changed: PointerData[] = [];\n\n    const trackerData = this.tracker.getData();\n\n    // This if handles edge case where all pointers have been cancelled\n    // When pointercancel is triggered, reset method is called. This means that tracker will be reset after first pointer being cancelled\n    // The problem is, that handler will receive another pointercancel event from the rest of the pointers\n    // To avoid crashing, we don't send event if tracker tracks no pointers, i.e. has been reset\n    if (trackerData.size === 0 || !trackerData.has(event.pointerId)) {\n      return;\n    }\n\n    trackerData.forEach((element: TrackerElement, key: number): void => {\n      const id: number = this.tracker.getMappedTouchEventId(key);\n\n      all.push({\n        id: id,\n        x: element.abosoluteCoords.x - rect.pageX,\n        y: element.abosoluteCoords.y - rect.pageY,\n        absoluteX: element.abosoluteCoords.x,\n        absoluteY: element.abosoluteCoords.y,\n      });\n    });\n\n    // Each pointer sends its own event, so we want changed touches to contain only the pointer that has changed.\n    // However, if the event is cancel, we want to cancel all pointers to avoid crashes\n    if (event.eventType !== EventTypes.CANCEL) {\n      changed.push({\n        id: this.tracker.getMappedTouchEventId(event.pointerId),\n        x: event.x - rect.pageX,\n        y: event.y - rect.pageY,\n        absoluteX: event.x,\n        absoluteY: event.y,\n      });\n    } else {\n      trackerData.forEach((element: TrackerElement, key: number): void => {\n        const id: number = this.tracker.getMappedTouchEventId(key);\n\n        changed.push({\n          id: id,\n          x: element.abosoluteCoords.x - rect.pageX,\n          y: element.abosoluteCoords.y - rect.pageY,\n          absoluteX: element.abosoluteCoords.x,\n          absoluteY: element.abosoluteCoords.y,\n        });\n      });\n    }\n\n    let eventType: TouchEventType = TouchEventType.UNDETERMINED;\n\n    switch (event.eventType) {\n      case EventTypes.DOWN:\n      case EventTypes.ADDITIONAL_POINTER_DOWN:\n        eventType = TouchEventType.DOWN;\n        break;\n      case EventTypes.UP:\n      case EventTypes.ADDITIONAL_POINTER_UP:\n        eventType = TouchEventType.UP;\n        break;\n      case EventTypes.MOVE:\n        eventType = TouchEventType.MOVE;\n        break;\n      case EventTypes.CANCEL:\n        eventType = TouchEventType.CANCELLED;\n        break;\n    }\n\n    // Here, when we receive up event, we want to decrease number of touches\n    // That's because we want handler to send information that there's one pointer less\n    // However, we still want this pointer to be present in allTouches array, so that its data can be accessed\n    let numberOfTouches: number = all.length;\n\n    if (\n      event.eventType === EventTypes.UP ||\n      event.eventType === EventTypes.ADDITIONAL_POINTER_UP\n    ) {\n      --numberOfTouches;\n    }\n\n    return {\n      nativeEvent: {\n        handlerTag: this.handlerTag,\n        state: this.currentState,\n        eventType: eventType,\n        changedTouches: changed,\n        allTouches: all,\n        numberOfTouches: numberOfTouches,\n        pointerType: this.pointerType,\n      },\n      timeStamp: Date.now(),\n    };\n  }\n\n  private cancelTouches(): void {\n    const rect = this.delegate.measureView();\n\n    const all: PointerData[] = [];\n    const changed: PointerData[] = [];\n\n    const trackerData = this.tracker.getData();\n\n    if (trackerData.size === 0) {\n      return;\n    }\n\n    trackerData.forEach((element: TrackerElement, key: number): void => {\n      const id: number = this.tracker.getMappedTouchEventId(key);\n\n      all.push({\n        id: id,\n        x: element.abosoluteCoords.x - rect.pageX,\n        y: element.abosoluteCoords.y - rect.pageY,\n        absoluteX: element.abosoluteCoords.x,\n        absoluteY: element.abosoluteCoords.y,\n      });\n\n      changed.push({\n        id: id,\n        x: element.abosoluteCoords.x - rect.pageX,\n        y: element.abosoluteCoords.y - rect.pageY,\n        absoluteX: element.abosoluteCoords.x,\n        absoluteY: element.abosoluteCoords.y,\n      });\n    });\n\n    const cancelEvent: ResultTouchEvent = {\n      nativeEvent: {\n        handlerTag: this.handlerTag,\n        state: this.currentState,\n        eventType: TouchEventType.CANCELLED,\n        changedTouches: changed,\n        allTouches: all,\n        numberOfTouches: all.length,\n        pointerType: this.pointerType,\n      },\n      timeStamp: Date.now(),\n    };\n\n    const { onGestureHandlerEvent }: PropsRef = this.propsRef\n      .current as PropsRef;\n\n    invokeNullableMethod(onGestureHandlerEvent, cancelEvent);\n  }\n\n  protected transformNativeEvent(): Record<string, unknown> {\n    // Those properties are shared by most handlers and if not this method will be overriden\n    const lastCoords = this.tracker.getAbsoluteCoordsAverage();\n    const lastRelativeCoords = this.tracker.getRelativeCoordsAverage();\n\n    return {\n      x: lastRelativeCoords.x,\n      y: lastRelativeCoords.y,\n      absoluteX: lastCoords.x,\n      absoluteY: lastCoords.y,\n    };\n  }\n\n  //\n  // Handling config\n  //\n\n  public updateGestureConfig({ enabled = true, ...props }: Config): void {\n    this.config = { enabled: enabled, ...props };\n    this.enabled = enabled;\n\n    this.delegate.onEnabledChange(enabled);\n\n    if (this.config.shouldCancelWhenOutside !== undefined) {\n      this.setShouldCancelWhenOutside(this.config.shouldCancelWhenOutside);\n    }\n\n    this.validateHitSlops();\n\n    if (this.enabled) {\n      return;\n    }\n\n    switch (this.currentState) {\n      case State.ACTIVE:\n        this.fail(true);\n        break;\n      case State.UNDETERMINED:\n        GestureHandlerOrchestrator.getInstance().removeHandlerFromOrchestrator(\n          this\n        );\n        break;\n      default:\n        this.cancel(true);\n        break;\n    }\n  }\n\n  protected checkCustomActivationCriteria(criterias: string[]): void {\n    for (const key in this.config) {\n      if (criterias.indexOf(key) >= 0) {\n        this.hasCustomActivationCriteria = true;\n      }\n    }\n  }\n\n  private validateHitSlops(): void {\n    if (!this.config.hitSlop) {\n      return;\n    }\n\n    if (\n      this.config.hitSlop.left !== undefined &&\n      this.config.hitSlop.right !== undefined &&\n      this.config.hitSlop.width !== undefined\n    ) {\n      throw new Error(\n        'HitSlop Error: Cannot define left, right and width at the same time'\n      );\n    }\n\n    if (\n      this.config.hitSlop.width !== undefined &&\n      this.config.hitSlop.left === undefined &&\n      this.config.hitSlop.right === undefined\n    ) {\n      throw new Error(\n        'HitSlop Error: When width is defined, either left or right has to be defined'\n      );\n    }\n\n    if (\n      this.config.hitSlop.height !== undefined &&\n      this.config.hitSlop.top !== undefined &&\n      this.config.hitSlop.bottom !== undefined\n    ) {\n      throw new Error(\n        'HitSlop Error: Cannot define top, bottom and height at the same time'\n      );\n    }\n\n    if (\n      this.config.hitSlop.height !== undefined &&\n      this.config.hitSlop.top === undefined &&\n      this.config.hitSlop.bottom === undefined\n    ) {\n      throw new Error(\n        'HitSlop Error: When height is defined, either top or bottom has to be defined'\n      );\n    }\n  }\n\n  private checkHitSlop(): boolean {\n    if (!this.config.hitSlop) {\n      return true;\n    }\n\n    const { width, height } = this.delegate.measureView();\n\n    let left = 0;\n    let top = 0;\n    let right: number = width;\n    let bottom: number = height;\n\n    if (this.config.hitSlop.horizontal !== undefined) {\n      left -= this.config.hitSlop.horizontal;\n      right += this.config.hitSlop.horizontal;\n    }\n\n    if (this.config.hitSlop.vertical !== undefined) {\n      top -= this.config.hitSlop.vertical;\n      bottom += this.config.hitSlop.vertical;\n    }\n\n    if (this.config.hitSlop.left !== undefined) {\n      left = -this.config.hitSlop.left;\n    }\n\n    if (this.config.hitSlop.right !== undefined) {\n      right = width + this.config.hitSlop.right;\n    }\n\n    if (this.config.hitSlop.top !== undefined) {\n      top = -this.config.hitSlop.top;\n    }\n\n    if (this.config.hitSlop.bottom !== undefined) {\n      bottom = width + this.config.hitSlop.bottom;\n    }\n    if (this.config.hitSlop.width !== undefined) {\n      if (this.config.hitSlop.left !== undefined) {\n        right = left + this.config.hitSlop.width;\n      } else if (this.config.hitSlop.right !== undefined) {\n        left = right - this.config.hitSlop.width;\n      }\n    }\n\n    if (this.config.hitSlop.height !== undefined) {\n      if (this.config.hitSlop.top !== undefined) {\n        bottom = top + this.config.hitSlop.height;\n      } else if (this.config.hitSlop.bottom !== undefined) {\n        top = bottom - this.config.hitSlop.height;\n      }\n    }\n\n    const rect = this.delegate.measureView();\n    const { x, y } = this.tracker.getLastAbsoluteCoords();\n    const offsetX: number = x - rect.pageX;\n    const offsetY: number = y - rect.pageY;\n\n    return (\n      offsetX >= left && offsetX <= right && offsetY >= top && offsetY <= bottom\n    );\n  }\n\n  public isButtonInConfig(mouseButton: MouseButton | undefined) {\n    return (\n      !mouseButton ||\n      (!this.config.mouseButton && mouseButton === MouseButton.LEFT) ||\n      (this.config.mouseButton && mouseButton & this.config.mouseButton)\n    );\n  }\n\n  protected resetConfig(): void {}\n\n  public onDestroy(): void {\n    this.delegate.destroy(this.config);\n  }\n\n  //\n  // Getters and setters\n  //\n\n  public getTag(): number {\n    return this.handlerTag;\n  }\n\n  public setTag(tag: number): void {\n    this.handlerTag = tag;\n  }\n\n  public getConfig() {\n    return this.config;\n  }\n\n  public getDelegate(): GestureHandlerDelegate<unknown, IGestureHandler> {\n    return this.delegate;\n  }\n\n  public getTracker(): PointerTracker {\n    return this.tracker;\n  }\n\n  public getTrackedPointersID(): number[] {\n    return this.tracker.getTrackedPointersID();\n  }\n\n  public getState(): State {\n    return this.currentState;\n  }\n\n  public isEnabled(): boolean {\n    return this.enabled;\n  }\n\n  private isFinished(): boolean {\n    return (\n      this.currentState === State.END ||\n      this.currentState === State.FAILED ||\n      this.currentState === State.CANCELLED\n    );\n  }\n\n  protected setShouldCancelWhenOutside(shouldCancel: boolean) {\n    this.shouldCancelWhenOutside = shouldCancel;\n  }\n\n  protected getShouldCancelWhenOutside(): boolean {\n    return this.shouldCancelWhenOutside;\n  }\n\n  public getPointerType(): PointerType {\n    return this.pointerType;\n  }\n}\n\nfunction invokeNullableMethod(\n  method:\n    | ((event: ResultEvent | ResultTouchEvent) => void)\n    | { __getHandler: () => (event: ResultEvent | ResultTouchEvent) => void }\n    | { __nodeConfig: { argMapping: unknown[] } },\n  event: ResultEvent | ResultTouchEvent\n): void {\n  if (!method) {\n    return;\n  }\n\n  if (typeof method === 'function') {\n    method(event);\n    return;\n  }\n\n  if ('__getHandler' in method && typeof method.__getHandler === 'function') {\n    const handler = method.__getHandler();\n    invokeNullableMethod(handler, event);\n    return;\n  }\n\n  if (!('__nodeConfig' in method)) {\n    return;\n  }\n\n  const { argMapping }: { argMapping: unknown } = method.__nodeConfig;\n  if (!Array.isArray(argMapping)) {\n    return;\n  }\n\n  for (const [index, [key, value]] of argMapping.entries()) {\n    if (!(key in event.nativeEvent)) {\n      continue;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    const nativeValue = event.nativeEvent[key];\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    if (value?.setValue) {\n      // Reanimated API\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n      value.setValue(nativeValue);\n    } else {\n      // RN Animated API\n      method.__nodeConfig.argMapping[index] = [key, nativeValue];\n    }\n  }\n\n  return;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}