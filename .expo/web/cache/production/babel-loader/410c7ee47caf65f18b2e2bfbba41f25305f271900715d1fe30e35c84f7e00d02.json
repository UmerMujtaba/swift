{"ast":null,"code":"function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}import{State}from'../../State';export default class InteractionManager{constructor(){_defineProperty(this,\"waitForRelations\",new Map());_defineProperty(this,\"simultaneousRelations\",new Map());_defineProperty(this,\"blocksHandlersRelations\",new Map());}configureInteractions(handler,config){this.dropRelationsForHandlerWithTag(handler.getTag());if(config.waitFor){const waitFor=[];config.waitFor.forEach(otherHandler=>{if(typeof otherHandler==='number'){waitFor.push(otherHandler);}else{waitFor.push(otherHandler.handlerTag);}});this.waitForRelations.set(handler.getTag(),waitFor);}if(config.simultaneousHandlers){const simultaneousHandlers=[];config.simultaneousHandlers.forEach(otherHandler=>{if(typeof otherHandler==='number'){simultaneousHandlers.push(otherHandler);}else{simultaneousHandlers.push(otherHandler.handlerTag);}});this.simultaneousRelations.set(handler.getTag(),simultaneousHandlers);}if(config.blocksHandlers){const blocksHandlers=[];config.blocksHandlers.forEach(otherHandler=>{if(typeof otherHandler==='number'){blocksHandlers.push(otherHandler);}else{blocksHandlers.push(otherHandler.handlerTag);}});this.blocksHandlersRelations.set(handler.getTag(),blocksHandlers);}}shouldWaitForHandlerFailure(handler,otherHandler){const waitFor=this.waitForRelations.get(handler.getTag());return(waitFor===null||waitFor===void 0?void 0:waitFor.find(tag=>{return tag===otherHandler.getTag();}))!==undefined;}shouldRecognizeSimultaneously(handler,otherHandler){const simultaneousHandlers=this.simultaneousRelations.get(handler.getTag());return(simultaneousHandlers===null||simultaneousHandlers===void 0?void 0:simultaneousHandlers.find(tag=>{return tag===otherHandler.getTag();}))!==undefined;}shouldRequireHandlerToWaitForFailure(handler,otherHandler){const waitFor=this.blocksHandlersRelations.get(handler.getTag());return(waitFor===null||waitFor===void 0?void 0:waitFor.find(tag=>{return tag===otherHandler.getTag();}))!==undefined;}shouldHandlerBeCancelledBy(_handler,otherHandler){var _otherHandler$isButto;const isNativeHandler=otherHandler.constructor.name==='NativeViewGestureHandler';const isActive=otherHandler.getState()===State.ACTIVE;const isButton=((_otherHandler$isButto=otherHandler.isButton)===null||_otherHandler$isButto===void 0?void 0:_otherHandler$isButto.call(otherHandler))===true;return isNativeHandler&&isActive&&!isButton;}dropRelationsForHandlerWithTag(handlerTag){this.waitForRelations.delete(handlerTag);this.simultaneousRelations.delete(handlerTag);this.blocksHandlersRelations.delete(handlerTag);}reset(){this.waitForRelations.clear();this.simultaneousRelations.clear();this.blocksHandlersRelations.clear();}static getInstance(){if(!this.instance){this.instance=new InteractionManager();}return this.instance;}}_defineProperty(InteractionManager,\"instance\",void 0);","map":{"version":3,"names":["State","InteractionManager","constructor","_defineProperty","Map","configureInteractions","handler","config","dropRelationsForHandlerWithTag","getTag","waitFor","forEach","otherHandler","push","handlerTag","waitForRelations","set","simultaneousHandlers","simultaneousRelations","blocksHandlers","blocksHandlersRelations","shouldWaitForHandlerFailure","get","find","tag","undefined","shouldRecognizeSimultaneously","shouldRequireHandlerToWaitForFailure","shouldHandlerBeCancelledBy","_handler","_otherHandler$isButto","isNativeHandler","name","isActive","getState","ACTIVE","isButton","call","delete","reset","clear","getInstance","instance"],"sources":["/Users/nextek/Desktop/folder/SwiftPay/node_modules/react-native-gesture-handler/lib/module/web/tools/InteractionManager.ts"],"sourcesContent":["import type IGestureHandler from '../handlers/IGestureHandler';\nimport { State } from '../../State';\nimport { Config, Handler } from '../interfaces';\n\nexport default class InteractionManager {\n  private static instance: InteractionManager;\n  private readonly waitForRelations: Map<number, number[]> = new Map();\n  private readonly simultaneousRelations: Map<number, number[]> = new Map();\n  private readonly blocksHandlersRelations: Map<number, number[]> = new Map();\n\n  // Private becaues of singleton\n  // eslint-disable-next-line no-useless-constructor, @typescript-eslint/no-empty-function\n  private constructor() {}\n\n  public configureInteractions(handler: IGestureHandler, config: Config) {\n    this.dropRelationsForHandlerWithTag(handler.getTag());\n\n    if (config.waitFor) {\n      const waitFor: number[] = [];\n      config.waitFor.forEach((otherHandler: Handler): void => {\n        // New API reference\n        if (typeof otherHandler === 'number') {\n          waitFor.push(otherHandler);\n        } else {\n          // Old API reference\n          waitFor.push(otherHandler.handlerTag);\n        }\n      });\n\n      this.waitForRelations.set(handler.getTag(), waitFor);\n    }\n\n    if (config.simultaneousHandlers) {\n      const simultaneousHandlers: number[] = [];\n      config.simultaneousHandlers.forEach((otherHandler: Handler): void => {\n        if (typeof otherHandler === 'number') {\n          simultaneousHandlers.push(otherHandler);\n        } else {\n          simultaneousHandlers.push(otherHandler.handlerTag);\n        }\n      });\n\n      this.simultaneousRelations.set(handler.getTag(), simultaneousHandlers);\n    }\n\n    if (config.blocksHandlers) {\n      const blocksHandlers: number[] = [];\n      config.blocksHandlers.forEach((otherHandler: Handler): void => {\n        if (typeof otherHandler === 'number') {\n          blocksHandlers.push(otherHandler);\n        } else {\n          blocksHandlers.push(otherHandler.handlerTag);\n        }\n      });\n\n      this.blocksHandlersRelations.set(handler.getTag(), blocksHandlers);\n    }\n  }\n\n  public shouldWaitForHandlerFailure(\n    handler: IGestureHandler,\n    otherHandler: IGestureHandler\n  ): boolean {\n    const waitFor: number[] | undefined = this.waitForRelations.get(\n      handler.getTag()\n    );\n\n    return (\n      waitFor?.find((tag: number) => {\n        return tag === otherHandler.getTag();\n      }) !== undefined\n    );\n  }\n\n  public shouldRecognizeSimultaneously(\n    handler: IGestureHandler,\n    otherHandler: IGestureHandler\n  ): boolean {\n    const simultaneousHandlers: number[] | undefined =\n      this.simultaneousRelations.get(handler.getTag());\n\n    return (\n      simultaneousHandlers?.find((tag: number) => {\n        return tag === otherHandler.getTag();\n      }) !== undefined\n    );\n  }\n\n  public shouldRequireHandlerToWaitForFailure(\n    handler: IGestureHandler,\n    otherHandler: IGestureHandler\n  ): boolean {\n    const waitFor: number[] | undefined = this.blocksHandlersRelations.get(\n      handler.getTag()\n    );\n\n    return (\n      waitFor?.find((tag: number) => {\n        return tag === otherHandler.getTag();\n      }) !== undefined\n    );\n  }\n\n  public shouldHandlerBeCancelledBy(\n    _handler: IGestureHandler,\n    otherHandler: IGestureHandler\n  ): boolean {\n    // We check constructor name instead of using `instanceof` in order do avoid circular dependencies\n    const isNativeHandler =\n      otherHandler.constructor.name === 'NativeViewGestureHandler';\n    const isActive = otherHandler.getState() === State.ACTIVE;\n    const isButton = otherHandler.isButton?.() === true;\n\n    return isNativeHandler && isActive && !isButton;\n  }\n\n  public dropRelationsForHandlerWithTag(handlerTag: number): void {\n    this.waitForRelations.delete(handlerTag);\n    this.simultaneousRelations.delete(handlerTag);\n    this.blocksHandlersRelations.delete(handlerTag);\n  }\n\n  public reset() {\n    this.waitForRelations.clear();\n    this.simultaneousRelations.clear();\n    this.blocksHandlersRelations.clear();\n  }\n\n  public static getInstance(): InteractionManager {\n    if (!this.instance) {\n      this.instance = new InteractionManager();\n    }\n\n    return this.instance;\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}