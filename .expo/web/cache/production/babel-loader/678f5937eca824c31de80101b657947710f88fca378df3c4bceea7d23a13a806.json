{"ast":null,"code":"import View from\"react-native-web/dist/exports/View\";import Text from\"react-native-web/dist/exports/Text\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import Platform from\"react-native-web/dist/exports/Platform\";import TouchableWithoutFeedback from\"react-native-web/dist/exports/TouchableWithoutFeedback\";import Keyboard from\"react-native-web/dist/exports/Keyboard\";import React,{useState}from'react';import AppBar from'../../../components/appBar';import{styles}from'./styles';import{Strings}from'../../../constants/strings';import{CodeField,Cursor,useBlurOnFulfill,useClearByFocusCell}from'react-native-confirmation-code-field';import{rfs,rwp}from'../../../constants/dimensions';import{GradientButton}from'../../../components/cta';import ProgressBar from'../../../components/progressBar';import{colors}from'../../../constants/colors';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const GetStartedScreenThree=({route,navigation})=>{const{phone,countryCode}=route.params;const[otpCode,setOtpCode]=useState(null);const CELL_COUNT=6;const[value,setValue]=useState('');const[results,getCellOnLayoutHandler]=useClearByFocusCell({value,setValue});const ref=useBlurOnFulfill({value,cellCount:CELL_COUNT});const isOtpComplete=value.length===CELL_COUNT;const DedicatedView=true?View:TouchableWithoutFeedback;const handlePress=()=>{false&&Keyboard.dismiss();};return _jsx(DedicatedView,{style:{flex:1},onPress:handlePress,children:_jsxs(View,{style:styles.container,children:[_jsx(AppBar,{start:3,end:3,onPress:()=>navigation.goBack()}),_jsx(ProgressBar,{progress:100,style:{borderBottomLeftRadius:8,borderBottomTopRadius:8}}),_jsxs(Text,{style:styles.title,children:[Strings.verifyPhn,\" \"]}),_jsxs(Text,{style:styles.subTitle,children:[Strings.otpHeading,\" \"]}),_jsxs(View,{style:styles.countryCodeStyle,children:[_jsx(Text,{style:styles.phnText,children:`${countryCode} ${phone}`}),_jsx(TouchableOpacity,{children:_jsx(Text,{style:styles.editText,children:Strings.editNumber})})]}),_jsx(View,{style:styles.otpContainer,children:_jsx(CodeField,Object.assign({ref:ref},results,{caretHidden:false,value:value,onChangeText:text=>{setValue(text);setOtpCode(text);},cellCount:CELL_COUNT,rootStyle:styles.codeFieldRoot,keyboardType:\"number-pad\",textContentType:\"oneTimeCode\",autoComplete:'one-time-code',testID:\"my-code-input\",renderCell:({index,symbol,isFocused})=>_jsx(View,{style:styles.cell,children:_jsx(Text,{style:[styles.cellText],onLayout:getCellOnLayoutHandler(index),children:symbol||(isFocused?_jsx(Cursor,{}):null)},index)})}))}),_jsxs(View,{style:styles.bottomTextRow,children:[_jsx(Text,{style:styles.codeText,children:Strings.codeReceive}),_jsx(TouchableOpacity,{children:_jsx(Text,{style:[styles.codeText,{color:colors.primary,marginLeft:rwp(2),fontFamily:'PlusJakartaSans-SemiBold',fontSize:false?rfs(14):rfs(15)}],children:Strings.resendCode})})]}),_jsx(View,{style:styles.flexStyle}),_jsx(GradientButton,{buttonText:Strings.verify,style:styles.btnStyle(isOtpComplete)})]})});};export default GetStartedScreenThree;","map":{"version":3,"names":["React","useState","AppBar","styles","Strings","CodeField","Cursor","useBlurOnFulfill","useClearByFocusCell","rfs","rwp","GradientButton","ProgressBar","colors","jsx","_jsx","jsxs","_jsxs","GetStartedScreenThree","route","navigation","phone","countryCode","params","otpCode","setOtpCode","CELL_COUNT","value","setValue","results","getCellOnLayoutHandler","ref","cellCount","isOtpComplete","length","DedicatedView","View","TouchableWithoutFeedback","handlePress","Keyboard","dismiss","style","flex","onPress","children","container","start","end","goBack","progress","borderBottomLeftRadius","borderBottomTopRadius","Text","title","verifyPhn","subTitle","otpHeading","countryCodeStyle","phnText","TouchableOpacity","editText","editNumber","otpContainer","Object","assign","caretHidden","onChangeText","text","rootStyle","codeFieldRoot","keyboardType","textContentType","autoComplete","testID","renderCell","index","symbol","isFocused","cell","cellText","onLayout","bottomTextRow","codeText","codeReceive","color","primary","marginLeft","fontFamily","fontSize","resendCode","flexStyle","buttonText","verify","btnStyle"],"sources":["/Users/nextek/Desktop/folder/SwiftPay/src/screens/auth/getStartedScreenThree/index.js"],"sourcesContent":["import { View, Text, TouchableOpacity, Platform, TouchableWithoutFeedback, Keyboard } from 'react-native';\nimport React, { useState } from 'react';\nimport AppBar from '../../../components/appBar';\nimport { styles } from './styles';\nimport { Strings } from '../../../constants/strings';\nimport {\n  CodeField,\n  Cursor,\n  useBlurOnFulfill,\n  useClearByFocusCell,\n} from 'react-native-confirmation-code-field';\nimport { rfs, rwp } from '../../../constants/dimensions';\nimport { GradientButton } from '../../../components/cta';\nimport ProgressBar from '../../../components/progressBar';\nimport { colors } from '../../../constants/colors';\n\nconst GetStartedScreenThree = ({ route, navigation }) => {\n  const { phone, countryCode } = route.params;\n  const [otpCode, setOtpCode] = useState(null);\n  const CELL_COUNT = 6;\n  const [value, setValue] = useState('');\n  const [results, getCellOnLayoutHandler] = useClearByFocusCell({\n    value,\n    setValue,\n  });\n  const ref = useBlurOnFulfill({ value, cellCount: CELL_COUNT });\n  const isOtpComplete = value.length === CELL_COUNT;\n  const DedicatedView = Platform.OS === 'web' ? View : TouchableWithoutFeedback\n  const handlePress = () => {\n    Platform.OS !== 'web' && Keyboard.dismiss()\n  }\n  return (\n    <DedicatedView style={{flex:1}} onPress={handlePress}>\n    <View style={styles.container}>\n      <AppBar start={3} end={3} onPress={() => navigation.goBack()} />\n      <ProgressBar\n        progress={100}\n        style={{ borderBottomLeftRadius: 8, borderBottomTopRadius: 8 }}\n      />\n      <Text style={styles.title}>{Strings.verifyPhn} </Text>\n      <Text style={styles.subTitle}>{Strings.otpHeading} </Text>\n\n      <View style={styles.countryCodeStyle}>\n        <Text style={styles.phnText}>{`${countryCode} ${phone}`}</Text>\n        <TouchableOpacity>\n          <Text style={styles.editText}>{Strings.editNumber}</Text>\n        </TouchableOpacity>\n      </View>\n      <View style={styles.otpContainer}>\n        <CodeField\n          ref={ref}\n          {...results}\n          caretHidden={false}\n          value={value}\n          onChangeText={text => {\n            setValue(text);\n            setOtpCode(text);\n          }}\n          cellCount={CELL_COUNT}\n          rootStyle={styles.codeFieldRoot}\n          keyboardType=\"number-pad\"\n          textContentType=\"oneTimeCode\"\n          autoComplete={Platform.select({\n            android: 'sms-otp',\n            default: 'one-time-code',\n          })}\n          testID=\"my-code-input\"\n          renderCell={({ index, symbol, isFocused }) => (\n            <View style={styles.cell}>\n              <Text\n                key={index}\n                style={[styles.cellText]}\n                onLayout={getCellOnLayoutHandler(index)}>\n                {symbol || (isFocused ? <Cursor /> : null)}\n              </Text>\n            </View>\n          )}\n        />\n      </View>\n      <View style={styles.bottomTextRow}>\n        <Text style={styles.codeText}>{Strings.codeReceive}</Text>\n        <TouchableOpacity>\n          <Text\n            style={[\n              styles.codeText,\n              {\n                color: colors.primary,\n                marginLeft: rwp(2),\n                fontFamily: 'PlusJakartaSans-SemiBold',\n                fontSize: Platform.OS ==='ios' ? rfs(14) : rfs(15)\n              },\n            ]}>\n            {Strings.resendCode}\n          </Text>\n        </TouchableOpacity>\n      </View>\n      <View style={styles.flexStyle} />\n      <GradientButton\n        buttonText={Strings.verify}\n        style={styles.btnStyle(isOtpComplete)}\n      />\n    </View>\n    </DedicatedView>\n  );\n};\n\nexport default GetStartedScreenThree;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}