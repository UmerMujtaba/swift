{"ast":null,"code":"import View from\"react-native-web/dist/exports/View\";import Text from\"react-native-web/dist/exports/Text\";import StatusBar from\"react-native-web/dist/exports/StatusBar\";import Image from\"react-native-web/dist/exports/Image\";import ActivityIndicator from\"react-native-web/dist/exports/ActivityIndicator\";import React from'react';import{styles}from'./styles';import{images}from'../../../assets/images';import{LinearGradient}from'expo-linear-gradient';import{ScreenNames,Strings}from'../../../constants/strings';import{GradientButton,PlainButton}from'../../../components/cta';import{navigate}from'../../../navigator/navigationRef';import{colors}from'../../../constants/colors';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const OnBoardingScreen=()=>{return _jsxs(View,{style:[styles.container],children:[_jsx(StatusBar,{translucent:true,backgroundColor:'transparent'}),_jsxs(LinearGradient,{colors:[colors.gradientColor1,colors.gradientColor2],start:{x:0,y:0},end:{x:1,y:0},style:styles.gradientView,children:[_jsx(Image,{source:images.logoTextImage2,style:styles.logoImage}),_jsx(Image,{source:images.phoneImage,style:styles.bgImageStyle}),_jsx(View,{style:styles.flexStyle}),_jsxs(View,{style:styles.bottomContainer,children:[_jsx(Text,{style:[styles.heading],children:Strings.mobileBanking}),_jsx(Text,{style:styles.subHeading,children:Strings.getSendingText}),_jsxs(View,{style:[styles.btnContainer],children:[_jsx(PlainButton,{buttonText:Strings.login,style:styles.btn}),_jsx(GradientButton,{buttonText:Strings.getStarted,onPress:()=>navigate(ScreenNames.StartScreenOne),style:styles.btn2})]})]})]})]});};export default OnBoardingScreen;","map":{"version":3,"names":["React","styles","images","LinearGradient","ScreenNames","Strings","GradientButton","PlainButton","navigate","colors","jsx","_jsx","jsxs","_jsxs","OnBoardingScreen","View","style","container","children","StatusBar","translucent","backgroundColor","gradientColor1","gradientColor2","start","x","y","end","gradientView","Image","source","logoTextImage2","logoImage","phoneImage","bgImageStyle","flexStyle","bottomContainer","Text","heading","mobileBanking","subHeading","getSendingText","btnContainer","buttonText","login","btn","getStarted","onPress","StartScreenOne","btn2"],"sources":["/Users/nextek/Desktop/folder/SwiftPay/src/screens/auth/onBoardingScreen/index.js"],"sourcesContent":["import { View, Text, StatusBar, Image, ActivityIndicator } from 'react-native';\nimport React from 'react';\nimport { styles } from './styles';\nimport { images } from '../../../assets/images';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { ScreenNames, Strings } from '../../../constants/strings';\nimport { GradientButton, PlainButton } from '../../../components/cta';\nimport { navigate } from '../../../navigator/navigationRef';\nimport { colors } from '../../../constants/colors';\n\nconst OnBoardingScreen = () => {\n  return (\n    <View style={[styles.container]}>\n      <StatusBar translucent={true} backgroundColor={'transparent'} />\n      <LinearGradient\n        colors={[colors.gradientColor1, colors.gradientColor2]}\n        start={{ x: 0, y: 0 }}\n        end={{ x: 1, y: 0 }}\n        style={styles.gradientView}\n      >\n        <Image source={images.logoTextImage2} style={styles.logoImage} />\n        <Image source={images.phoneImage} style={styles.bgImageStyle} />\n        <View style={styles.flexStyle} />\n        <View style={styles.bottomContainer}>\n          <Text style={[styles.heading]}>{Strings.mobileBanking}</Text>\n          <Text style={styles.subHeading}>{Strings.getSendingText}</Text>\n          <View style={[styles.btnContainer]}>\n            <PlainButton buttonText={Strings.login}\n              style={styles.btn}\n            />\n            <GradientButton\n              buttonText={Strings.getStarted}\n              onPress={() => navigate(ScreenNames.StartScreenOne)}\n              style={styles.btn2}\n            />\n          </View>\n        </View>\n      </LinearGradient>\n    </View>\n  );\n};\n\nexport default OnBoardingScreen;\n"],"mappings":"+SACA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,MAAM,KAAQ,UAAU,CACjC,OAASC,MAAM,KAAQ,wBAAwB,CAC/C,OAASC,cAAc,KAAQ,sBAAsB,CACrD,OAASC,WAAW,CAAEC,OAAO,KAAQ,4BAA4B,CACjE,OAASC,cAAc,CAAEC,WAAW,KAAQ,yBAAyB,CACrE,OAASC,QAAQ,KAAQ,kCAAkC,CAC3D,OAASC,MAAM,KAAQ,2BAA2B,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEnD,KAAM,CAAAC,gBAAgB,CAAGA,CAAA,GAAM,CAC7B,MACE,CAAAD,KAAA,CAACE,IAAI,EAACC,KAAK,CAAE,CAACf,MAAM,CAACgB,SAAS,CAAE,CAAAC,QAAA,EAC9BP,IAAA,CAACQ,SAAS,EAACC,WAAW,CAAE,IAAK,CAACC,eAAe,CAAE,aAAc,CAAE,CAAC,CAChER,KAAA,CAACV,cAAc,EACbM,MAAM,CAAE,CAACA,MAAM,CAACa,cAAc,CAAEb,MAAM,CAACc,cAAc,CAAE,CACvDC,KAAK,CAAE,CAAEC,CAAC,CAAE,CAAC,CAAEC,CAAC,CAAE,CAAE,CAAE,CACtBC,GAAG,CAAE,CAAEF,CAAC,CAAE,CAAC,CAAEC,CAAC,CAAE,CAAE,CAAE,CACpBV,KAAK,CAAEf,MAAM,CAAC2B,YAAa,CAAAV,QAAA,EAE3BP,IAAA,CAACkB,KAAK,EAACC,MAAM,CAAE5B,MAAM,CAAC6B,cAAe,CAACf,KAAK,CAAEf,MAAM,CAAC+B,SAAU,CAAE,CAAC,CACjErB,IAAA,CAACkB,KAAK,EAACC,MAAM,CAAE5B,MAAM,CAAC+B,UAAW,CAACjB,KAAK,CAAEf,MAAM,CAACiC,YAAa,CAAE,CAAC,CAChEvB,IAAA,CAACI,IAAI,EAACC,KAAK,CAAEf,MAAM,CAACkC,SAAU,CAAE,CAAC,CACjCtB,KAAA,CAACE,IAAI,EAACC,KAAK,CAAEf,MAAM,CAACmC,eAAgB,CAAAlB,QAAA,EAClCP,IAAA,CAAC0B,IAAI,EAACrB,KAAK,CAAE,CAACf,MAAM,CAACqC,OAAO,CAAE,CAAApB,QAAA,CAAEb,OAAO,CAACkC,aAAa,CAAO,CAAC,CAC7D5B,IAAA,CAAC0B,IAAI,EAACrB,KAAK,CAAEf,MAAM,CAACuC,UAAW,CAAAtB,QAAA,CAAEb,OAAO,CAACoC,cAAc,CAAO,CAAC,CAC/D5B,KAAA,CAACE,IAAI,EAACC,KAAK,CAAE,CAACf,MAAM,CAACyC,YAAY,CAAE,CAAAxB,QAAA,EACjCP,IAAA,CAACJ,WAAW,EAACoC,UAAU,CAAEtC,OAAO,CAACuC,KAAM,CACrC5B,KAAK,CAAEf,MAAM,CAAC4C,GAAI,CACnB,CAAC,CACFlC,IAAA,CAACL,cAAc,EACbqC,UAAU,CAAEtC,OAAO,CAACyC,UAAW,CAC/BC,OAAO,CAAEA,CAAA,GAAMvC,QAAQ,CAACJ,WAAW,CAAC4C,cAAc,CAAE,CACpDhC,KAAK,CAAEf,MAAM,CAACgD,IAAK,CACpB,CAAC,EACE,CAAC,EACH,CAAC,EACO,CAAC,EACb,CAAC,CAEX,CAAC,CAED,cAAe,CAAAnC,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}