{"ast":null,"code":"const truncateString=(codeValue,codeLength)=>codeValue.substr(0,codeLength).split('');const emptySymbols=codeLength=>new Array(codeLength).fill('');export const getSymbols=(codeValue,codeLength)=>new Array().concat(truncateString(codeValue,codeLength)).concat(emptySymbols(codeLength)).slice(0,codeLength);export const getStyle=(base,custom)=>custom?[base,custom]:base;export const isLastFilledCell=({value,index})=>Boolean(value&&value.length-2===index);","map":{"version":3,"names":["truncateString","codeValue","codeLength","substr","split","emptySymbols","Array","fill","getSymbols","concat","slice","getStyle","base","custom","isLastFilledCell","value","index","Boolean","length"],"sources":["/Users/nextek/Desktop/folder/SwiftPay/node_modules/react-native-confirmation-code-field/esm/utils.js"],"sourcesContent":["const truncateString = (codeValue, codeLength) => codeValue.substr(0, codeLength).split('');\nconst emptySymbols = (codeLength) => new Array(codeLength).fill('');\nexport const getSymbols = (codeValue, codeLength) => new Array()\n    .concat(truncateString(codeValue, codeLength))\n    .concat(emptySymbols(codeLength))\n    .slice(0, codeLength);\nexport const getStyle = (base, custom) => (custom ? [base, custom] : base);\nexport const isLastFilledCell = ({ value, index }) => Boolean(value && value.length - 2 === index);\n"],"mappings":"AAAA,KAAM,CAAAA,cAAc,CAAGA,CAACC,SAAS,CAAEC,UAAU,GAAKD,SAAS,CAACE,MAAM,CAAC,CAAC,CAAED,UAAU,CAAC,CAACE,KAAK,CAAC,EAAE,CAAC,CAC3F,KAAM,CAAAC,YAAY,CAAIH,UAAU,EAAK,GAAI,CAAAI,KAAK,CAACJ,UAAU,CAAC,CAACK,IAAI,CAAC,EAAE,CAAC,CACnE,MAAO,MAAM,CAAAC,UAAU,CAAGA,CAACP,SAAS,CAAEC,UAAU,GAAK,GAAI,CAAAI,KAAK,CAAC,CAAC,CAC3DG,MAAM,CAACT,cAAc,CAACC,SAAS,CAAEC,UAAU,CAAC,CAAC,CAC7CO,MAAM,CAACJ,YAAY,CAACH,UAAU,CAAC,CAAC,CAChCQ,KAAK,CAAC,CAAC,CAAER,UAAU,CAAC,CACzB,MAAO,MAAM,CAAAS,QAAQ,CAAGA,CAACC,IAAI,CAAEC,MAAM,GAAMA,MAAM,CAAG,CAACD,IAAI,CAAEC,MAAM,CAAC,CAAGD,IAAK,CAC1E,MAAO,MAAM,CAAAE,gBAAgB,CAAGA,CAAC,CAAEC,KAAK,CAAEC,KAAM,CAAC,GAAKC,OAAO,CAACF,KAAK,EAAIA,KAAK,CAACG,MAAM,CAAG,CAAC,GAAKF,KAAK,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}