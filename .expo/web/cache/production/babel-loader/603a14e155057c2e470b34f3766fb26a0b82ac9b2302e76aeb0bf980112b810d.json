{"ast":null,"code":"import _objectWithoutPropertiesLoose from\"@babel/runtime/helpers/objectWithoutPropertiesLoose\";const _excluded=[\"enabled\"];function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}import{State}from'../../State';import{DEFAULT_TOUCH_SLOP}from'../constants';import GestureHandler from'./GestureHandler';import ScaleGestureDetector from'../detectors/ScaleGestureDetector';export default class PinchGestureHandler extends GestureHandler{constructor(...args){super(...args);_defineProperty(this,\"scale\",1);_defineProperty(this,\"velocity\",0);_defineProperty(this,\"startingSpan\",0);_defineProperty(this,\"spanSlop\",DEFAULT_TOUCH_SLOP);_defineProperty(this,\"scaleDetectorListener\",{onScaleBegin:detector=>{this.startingSpan=detector.getCurrentSpan();return true;},onScale:detector=>{const prevScaleFactor=this.scale;this.scale*=detector.getScaleFactor(this.tracker.getTrackedPointersCount());const delta=detector.getTimeDelta();if(delta>0){this.velocity=(this.scale-prevScaleFactor)/delta;}if(Math.abs(this.startingSpan-detector.getCurrentSpan())>=this.spanSlop&&this.currentState===State.BEGAN){this.activate();}return true;},onScaleEnd:_detector=>{}});_defineProperty(this,\"scaleGestureDetector\",new ScaleGestureDetector(this.scaleDetectorListener));}init(ref,propsRef){super.init(ref,propsRef);this.setShouldCancelWhenOutside(false);}updateGestureConfig(_ref){let{enabled=true}=_ref,props=_objectWithoutPropertiesLoose(_ref,_excluded);super.updateGestureConfig(Object.assign({enabled:enabled},props));}transformNativeEvent(){return{focalX:this.scaleGestureDetector.getFocusX(),focalY:this.scaleGestureDetector.getFocusY(),velocity:this.velocity,scale:this.scale};}onPointerDown(event){this.tracker.addToTracker(event);super.onPointerDown(event);this.tryToSendTouchEvent(event);}onPointerAdd(event){this.tracker.addToTracker(event);super.onPointerAdd(event);this.tryBegin();this.scaleGestureDetector.onTouchEvent(event,this.tracker);}onPointerUp(event){super.onPointerUp(event);this.tracker.removeFromTracker(event.pointerId);if(this.currentState!==State.ACTIVE){return;}this.scaleGestureDetector.onTouchEvent(event,this.tracker);if(this.currentState===State.ACTIVE){this.end();}else{this.fail();}}onPointerRemove(event){super.onPointerRemove(event);this.scaleGestureDetector.onTouchEvent(event,this.tracker);this.tracker.removeFromTracker(event.pointerId);if(this.currentState===State.ACTIVE&&this.tracker.getTrackedPointersCount()<2){this.end();}}onPointerMove(event){if(this.tracker.getTrackedPointersCount()<2){return;}this.tracker.track(event);this.scaleGestureDetector.onTouchEvent(event,this.tracker);super.onPointerMove(event);}onPointerOutOfBounds(event){if(this.tracker.getTrackedPointersCount()<2){return;}this.tracker.track(event);this.scaleGestureDetector.onTouchEvent(event,this.tracker);super.onPointerOutOfBounds(event);}tryBegin(){if(this.currentState!==State.UNDETERMINED){return;}this.resetProgress();this.begin();}activate(force){if(this.currentState!==State.ACTIVE){this.resetProgress();}super.activate(force);}onReset(){this.resetProgress();}resetProgress(){if(this.currentState===State.ACTIVE){return;}this.velocity=0;this.scale=1;}}","map":{"version":3,"names":["State","DEFAULT_TOUCH_SLOP","GestureHandler","ScaleGestureDetector","PinchGestureHandler","constructor","args","_defineProperty","onScaleBegin","detector","startingSpan","getCurrentSpan","onScale","prevScaleFactor","scale","getScaleFactor","tracker","getTrackedPointersCount","delta","getTimeDelta","velocity","Math","abs","spanSlop","currentState","BEGAN","activate","onScaleEnd","_detector","scaleDetectorListener","init","ref","propsRef","setShouldCancelWhenOutside","updateGestureConfig","_ref","enabled","props","_objectWithoutPropertiesLoose","_excluded","Object","assign","transformNativeEvent","focalX","scaleGestureDetector","getFocusX","focalY","getFocusY","onPointerDown","event","addToTracker","tryToSendTouchEvent","onPointerAdd","tryBegin","onTouchEvent","onPointerUp","removeFromTracker","pointerId","ACTIVE","end","fail","onPointerRemove","onPointerMove","track","onPointerOutOfBounds","UNDETERMINED","resetProgress","begin","force","onReset"],"sources":["/Users/nextek/Desktop/folder/SwiftPay/node_modules/react-native-gesture-handler/lib/module/web/handlers/PinchGestureHandler.ts"],"sourcesContent":["import { State } from '../../State';\nimport { DEFAULT_TOUCH_SLOP } from '../constants';\nimport { AdaptedEvent, Config } from '../interfaces';\n\nimport GestureHandler from './GestureHandler';\nimport ScaleGestureDetector, {\n  ScaleGestureListener,\n} from '../detectors/ScaleGestureDetector';\n\nexport default class PinchGestureHandler extends GestureHandler {\n  private scale = 1;\n  private velocity = 0;\n\n  private startingSpan = 0;\n  private spanSlop = DEFAULT_TOUCH_SLOP;\n\n  private scaleDetectorListener: ScaleGestureListener = {\n    onScaleBegin: (detector: ScaleGestureDetector): boolean => {\n      this.startingSpan = detector.getCurrentSpan();\n      return true;\n    },\n    onScale: (detector: ScaleGestureDetector): boolean => {\n      const prevScaleFactor: number = this.scale;\n      this.scale *= detector.getScaleFactor(\n        this.tracker.getTrackedPointersCount()\n      );\n\n      const delta = detector.getTimeDelta();\n      if (delta > 0) {\n        this.velocity = (this.scale - prevScaleFactor) / delta;\n      }\n\n      if (\n        Math.abs(this.startingSpan - detector.getCurrentSpan()) >=\n          this.spanSlop &&\n        this.currentState === State.BEGAN\n      ) {\n        this.activate();\n      }\n      return true;\n    },\n    onScaleEnd: (\n      _detector: ScaleGestureDetector\n      // eslint-disable-next-line @typescript-eslint/no-empty-function\n    ): void => {},\n  };\n\n  private scaleGestureDetector: ScaleGestureDetector = new ScaleGestureDetector(\n    this.scaleDetectorListener\n  );\n\n  public init(ref: number, propsRef: React.RefObject<unknown>) {\n    super.init(ref, propsRef);\n\n    this.setShouldCancelWhenOutside(false);\n  }\n\n  public updateGestureConfig({ enabled = true, ...props }: Config): void {\n    super.updateGestureConfig({ enabled: enabled, ...props });\n  }\n\n  protected transformNativeEvent() {\n    return {\n      focalX: this.scaleGestureDetector.getFocusX(),\n      focalY: this.scaleGestureDetector.getFocusY(),\n      velocity: this.velocity,\n      scale: this.scale,\n    };\n  }\n\n  protected onPointerDown(event: AdaptedEvent): void {\n    this.tracker.addToTracker(event);\n    super.onPointerDown(event);\n\n    this.tryToSendTouchEvent(event);\n  }\n\n  protected onPointerAdd(event: AdaptedEvent): void {\n    this.tracker.addToTracker(event);\n    super.onPointerAdd(event);\n    this.tryBegin();\n    this.scaleGestureDetector.onTouchEvent(event, this.tracker);\n  }\n\n  protected onPointerUp(event: AdaptedEvent): void {\n    super.onPointerUp(event);\n    this.tracker.removeFromTracker(event.pointerId);\n    if (this.currentState !== State.ACTIVE) {\n      return;\n    }\n    this.scaleGestureDetector.onTouchEvent(event, this.tracker);\n\n    if (this.currentState === State.ACTIVE) {\n      this.end();\n    } else {\n      this.fail();\n    }\n  }\n\n  protected onPointerRemove(event: AdaptedEvent): void {\n    super.onPointerRemove(event);\n    this.scaleGestureDetector.onTouchEvent(event, this.tracker);\n    this.tracker.removeFromTracker(event.pointerId);\n\n    if (\n      this.currentState === State.ACTIVE &&\n      this.tracker.getTrackedPointersCount() < 2\n    ) {\n      this.end();\n    }\n  }\n\n  protected onPointerMove(event: AdaptedEvent): void {\n    if (this.tracker.getTrackedPointersCount() < 2) {\n      return;\n    }\n    this.tracker.track(event);\n\n    this.scaleGestureDetector.onTouchEvent(event, this.tracker);\n    super.onPointerMove(event);\n  }\n  protected onPointerOutOfBounds(event: AdaptedEvent): void {\n    if (this.tracker.getTrackedPointersCount() < 2) {\n      return;\n    }\n    this.tracker.track(event);\n\n    this.scaleGestureDetector.onTouchEvent(event, this.tracker);\n    super.onPointerOutOfBounds(event);\n  }\n\n  private tryBegin(): void {\n    if (this.currentState !== State.UNDETERMINED) {\n      return;\n    }\n\n    this.resetProgress();\n    this.begin();\n  }\n\n  public activate(force?: boolean): void {\n    if (this.currentState !== State.ACTIVE) {\n      this.resetProgress();\n    }\n\n    super.activate(force);\n  }\n\n  protected onReset(): void {\n    this.resetProgress();\n  }\n\n  protected resetProgress(): void {\n    if (this.currentState === State.ACTIVE) {\n      return;\n    }\n    this.velocity = 0;\n    this.scale = 1;\n  }\n}\n"],"mappings":"iTAAA,OAASA,KAAT,KAAsB,aAAtB,CACA,OAASC,kBAAT,KAAmC,cAAnC,CAGA,MAAO,CAAAC,cAAP,KAA2B,kBAA3B,CACA,MAAO,CAAAC,oBAAP,KAEO,mCAFP,CAIA,cAAe,MAAM,CAAAC,mBAAN,QAAkC,CAAAF,cAAe,CAAAG,YAAA,GAAAC,IAAA,WAAAA,IAAA,EAAAC,eAAA,cAC9C,CAD8C,EAAAA,eAAA,iBAE3C,CAF2C,EAAAA,eAAA,qBAIvC,CAJuC,EAAAA,eAAA,iBAK3CN,kBAL2C,EAAAM,eAAA,8BAOR,CACpDC,YAAY,CAAGC,QAAD,EAA6C,CACzD,KAAKC,YAAL,CAAoBD,QAAQ,CAACE,cAAT,EAApB,CACA,MAAO,KAAP,CACD,CAJmD,CAKpDC,OAAO,CAAGH,QAAD,EAA6C,CACpD,KAAM,CAAAI,eAAuB,CAAG,KAAKC,KAArC,CACA,KAAKA,KAAL,EAAcL,QAAQ,CAACM,cAAT,CACZ,KAAKC,OAAL,CAAaC,uBAAb,EADY,CAAd,CAIA,KAAM,CAAAC,KAAK,CAAGT,QAAQ,CAACU,YAAT,EAAd,CACA,GAAID,KAAK,CAAG,CAAZ,CAAe,CACb,KAAKE,QAAL,CAAgB,CAAC,KAAKN,KAAL,CAAaD,eAAd,EAAiCK,KAAjD,CACD,CAED,GACEG,IAAI,CAACC,GAAL,CAAS,KAAKZ,YAAL,CAAoBD,QAAQ,CAACE,cAAT,EAA7B,GACE,KAAKY,QADP,EAEA,KAAKC,YAAL,GAAsBxB,KAAK,CAACyB,KAH9B,CAIE,CACA,KAAKC,QAAL,GACD,CACD,MAAO,KAAP,CACD,CAxBmD,CAyBpDC,UAAU,CACRC,SADU,EAGD,CAAE,CA5BuC,CAPQ,EAAArB,eAAA,6BAsCT,GAAI,CAAAJ,oBAAJ,CACnD,KAAK0B,qBAD8C,CAtCS,GA0CvDC,IAAIA,CAACC,GAAD,CAAcC,QAAd,CAAkD,CAC3D,MAAMF,IAAN,CAAWC,GAAX,CAAgBC,QAAhB,EAEA,KAAKC,0BAAL,CAAgC,KAAhC,EACD,CAEMC,mBAAmBA,CAAAC,IAAA,CAA6C,IAA5C,CAAEC,OAAO,CAAG,IAAZ,CAAD,CAAAD,IAAA,CAAsBE,KAAA,CAAAC,6BAAA,CAAAH,IAAA,CAAAI,SAAA,EAC9C,MAAML,mBAAN,CAAAM,MAAA,CAAAC,MAAA,EAA4BL,OAAO,CAAEA,OAAX,EAAuBC,KAAA,CAAjD,EACD,CAESK,oBAAoBA,CAAA,CAAG,CAC/B,MAAO,CACLC,MAAM,CAAE,KAAKC,oBAAL,CAA0BC,SAA1B,EADH,CAELC,MAAM,CAAE,KAAKF,oBAAL,CAA0BG,SAA1B,EAFH,CAGL3B,QAAQ,CAAE,KAAKA,QAHV,CAILN,KAAK,CAAE,KAAKA,KAJP,CAAP,CAMD,CAESkC,aAAaA,CAACC,KAAD,CAA4B,CACjD,KAAKjC,OAAL,CAAakC,YAAb,CAA0BD,KAA1B,EACA,MAAMD,aAAN,CAAoBC,KAApB,EAEA,KAAKE,mBAAL,CAAyBF,KAAzB,EACD,CAESG,YAAYA,CAACH,KAAD,CAA4B,CAChD,KAAKjC,OAAL,CAAakC,YAAb,CAA0BD,KAA1B,EACA,MAAMG,YAAN,CAAmBH,KAAnB,EACA,KAAKI,QAAL,GACA,KAAKT,oBAAL,CAA0BU,YAA1B,CAAuCL,KAAvC,CAA8C,KAAKjC,OAAnD,EACD,CAESuC,WAAWA,CAACN,KAAD,CAA4B,CAC/C,MAAMM,WAAN,CAAkBN,KAAlB,EACA,KAAKjC,OAAL,CAAawC,iBAAb,CAA+BP,KAAK,CAACQ,SAArC,EACA,GAAI,KAAKjC,YAAL,GAAsBxB,KAAK,CAAC0D,MAAhC,CAAwC,CACtC,OACD,CACD,KAAKd,oBAAL,CAA0BU,YAA1B,CAAuCL,KAAvC,CAA8C,KAAKjC,OAAnD,EAEA,GAAI,KAAKQ,YAAL,GAAsBxB,KAAK,CAAC0D,MAAhC,CAAwC,CACtC,KAAKC,GAAL,GACD,CAFD,IAEO,CACL,KAAKC,IAAL,GACD,CACF,CAESC,eAAeA,CAACZ,KAAD,CAA4B,CACnD,MAAMY,eAAN,CAAsBZ,KAAtB,EACA,KAAKL,oBAAL,CAA0BU,YAA1B,CAAuCL,KAAvC,CAA8C,KAAKjC,OAAnD,EACA,KAAKA,OAAL,CAAawC,iBAAb,CAA+BP,KAAK,CAACQ,SAArC,EAEA,GACE,KAAKjC,YAAL,GAAsBxB,KAAK,CAAC0D,MAA5B,EACA,KAAK1C,OAAL,CAAaC,uBAAb,GAAyC,CAF3C,CAGE,CACA,KAAK0C,GAAL,GACD,CACF,CAESG,aAAaA,CAACb,KAAD,CAA4B,CACjD,GAAI,KAAKjC,OAAL,CAAaC,uBAAb,GAAyC,CAA7C,CAAgD,CAC9C,OACD,CACD,KAAKD,OAAL,CAAa+C,KAAb,CAAmBd,KAAnB,EAEA,KAAKL,oBAAL,CAA0BU,YAA1B,CAAuCL,KAAvC,CAA8C,KAAKjC,OAAnD,EACA,MAAM8C,aAAN,CAAoBb,KAApB,EACD,CACSe,oBAAoBA,CAACf,KAAD,CAA4B,CACxD,GAAI,KAAKjC,OAAL,CAAaC,uBAAb,GAAyC,CAA7C,CAAgD,CAC9C,OACD,CACD,KAAKD,OAAL,CAAa+C,KAAb,CAAmBd,KAAnB,EAEA,KAAKL,oBAAL,CAA0BU,YAA1B,CAAuCL,KAAvC,CAA8C,KAAKjC,OAAnD,EACA,MAAMgD,oBAAN,CAA2Bf,KAA3B,EACD,CAEOI,QAAQA,CAAA,CAAS,CACvB,GAAI,KAAK7B,YAAL,GAAsBxB,KAAK,CAACiE,YAAhC,CAA8C,CAC5C,OACD,CAED,KAAKC,aAAL,GACA,KAAKC,KAAL,GACD,CAEMzC,QAAQA,CAAC0C,KAAD,CAAwB,CACrC,GAAI,KAAK5C,YAAL,GAAsBxB,KAAK,CAAC0D,MAAhC,CAAwC,CACtC,KAAKQ,aAAL,GACD,CAED,MAAMxC,QAAN,CAAe0C,KAAf,EACD,CAESC,OAAOA,CAAA,CAAS,CACxB,KAAKH,aAAL,GACD,CAESA,aAAaA,CAAA,CAAS,CAC9B,GAAI,KAAK1C,YAAL,GAAsBxB,KAAK,CAAC0D,MAAhC,CAAwC,CACtC,OACD,CACD,KAAKtC,QAAL,CAAgB,CAAhB,CACA,KAAKN,KAAL,CAAa,CAAb,CACD,CArJ6D","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}